{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelectButton = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _ObjectUtils = _interopRequireDefault(require(\"../utils/ObjectUtils\"));\n\nvar _SelectButtonItem = require(\"./SelectButtonItem\");\n\nvar _Tooltip = _interopRequireDefault(require(\"../tooltip/Tooltip\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SelectButton = /*#__PURE__*/function (_Component) {\n  _inherits(SelectButton, _Component);\n\n  function SelectButton(props) {\n    var _this;\n\n    _classCallCheck(this, SelectButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectButton).call(this, props));\n    _this.state = {};\n    _this.onOptionClick = _this.onOptionClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SelectButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.tooltip && prevProps.tooltip !== this.props.tooltip) {\n        if (this.tooltip) this.tooltip.updateContent(this.props.tooltip);else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = new _Tooltip.default({\n        target: this.element,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"onOptionClick\",\n    value: function onOptionClick(event) {\n      var _this2 = this;\n\n      if (this.props.disabled) {\n        return;\n      }\n\n      var selected = this.isSelected(event.option);\n      var optionValue = this.getOptionValue(event.option);\n      var newValue;\n\n      if (this.props.multiple) {\n        var currentValue = this.props.value ? _toConsumableArray(this.props.value) : [];\n        if (selected) newValue = currentValue.filter(function (val) {\n          return !_ObjectUtils.default.equals(val, optionValue, _this2.props.dataKey);\n        });else newValue = [].concat(_toConsumableArray(currentValue), [optionValue]);\n      } else {\n        if (selected) newValue = null;else newValue = optionValue;\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event.originalEvent,\n          value: newValue,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: newValue\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(option) {\n      return this.props.optionLabel ? option : option.value;\n    }\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(option) {\n      return this.props.optionLabel ? _ObjectUtils.default.resolveFieldData(option, this.props.optionLabel) : option.label;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(option) {\n      var selected = false;\n      var optionValue = this.getOptionValue(option);\n\n      if (this.props.multiple) {\n        if (this.props.value && this.props.value.length) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = this.props.value[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var val = _step.value;\n\n              if (_ObjectUtils.default.equals(val, optionValue, this.props.dataKey)) {\n                selected = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      } else {\n        selected = _ObjectUtils.default.equals(this.props.value, optionValue, this.props.dataKey);\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this3 = this;\n\n      if (this.props.options && this.props.options.length) {\n        return this.props.options.map(function (option, index) {\n          var optionLabel = _this3.getOptionLabel(option);\n\n          return _react.default.createElement(_SelectButtonItem.SelectButtonItem, {\n            key: optionLabel,\n            label: optionLabel,\n            option: option,\n            onClick: _this3.onOptionClick,\n            selected: _this3.isSelected(option),\n            tabIndex: _this3.props.tabIndex,\n            disabled: _this3.props.disabled\n          });\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var className = (0, _classnames.default)('p-selectbutton p-buttonset p-component p-buttonset-3', this.props.className);\n      var items = this.renderItems();\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        ref: function ref(el) {\n          return _this4.element = el;\n        }\n      }, _react.default.createElement(\"div\", {\n        className: className,\n        style: this.props.style\n      }, items));\n    }\n  }]);\n\n  return SelectButton;\n}(_react.Component);\n\nexports.SelectButton = SelectButton;\n\n_defineProperty(SelectButton, \"defaultProps\", {\n  id: null,\n  value: null,\n  options: null,\n  optionLabel: null,\n  tabIndex: null,\n  multiple: null,\n  disabled: null,\n  style: null,\n  className: null,\n  dataKey: null,\n  tooltip: null,\n  tooltipOptions: null,\n  onChange: null\n});\n\n_defineProperty(SelectButton, \"propTypes\", {\n  id: _propTypes.default.string,\n  value: _propTypes.default.any,\n  options: _propTypes.default.array,\n  optionLabel: _propTypes.default.string,\n  tabIndex: _propTypes.default.string,\n  multiple: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  dataKey: _propTypes.default.string,\n  tooltip: _propTypes.default.string,\n  tooltipOptions: _propTypes.default.object,\n  onChange: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}