{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Panel = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _UniqueComponentId = _interopRequireDefault(require(\"../utils/UniqueComponentId\"));\n\nvar _reactTransitionGroup = require(\"react-transition-group\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Panel = /*#__PURE__*/function (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel(props) {\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));\n\n    if (!_this.props.onToggle) {\n      _this.state = {\n        collapsed: _this.props.collapsed\n      };\n    }\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.id = _this.props.id || (0, _UniqueComponentId.default)();\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (this.props.toggleable) {\n        var collapsed = this.props.onToggle ? this.props.collapsed : this.state.collapsed;\n        if (collapsed) this.expand(event);else this.collapse(event);\n\n        if (this.props.onToggle) {\n          this.props.onToggle({\n            originalEvent: event,\n            value: !collapsed\n          });\n        }\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(event) {\n      if (!this.props.onToggle) {\n        this.setState({\n          collapsed: false\n        });\n      }\n\n      if (this.props.onExpand) {\n        this.props.onExpand(event);\n      }\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(event) {\n      if (!this.props.onToggle) {\n        this.setState({\n          collapsed: true\n        });\n      }\n\n      if (this.props.onCollapse) {\n        this.props.onCollapse(event);\n      }\n    }\n  }, {\n    key: \"isCollapsed\",\n    value: function isCollapsed() {\n      return this.props.toggleable ? this.props.onToggle ? this.props.collapsed : this.state.collapsed : false;\n    }\n  }, {\n    key: \"renderToggleIcon\",\n    value: function renderToggleIcon(collapsed) {\n      if (this.props.toggleable) {\n        var id = this.id + '_label';\n        var ariaControls = this.id + '_content';\n        var toggleIcon = collapsed ? this.props.expandIcon : this.props.collapseIcon;\n        return _react.default.createElement(\"a\", {\n          href: '#' + ariaControls,\n          className: \"p-panel-titlebar-icon p-panel-titlebar-toggler\",\n          onClick: this.toggle,\n          id: id,\n          \"aria-controls\": ariaControls,\n          \"aria-expanded\": !collapsed,\n          role: \"tab\"\n        }, _react.default.createElement(\"span\", {\n          className: toggleIcon\n        }));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader(collapsed) {\n      if (this.props.header || this.props.toggleable) {\n        var toggleIcon = this.renderToggleIcon(collapsed);\n        return _react.default.createElement(\"div\", {\n          className: \"p-panel-titlebar\"\n        }, _react.default.createElement(\"span\", {\n          className: \"p-panel-title\"\n        }, this.props.header), toggleIcon);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent(collapsed) {\n      var className = (0, _classnames.default)('p-toggleable-content', {\n        'p-toggleable-content-collapsed': collapsed\n      });\n      var id = this.id + '_content';\n      return _react.default.createElement(_reactTransitionGroup.CSSTransition, {\n        classNames: \"p-toggleable-content\",\n        timeout: {\n          enter: 400,\n          exit: 250\n        },\n        in: !this.isCollapsed()\n      }, _react.default.createElement(\"div\", {\n        className: className,\n        \"aria-hidden\": collapsed,\n        role: \"region\"\n      }, _react.default.createElement(\"div\", {\n        id: id,\n        className: \"p-panel-content\"\n      }, this.props.children)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _classnames.default)('p-panel p-component', this.props.className);\n      var collapsed = this.isCollapsed();\n      var header = this.renderHeader(collapsed);\n      var content = this.renderContent(collapsed);\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style\n      }, header, content);\n    }\n  }]);\n\n  return Panel;\n}(_react.Component);\n\nexports.Panel = Panel;\n\n_defineProperty(Panel, \"defaultProps\", {\n  id: null,\n  header: null,\n  toggleable: null,\n  style: null,\n  className: null,\n  collapsed: null,\n  expandIcon: 'pi pi-plus',\n  collapseIcon: 'pi pi-minus',\n  onExpand: null,\n  onCollapse: null,\n  onToggle: null\n});\n\n_defineProperty(Panel, \"propTypes\", {\n  id: _propTypes.default.string,\n  header: _propTypes.default.any,\n  toggleable: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  collapsed: _propTypes.default.bool,\n  expandIcon: _propTypes.default.string,\n  collapseIcon: _propTypes.default.string,\n  onExpand: _propTypes.default.func,\n  onCollapse: _propTypes.default.func,\n  onToggle: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}