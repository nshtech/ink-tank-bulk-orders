{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lightbox = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _DomHandler = _interopRequireDefault(require(\"../utils/DomHandler\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Lightbox = /*#__PURE__*/function (_Component) {\n  _inherits(Lightbox, _Component);\n\n  function Lightbox(props) {\n    var _this;\n\n    _classCallCheck(this, Lightbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Lightbox).call(this, props));\n    _this.state = {\n      visible: false,\n      currentImage: null\n    };\n    _this.next = _this.next.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.prev = _this.prev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onImageLoad = _this.onImageLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTargetClick = _this.onTargetClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Lightbox, [{\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this2 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function (event) {\n          if (_this2.panel && !_this2.panel.contains(event.target)) {\n            _this2.hide();\n          }\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.unbindDocumentClickListener();\n    }\n  }, {\n    key: \"onImageClick\",\n    value: function onImageClick(event, image, i) {\n      this.index = i;\n      this.setState({\n        loading: true\n      });\n      this.content.style.width = 32 + 'px';\n      this.content.style.height = 32 + 'px';\n      this.show();\n      this.displayImage(image);\n      this.preventDocumentClickListener = true;\n      event.preventDefault();\n    }\n  }, {\n    key: \"onTargetClick\",\n    value: function onTargetClick(event) {\n      this.show();\n      event.preventDefault();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.mask = document.createElement('div');\n      this.mask.style.zIndex = String(_DomHandler.default.generateZIndex());\n\n      _DomHandler.default.addMultipleClasses(this.mask, 'p-component-overlay p-dialog-mask');\n\n      document.body.appendChild(this.mask);\n      this.panel.style.zIndex = String(_DomHandler.default.generateZIndex());\n      this.setState({\n        visible: true\n      });\n      this.bindDocumentClickListener();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.index = null;\n      this.setState({\n        currentImage: null\n      });\n\n      if (this.mask) {\n        document.body.removeChild(this.mask);\n        this.mask = null;\n      }\n\n      this.setState({\n        visible: false\n      });\n      this.unbindDocumentClickListener();\n    }\n  }, {\n    key: \"displayImage\",\n    value: function displayImage(image) {\n      var _this3 = this;\n\n      setTimeout(function () {\n        _this3.setState({\n          currentImage: image\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.setState({\n        loading: true\n      });\n\n      if (this.index > 0) {\n        this.displayImage(this.props.images[--this.index]);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.setState({\n        loading: true\n      });\n\n      if (this.index <= this.props.images.length - 1) {\n        this.displayImage(this.props.images[++this.index]);\n      }\n    }\n  }, {\n    key: \"onImageLoad\",\n    value: function onImageLoad(event) {\n      var _this4 = this;\n\n      var image = event.target;\n      image.style.visibility = 'hidden';\n      image.style.display = 'block';\n\n      var imageWidth = _DomHandler.default.getOuterWidth(image);\n\n      var imageHeight = _DomHandler.default.getOuterHeight(image);\n\n      image.style.display = 'none';\n      image.style.visibility = 'visible';\n      this.content.style.width = imageWidth + 'px';\n      this.content.style.height = imageHeight + 'px';\n      this.panel.style.left = parseInt(this.panel.style.left, 10) + (_DomHandler.default.getOuterWidth(this.panel) - imageWidth) / 2 + 'px';\n      this.panel.style.top = parseInt(this.panel.style.top, 10) + (_DomHandler.default.getOuterHeight(this.panel) - imageHeight) / 2 + 'px';\n      setTimeout(function () {\n        _DomHandler.default.fadeIn(image, 500);\n\n        image.style.display = 'block';\n\n        _this4.setState({\n          loading: false\n        });\n      }, parseInt(this.props.effectDuration, 10));\n    }\n  }, {\n    key: \"renderLeftNav\",\n    value: function renderLeftNav() {\n      var className = (0, _classnames.default)('p-lightbox-nav-left p-link', {\n        'p-hidden': !(this.props.images && this.props.images.length && this.index !== 0 && this.state.currentImage)\n      });\n      return _react.default.createElement(\"button\", {\n        className: className,\n        onClick: this.prev\n      }, _react.default.createElement(\"span\", {\n        className: \"p-lightbox-nav-icon pi pi-chevron-left\"\n      }));\n    }\n  }, {\n    key: \"renderRightNav\",\n    value: function renderRightNav() {\n      var className = (0, _classnames.default)('p-lightbox-nav-right p-link', {\n        'p-hidden': !(this.props.images && this.props.images.length && this.index < this.props.images.length - 1 && this.state.currentImage)\n      });\n      return _react.default.createElement(\"button\", {\n        className: className,\n        onClick: this.next\n      }, _react.default.createElement(\"span\", {\n        className: \"p-lightbox-nav-icon pi pi-chevron-right\"\n      }));\n    }\n  }, {\n    key: \"renderImages\",\n    value: function renderImages() {\n      var _this5 = this;\n\n      return _react.default.createElement(\"div\", {\n        style: this.props.style,\n        className: this.props.className\n      }, this.props.images && this.props.images.map(function (image, index) {\n        var imageItem = _react.default.createElement(\"a\", {\n          href: image.source,\n          onClick: function onClick(event) {\n            return _this5.onImageClick(event, image, index);\n          },\n          key: index,\n          className: \"p-lightbox-image-target\"\n        }, _react.default.createElement(\"img\", {\n          src: image.thumbnail,\n          title: image.title,\n          alt: image.alt\n        }));\n\n        return imageItem;\n      }));\n    }\n  }, {\n    key: \"renderTarget\",\n    value: function renderTarget() {\n      if (this.props.target) {\n        return _react.default.createElement(\"span\", {\n          onClick: this.onTargetClick\n        }, this.props.target);\n      } else {\n        return this.renderImages();\n      }\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this6 = this;\n\n      var content;\n\n      if (this.state.visible) {\n        if (this.props.target) content = this.props.children;else content = _react.default.createElement(\"img\", {\n          src: this.state.currentImage ? this.state.currentImage.source : null,\n          onLoad: this.onImageLoad,\n          alt: \"\",\n          style: {\n            display: this.state.loading ? 'none' : 'inline'\n          }\n        });\n      }\n\n      return _react.default.createElement(\"div\", {\n        className: \"p-lightbox-content\",\n        ref: function ref(el) {\n          return _this6.content = el;\n        },\n        style: {\n          transitionDuration: this.props.effectDuration,\n          transitionTimingFunction: this.props.easing\n        }\n      }, content);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var leftButton = this.renderLeftNav();\n      var rightButton = this.renderRightNav();\n      var target = this.renderTarget();\n      var content = this.renderContent();\n      var containerClassName = (0, _classnames.default)('p-lightbox p-component p-hidden', {\n        'p-lightbox-loading': this.state.loading\n      });\n      return _react.default.createElement(\"div\", {\n        id: this.props.id\n      }, target, _react.default.createElement(\"div\", {\n        className: containerClassName,\n        style: {\n          transitionProperty: 'all',\n          transitionDuration: this.props.effectDuration,\n          transitionTimingFunction: this.props.easing,\n          display: this.state.visible ? 'block' : 'none'\n        },\n        ref: function ref(el) {\n          return _this7.panel = el;\n        }\n      }, _react.default.createElement(\"div\", {\n        className: \"p-lightbox-content-wrapper\"\n      }, leftButton, content, rightButton)));\n    }\n  }]);\n\n  return Lightbox;\n}(_react.Component);\n\nexports.Lightbox = Lightbox;\n\n_defineProperty(Lightbox, \"defaultProps\", {\n  id: null,\n  images: null,\n  target: null,\n  style: null,\n  className: null,\n  easing: 'ease-out',\n  effectDuration: '500ms'\n});\n\n_defineProperty(Lightbox, \"propTypes\", {\n  id: _propTypes.default.string,\n  images: _propTypes.default.array,\n  target: _propTypes.default.any,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  easing: _propTypes.default.string,\n  effectDuration: _propTypes.default.string\n});","map":null,"metadata":{},"sourceType":"script"}