{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OrganizationChart = exports.OrganizationChartNode = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar OrganizationChartNode = /*#__PURE__*/function (_Component) {\n  _inherits(OrganizationChartNode, _Component);\n\n  function OrganizationChartNode(props) {\n    var _this;\n\n    _classCallCheck(this, OrganizationChartNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrganizationChartNode).call(this, props));\n    _this.node = _this.props.node;\n    _this.state = {\n      expanded: _this.node.expanded\n    };\n    return _this;\n  }\n\n  _createClass(OrganizationChartNode, [{\n    key: \"getLeaf\",\n    value: function getLeaf() {\n      return this.node.leaf === false ? false : !(this.node.children && this.node.children.length);\n    }\n  }, {\n    key: \"getColspan\",\n    value: function getColspan() {\n      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n    }\n  }, {\n    key: \"onNodeClick\",\n    value: function onNodeClick(event, node) {\n      this.props.onNodeClick(event, node);\n    }\n  }, {\n    key: \"toggleNode\",\n    value: function toggleNode(event, node) {\n      var _expanded = !this.state.expanded;\n\n      this.setState({\n        expanded: _expanded\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected() {\n      return this.props.isSelected(this.node);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.node = this.props.node;\n      var colspan = this.getColspan();\n\n      var nodeStyleClass = (0, _classnames.default)('p-organizationchart-node-content', this.node.className, {\n        'p-organizationchart-selectable-node': this.props.selectionMode && this.node.selectable !== false,\n        'p-highlight': this.isSelected()\n      }),\n          nodeLabel = this.props.nodeTemplate && this.props.nodeTemplate(this.node) ? _react.default.createElement(\"div\", null, this.props.nodeTemplate(this.node)) : _react.default.createElement(\"div\", null, this.node.label),\n          toggleIcon = (0, _classnames.default)('p-node-toggler-icon', {\n        'pi pi-chevron-down': this.state.expanded,\n        'pi pi-chevron-up': !this.state.expanded\n      }),\n          nodeContent = _react.default.createElement(\"tr\", null, _react.default.createElement(\"td\", {\n        colSpan: colspan\n      }, _react.default.createElement(\"div\", {\n        className: nodeStyleClass,\n        onClick: function onClick(e) {\n          return _this2.onNodeClick(e, _this2.node);\n        }\n      }, nodeLabel, !this.getLeaf() && _react.default.createElement(\"button\", {\n        className: \"p-node-toggler p-link\",\n        onClick: function onClick(e) {\n          return _this2.toggleNode(e, _this2.node);\n        }\n      }, _react.default.createElement(\"i\", {\n        className: toggleIcon\n      })))));\n\n      var _visibility = !this.getLeaf() && this.state.expanded ? 'inherit' : 'hidden',\n          linesDown = _react.default.createElement(\"tr\", {\n        style: {\n          visibility: _visibility\n        },\n        className: \"p-organizationchart-lines\"\n      }, _react.default.createElement(\"td\", {\n        colSpan: colspan\n      }, _react.default.createElement(\"div\", {\n        className: \"p-organizationchart-line-down\"\n      }))),\n          nodeChildLength = this.node.children && this.node.children.length,\n          linesMiddle = _react.default.createElement(\"tr\", {\n        style: {\n          visibility: _visibility\n        },\n        className: \"p-organizationchart-lines\"\n      }, this.node.children && this.node.children.map(function (item, index) {\n        var leftClass = (0, _classnames.default)('p-organizationchart-line-left', {\n          'p-organizationchart-line-top': index !== 0\n        }),\n            rightClass = (0, _classnames.default)('p-organizationchart-line-right', {\n          'p-organizationchart-line-top': index !== nodeChildLength - 1\n        });\n        return [_react.default.createElement(\"td\", {\n          key: index + '_lineleft',\n          className: leftClass\n        }, \"\\xA0\"), _react.default.createElement(\"td\", {\n          key: index + '_lineright',\n          className: rightClass\n        }, \"\\xA0\")];\n      })),\n          childNodes = _react.default.createElement(\"tr\", {\n        style: {\n          visibility: _visibility\n        },\n        className: \"p-organizationchart-nodes\"\n      }, this.node.children && this.node.children.map(function (child, index) {\n        return _react.default.createElement(\"td\", {\n          key: index,\n          colSpan: \"2\"\n        }, _react.default.createElement(OrganizationChartNode, {\n          node: child,\n          nodeTemplate: _this2.props.nodeTemplate,\n          selectionMode: _this2.props.selectionMode,\n          onNodeClick: _this2.props.onNodeClick,\n          isSelected: _this2.props.isSelected\n        }));\n      }));\n\n      return _react.default.createElement(\"table\", {\n        className: \"p-organizationchart-table\"\n      }, _react.default.createElement(\"tbody\", null, nodeContent, linesDown, linesMiddle, childNodes));\n    }\n  }]);\n\n  return OrganizationChartNode;\n}(_react.Component);\n\nexports.OrganizationChartNode = OrganizationChartNode;\n\n_defineProperty(OrganizationChartNode, \"defaultProps\", {\n  node: null,\n  nodeTemplate: null,\n  root: false,\n  first: false,\n  last: false,\n  selectionMode: null,\n  onNodeClick: null,\n  isSelected: null\n});\n\n_defineProperty(OrganizationChartNode, \"propTypes\", {\n  node: _propTypes.default.any,\n  nodeTemplate: _propTypes.default.any,\n  root: _propTypes.default.bool,\n  first: _propTypes.default.bool,\n  last: _propTypes.default.bool,\n  selectionMode: _propTypes.default.string,\n  onNodeClick: _propTypes.default.func,\n  isSelected: _propTypes.default.func\n});\n\nvar OrganizationChart = /*#__PURE__*/function (_Component2) {\n  _inherits(OrganizationChart, _Component2);\n\n  function OrganizationChart(props) {\n    var _this3;\n\n    _classCallCheck(this, OrganizationChart);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(OrganizationChart).call(this, props));\n    _this3.root = _this3.props.value && _this3.props.value.length ? _this3.props.value[0] : null;\n    _this3.onNodeClick = _this3.onNodeClick.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.isSelected = _this3.isSelected.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(OrganizationChart, [{\n    key: \"onNodeClick\",\n    value: function onNodeClick(event, node) {\n      if (this.props.selectionMode) {\n        var eventTarget = event.target;\n\n        if (eventTarget.className && (eventTarget.className.indexOf('p-node-toggler') !== -1 || eventTarget.className.indexOf('p-node-toggler-icon') !== -1)) {\n          return;\n        }\n\n        if (node.selectable === false) {\n          return;\n        }\n\n        var index = this.findIndexInSelection(node);\n        var selected = index >= 0;\n        var selection;\n\n        if (this.props.selectionMode === 'single') {\n          if (selected) {\n            selection = null;\n\n            if (this.props.onNodeUnselect) {\n              this.props.onNodeUnselect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          } else {\n            selection = node;\n\n            if (this.props.onNodeSelect) {\n              this.props.onNodeSelect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          }\n        } else if (this.props.selectionMode === 'multiple') {\n          if (selected) {\n            selection = this.props.selection.filter(function (val, i) {\n              return i !== index;\n            });\n\n            if (this.props.onNodeUnselect) {\n              this.props.onNodeUnselect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          } else {\n            selection = [].concat(_toConsumableArray(this.props.selection || []), [node]);\n\n            if (this.props.onNodeSelect) {\n              this.props.onNodeSelect({\n                originalEvent: event,\n                node: node\n              });\n            }\n          }\n        }\n\n        if (this.props.onSelectionChange) {\n          this.props.onSelectionChange({\n            originalEvent: event,\n            data: selection\n          });\n        }\n      }\n    }\n  }, {\n    key: \"findIndexInSelection\",\n    value: function findIndexInSelection(node) {\n      var index = -1;\n\n      if (this.props.selectionMode && this.props.selection) {\n        if (this.props.selectionMode === 'single') {\n          index = this.props.selection === node ? 0 : -1;\n        } else if (this.props.selectionMode === 'multiple') {\n          for (var i = 0; i < this.props.selection.length; i++) {\n            if (this.props.selection[i] === node) {\n              index = i;\n              break;\n            }\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(node) {\n      return this.findIndexInSelection(node) !== -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.root = this.props.value && this.props.value.length ? this.props.value[0] : null;\n      var className = (0, _classnames.default)('p-organizationchart p-component', this.props.className);\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        style: this.props.style,\n        className: className\n      }, _react.default.createElement(OrganizationChartNode, {\n        node: this.root,\n        nodeTemplate: this.props.nodeTemplate,\n        selectionMode: this.props.selectionMode,\n        onNodeClick: this.onNodeClick,\n        isSelected: this.isSelected\n      }));\n    }\n  }]);\n\n  return OrganizationChart;\n}(_react.Component);\n\nexports.OrganizationChart = OrganizationChart;\n\n_defineProperty(OrganizationChart, \"defaultProps\", {\n  id: null,\n  value: null,\n  style: null,\n  className: null,\n  selectionMode: null,\n  selection: null,\n  nodeTemplate: null,\n  onSelectionChange: null,\n  onNodeSelect: null,\n  onNodeUnselect: null\n});\n\n_defineProperty(OrganizationChart, \"propTypes\", {\n  id: _propTypes.default.string,\n  value: _propTypes.default.any,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  selectionMode: _propTypes.default.string,\n  selection: _propTypes.default.any,\n  nodeTemplate: _propTypes.default.any,\n  onSelectionChange: _propTypes.default.func,\n  onNodeSelect: _propTypes.default.func,\n  onNodeUnselect: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}