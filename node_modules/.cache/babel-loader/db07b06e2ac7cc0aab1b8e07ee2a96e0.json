{"ast":null,"code":"import _objectSpread from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderSearch.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { RadioButton } from 'primereact/radiobutton';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var OrderSearch = /*#__PURE__*/function (_Component) {\n  _inherits(OrderSearch, _Component);\n\n  var _super = _createSuper(OrderSearch);\n\n  function OrderSearch() {\n    var _this;\n\n    _classCallCheck(this, OrderSearch);\n\n    _this = _super.call(this);\n    _this.state = {\n      customers: [],\n      bulk_orders: [],\n      selectedCustomer: null,\n      selectedOrder: null,\n      editing: false,\n      newplanYear: null,\n      newplanQuarter: null,\n      newmax: null,\n      newreshall: null,\n      newphone: null,\n      newemail: null,\n      newactive: null,\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planSelectQuarter: [{\n        label: 'Full Year',\n        value: '-F-W-S'\n      }, {\n        label: 'Winter/Spring Quarter',\n        value: '-W-S'\n      }, {\n        label: 'Fall Quarter',\n        value: '-F'\n      }, {\n        label: 'Winter Quarter',\n        value: '-W'\n      }, {\n        label: 'Spring Quarter',\n        value: '-S'\n      }],\n      planSelectWeight: [{\n        label: '15 lb/week',\n        value: '15'\n      }, {\n        label: '20 lb/week',\n        value: '20'\n      }, {\n        label: '25 lb/week',\n        value: '25'\n      }],\n      planSelectReshall: [{\n        label: 'Choose later',\n        value: 'Choose later'\n      }, {\n        label: '560 Lincoln',\n        value: '560 Lincoln'\n      }, {\n        label: '720 Emerson',\n        value: '720 Emerson'\n      }, {\n        label: '1715 Chicago',\n        value: '1715 Chicago'\n      }, {\n        label: '1838 Chicago',\n        value: '1838 Chicago'\n      }, {\n        label: '1856 Orrington',\n        value: '1856 Orrington'\n      }, {\n        label: '2303 Sheridan',\n        value: '2303 Sheridan'\n      }, {\n        label: 'Ayers',\n        value: 'Ayers'\n      }, {\n        label: 'Allison',\n        value: 'Allison'\n      }, {\n        label: 'Bobb',\n        value: 'Bobb'\n      }, {\n        label: 'Chapin',\n        value: 'Chapin'\n      }, {\n        label: 'East Fairchild',\n        value: 'East Fairchild'\n      }, {\n        label: 'Elder',\n        value: 'Elder'\n      }, {\n        label: 'West Fairchild',\n        value: 'West Fairchild'\n      }, {\n        label: 'Foster-Walker (PLEX)',\n        value: 'Foster-Walker (PLEX)'\n      }, {\n        label: 'Goodrich',\n        value: 'Goodrich'\n      }, {\n        label: 'Hobart',\n        value: 'Hobart'\n      }, {\n        label: 'Jones',\n        value: 'Jones'\n      }, {\n        label: 'Kemper',\n        value: 'Kemper'\n      }, {\n        label: 'McCulloch',\n        value: 'McCulloch'\n      }, {\n        label: 'PARC (North Mid Quads)',\n        value: 'PARC (North Mid Quads)'\n      }, {\n        label: 'Rogers House',\n        value: 'Rogers House'\n      }, {\n        label: 'Sargent',\n        value: 'Sargent'\n      }, {\n        label: 'Shepard Residential College (South Mid Quads)',\n        value: 'Shepard Residential College (South Mid Quads)'\n      }, {\n        label: 'Shepard Hall',\n        value: 'Shepard Hall'\n      }, {\n        label: 'Slivka',\n        value: 'Slivka'\n      }, {\n        label: 'Willard',\n        value: 'Willard'\n      }, {\n        label: 'Delta Gamma',\n        value: 'Delta Gamma'\n      }, {\n        label: 'Kappa Kappa Gamma',\n        value: 'Kappa Kappa Gamma'\n      }, {\n        label: 'Zeta Beta Tau (ZBT)',\n        value: 'Zeta Beta Tau (ZBT)'\n      }]\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this)); // this.onPlanYearValueChange = this.onPlanYearValueChange.bind(this)\n    // this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this)\n\n    _this.getBulkOrderHistory = _this.getBulkOrderHistory.bind(_assertThisInitialized(_this)); //this.displayPlanQuarters = this.displayPlanQuarters.bind(this)\n\n    _this.resetNewInfo = _this.resetNewInfo.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(OrderSearch, [{\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      });\n      this.resetNewInfo();\n    }\n  }, {\n    key: \"save\",\n    value: function save(bulk_order) {\n      this.setState({\n        editing: false\n      }); //console.log(this.state.newplan)\n\n      var allbulk_orders = _toConsumableArray(this.state.bulk_orders);\n\n      var newbulk_order = _objectSpread({}, this.state.selectedOrder);\n\n      if (this.state.newplanYear && this.state.newplanQuarter) {\n        newbulk_order.plan = this.state.newplanYear + this.state.newplanQuarter; //console.log('newplanQuarter: ', this.state.newplanQuarter);\n        //console.log('newplanYear', this.state.newplanYear)\n\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/plan').set(newbulk_order.plan);\n      } else if (this.state.newplanYear) {\n        newbulk_order.plan = this.state.newplanYear + bulk_order.plan.substring(9); //console.log('newbulk_order.plan: ', newbulk_order.plan);\n        //console.log('newplanYear', this.state.newplanYear)\n        //console.log('bulk_order quarter: ', bulk_order.plan.substring(9));\n\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/plan').set(newbulk_order.plan);\n      } else if (this.state.newplanQuarter) {\n        newbulk_order.plan = bulk_order.plan.substring(0, 9) + this.state.newplanQuarter; //console.log('newbulk_order.plan: ', newbulk_order.plan);\n        //console.log('bulk_order year', bulk_order.plan.substring(0,9))\n        //console.log('newplanQuarter: ', this.state.newplanQuarter);\n\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/plan').set(newbulk_order.plan);\n      }\n\n      if (this.state.newmax) {\n        newbulk_order.maxweight = this.state.newmax;\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/maxweight').set(newbulk_order.maxweight);\n      }\n\n      if (this.state.newreshall) {\n        newbulk_order.reshall = this.state.newreshall;\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/reshall').set(newbulk_order.reshall);\n      }\n\n      if (this.state.newphone) {\n        newbulk_order.phone = this.state.newphone;\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/phone').set(newbulk_order.phone);\n      }\n\n      if (this.state.newemail) {\n        newbulk_order.email = this.state.newemail;\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/email').set(newbulk_order.email);\n      }\n\n      if (this.state.newactive) {\n        newbulk_order.active = this.state.newactive;\n        firebase.database().ref('/bulk_orders/' + bulk_order.id + '/active').set(newbulk_order.active);\n      }\n\n      var count = 0;\n      var individual = null;\n      allbulk_orders.map(function (each) {\n        if (newbulk_order.id === each.id) {\n          individual = _objectSpread({}, allbulk_orders[count]);\n          individual = newbulk_order;\n          allbulk_orders[count] = individual;\n        }\n\n        count = count + 1;\n      });\n      this.setState({\n        bulk_orders: allbulk_orders\n      });\n      this.setState({\n        selectedOrder: newbulk_order\n      });\n    } //CUSTOMER INFORMATION EDITING\n\n  }, {\n    key: \"onPlanYearValueChange\",\n    value: function onPlanYearValueChange(value) {\n      //console.log('newPlanYear: ', value)\n      this.setState({\n        newplanYear: value\n      });\n    }\n  }, {\n    key: \"onPlanQuarterValueChange\",\n    value: function onPlanQuarterValueChange(value) {\n      //console.log('newPlanQuarter: ', value)\n      this.setState({\n        newplanQuarter: value\n      });\n    }\n  }, {\n    key: \"onMaxweightValueChange\",\n    value: function onMaxweightValueChange(value) {\n      this.setState({\n        newmax: value\n      });\n    }\n  }, {\n    key: \"onReshallValueChange\",\n    value: function onReshallValueChange(value) {\n      this.setState({\n        newreshall: value\n      });\n    }\n  }, {\n    key: \"onPhoneValueChange\",\n    value: function onPhoneValueChange(value) {\n      if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n        this.setState({\n          newphone: value\n        });\n      }\n    }\n  }, {\n    key: \"onEmailValueChange\",\n    value: function onEmailValueChange(value) {\n      if (value.includes('@') && value.includes('.')) {\n        this.setState({\n          newemail: value\n        });\n      }\n    }\n  }, {\n    key: \"onActiveValueChange\",\n    value: function onActiveValueChange(value) {\n      this.setState({\n        newactive: value\n      });\n    }\n  }, {\n    key: \"getBulkOrderHistory\",\n    value: function getBulkOrderHistory(bulk_order) {\n      var history = [];\n      firebase.database().ref('/orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var cid = childSnapshot.key;\n          var res = cid.split('-'); //console.log(res[1])\n\n          if (res[1] === bulk_order.id) {\n            history.push(childSnapshot.toJSON());\n          }\n        });\n      }); //console.log(history)\n\n      return history;\n    } // displayPlanQuarters(customerPlan) {\n    //     if (customerPlan) {\n    //         if (customerPlan === 'F') {\n    //             const result = 'Fall Quarter';\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'W') {\n    //             const result = 'Winter Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'S') {\n    //             const result = 'Spring Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'F-W-S') {\n    //             const result = 'Full Year' ;\n    //             return result;\n    //         }\n    //     }\n    // }\n\n  }, {\n    key: \"resetNewInfo\",\n    value: function resetNewInfo() {\n      this.setState({\n        newplanYear: null\n      });\n      this.setState({\n        newplanQuarter: null\n      });\n      this.setState({\n        newmax: null\n      });\n      this.setState({\n        newreshall: null\n      });\n      this.setState({\n        newphone: null\n      });\n      this.setState({\n        newemail: null\n      });\n      this.setState({\n        newactive: null\n      });\n    }\n    /* --------------- Filters ---------------- */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var customerArray = [];\n      firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          customerArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        bulk_orders: customerArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.selectedOrder) {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 26\n          }\n        });\n        var bulk_order = this.state.selectedOrder;\n        var history = this.getBulkOrderHistory(bulk_order);\n        var laundryStatusDisplay = {\n          'picked-up': 'picked up',\n          'delivered-to-SH': 'delivered to SH',\n          'delivered-to-dorm': 'delivered to dorm',\n          'out-of-service': 'out of service',\n          'bag-missing': 'bag missing'\n        };\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-search\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.bulk_orders,\n          ref: function ref(el) {\n            _this2.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          selectionMode: \"single\",\n          responsive: true,\n          autoLayout: true,\n          selection: this.state.selectedOrder,\n          onSelectionChange: function onSelectionChange(e) {\n            return _this2.setState({\n              selectedOrder: e.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"order_id\",\n          header: \"ID\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search id\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"organization\",\n          header: \"Organization\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }\n        }, \"  \", /*#__PURE__*/React.createElement(\"p\", {\n          className: bulk_order.active,\n          style: {\n            marginRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 55\n          }\n        }, \"Active: \", bulk_order.active), /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }\n        }, bulk_order.name), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            minWidth: '50%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }\n        }, \"Account Information\"), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }\n        }, \"Order ID: \", bulk_order.order_id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }\n        }, \"Organization: \", bulk_order.organization), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }\n        }, \"Blank: \", bulk_order.blank), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }\n        }, \"Shipping Address: \", bulk_order.ship_address), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }\n        }, \"Design: \", bulk_order.design), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }\n        }, \"Tax Exempt: \", bulk_order.tax_exempt)), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            minWidth: '50%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 33\n          }\n        }, \"Contact Information\"), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 33\n          }\n        }, \"Email: \", bulk_order.email), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBlockStart: 0,\n            marginBlockEnd: '0.25em',\n            paddingRight: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }\n        }, \"Phone: \", bulk_order.phone)))));\n      } else {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 26\n          }\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-search\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.bulk_orders,\n          ref: function ref(el) {\n            _this2.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          selectionMode: \"single\",\n          responsive: true,\n          autoLayout: true,\n          selection: this.state.selectedOrder,\n          onSelectionChange: function onSelectionChange(e) {\n            return _this2.setState({\n              selectedOrder: e.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"order_id\",\n          header: \"ID\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search id\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"organization\",\n          header: \"Organization\",\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }\n        }, \"Select an Order\")));\n      }\n    }\n  }]);\n\n  return OrderSearch;\n}(Component);","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderSearch.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","ToggleButton","RadioButton","firebase","validator","customerData","OrderSearch","state","customers","bulk_orders","selectedCustomer","selectedOrder","editing","newplanYear","newplanQuarter","newmax","newreshall","newphone","newemail","newactive","planSelectYear","label","value","planSelectQuarter","planSelectWeight","planSelectReshall","edit","bind","save","getBulkOrderHistory","resetNewInfo","setState","bulk_order","allbulk_orders","newbulk_order","plan","database","ref","id","set","substring","maxweight","reshall","phone","email","active","count","individual","map","each","length","includes","history","on","snapshot","forEach","childSnapshot","cid","key","res","split","push","toJSON","customerArray","header","textAlign","laundryStatusDisplay","display","el","dt","marginBottom","e","marginRight","name","minWidth","marginBlockStart","marginBlockEnd","paddingRight","order_id","organization","blank","ship_address","design","tax_exempt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { Chart } from 'primereact/chart'\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport {ToggleButton} from 'primereact/togglebutton';\nimport {RadioButton} from 'primereact/radiobutton';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class OrderSearch extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            bulk_orders: [],\n            selectedCustomer: null,\n            selectedOrder: null,\n            editing: false,\n            newplanYear: null,\n            newplanQuarter: null,\n            newmax: null,\n            newreshall: null,\n            newphone: null,\n            newemail: null,\n            newactive: null,\n            planSelectYear: [\n                {label: '2020-2021', value: '2020-2021'},\n                {label: '2021-2022', value: '2021-2022'},\n                {label: '2022-2023', value: '2022-2023'},\n                {label: '2023-2024', value: '2023-2024'}\n            ],\n            planSelectQuarter: [\n                {label: 'Full Year', value: '-F-W-S'},\n                {label: 'Winter/Spring Quarter', value: '-W-S'},\n                {label: 'Fall Quarter', value: '-F'},\n                {label: 'Winter Quarter', value: '-W'},\n                {label: 'Spring Quarter', value: '-S'},\n            ],\n            planSelectWeight: [\n                {label: '15 lb/week', value: '15'},\n                {label: '20 lb/week', value: '20'},\n                {label: '25 lb/week', value: '25'},\n            ],\n            planSelectReshall:[\n                {label: 'Choose later', value: 'Choose later'},\n                {label: '560 Lincoln', value: '560 Lincoln'},\n                {label: '720 Emerson', value: '720 Emerson'},\n                {label: '1715 Chicago', value: '1715 Chicago'},\n                {label: '1838 Chicago', value: '1838 Chicago'},\n                {label: '1856 Orrington', value: '1856 Orrington'},\n                {label: '2303 Sheridan', value: '2303 Sheridan'},\n                {label: 'Ayers', value: 'Ayers'},\n                {label: 'Allison', value: 'Allison'},\n                {label: 'Bobb', value: 'Bobb'},\n                {label: 'Chapin', value: 'Chapin'},\n                {label: 'East Fairchild', value: 'East Fairchild'},\n                {label: 'Elder', value: 'Elder'},\n                {label: 'West Fairchild', value: 'West Fairchild'},\n                {label: 'Foster-Walker (PLEX)', value: 'Foster-Walker (PLEX)'},\n                {label: 'Goodrich', value: 'Goodrich'},\n                {label: 'Hobart', value: 'Hobart'},\n                {label: 'Jones', value: 'Jones'},\n                {label: 'Kemper', value: 'Kemper'},\n                {label: 'McCulloch', value: 'McCulloch'},\n                {label: 'PARC (North Mid Quads)', value: 'PARC (North Mid Quads)'},\n                {label: 'Rogers House', value: 'Rogers House'},\n                {label: 'Sargent', value: 'Sargent'},\n                {label: 'Shepard Residential College (South Mid Quads)', value: 'Shepard Residential College (South Mid Quads)'},\n                {label: 'Shepard Hall', value: 'Shepard Hall'},\n                {label: 'Slivka', value: 'Slivka'},\n                {label: 'Willard', value: 'Willard'},\n                {label: 'Delta Gamma', value: 'Delta Gamma'},\n                {label: 'Kappa Kappa Gamma', value: 'Kappa Kappa Gamma'},\n                { label: 'Zeta Beta Tau (ZBT)', value: 'Zeta Beta Tau (ZBT)'}\n            ]\n\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        // this.onPlanYearValueChange = this.onPlanYearValueChange.bind(this)\n        // this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this)\n        this.getBulkOrderHistory = this.getBulkOrderHistory.bind(this)\n        //this.displayPlanQuarters = this.displayPlanQuarters.bind(this)\n        this.resetNewInfo = this.resetNewInfo.bind(this)\n    }\n\n    edit() {\n        this.setState({ editing: true });\n        this.resetNewInfo();\n    }\n\n    save(bulk_order) {\n        this.setState({ editing: false });\n        //console.log(this.state.newplan)\n        let allbulk_orders = [...this.state.bulk_orders];\n        let newbulk_order = {...this.state.selectedOrder};\n        if (this.state.newplanYear && this.state.newplanQuarter) {\n             newbulk_order.plan = this.state.newplanYear+this.state.newplanQuarter;\n             //console.log('newplanQuarter: ', this.state.newplanQuarter);\n             //console.log('newplanYear', this.state.newplanYear)\n             firebase.database().ref('/bulk_orders/' + bulk_order.id + '/plan').set(newbulk_order.plan);\n        }\n        else if (this.state.newplanYear) {\n            newbulk_order.plan = this.state.newplanYear+bulk_order.plan.substring(9);\n            //console.log('newbulk_order.plan: ', newbulk_order.plan);\n            //console.log('newplanYear', this.state.newplanYear)\n            //console.log('bulk_order quarter: ', bulk_order.plan.substring(9));\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/plan').set(newbulk_order.plan);\n       }\n       else if (this.state.newplanQuarter) {\n            newbulk_order.plan = bulk_order.plan.substring(0,9)+this.state.newplanQuarter;\n            //console.log('newbulk_order.plan: ', newbulk_order.plan);\n            //console.log('bulk_order year', bulk_order.plan.substring(0,9))\n            //console.log('newplanQuarter: ', this.state.newplanQuarter);\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/plan').set(newbulk_order.plan);\n   }\n        if (this.state.newmax) {\n            newbulk_order.maxweight = this.state.newmax;\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/maxweight').set(newbulk_order.maxweight);\n       }\n        if (this.state.newreshall) {\n            newbulk_order.reshall = this.state.newreshall;\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/reshall').set(newbulk_order.reshall);\n        }\n        if (this.state.newphone) {\n            newbulk_order.phone = this.state.newphone;\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/phone').set(newbulk_order.phone);\n        }\n        if (this.state.newemail) {\n            newbulk_order.email = this.state.newemail;\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/email').set(newbulk_order.email)\n        }\n        if (this.state.newactive) {\n            newbulk_order.active = this.state.newactive;\n            firebase.database().ref('/bulk_orders/' + bulk_order.id + '/active').set(newbulk_order.active)\n        }\n        let count = 0;\n        let individual=null;\n        allbulk_orders.map(each => {\n            if (newbulk_order.id === each.id) {\n                individual = {...allbulk_orders[count]};\n                individual= newbulk_order;\n                allbulk_orders[count] = individual;\n            }\n            count = count+1\n        })\n        this.setState({ bulk_orders: allbulk_orders });\n        this.setState({selectedOrder: newbulk_order});\n\n    }\n\n    //CUSTOMER INFORMATION EDITING\n    onPlanYearValueChange(value) {\n        //console.log('newPlanYear: ', value)\n        this.setState({ newplanYear: value });\n    }\n    onPlanQuarterValueChange(value) {\n        //console.log('newPlanQuarter: ', value)\n        this.setState({ newplanQuarter: value });\n    }\n    onMaxweightValueChange(value) {\n        this.setState({ newmax: value });\n    }\n    onReshallValueChange(value) {\n        this.setState({ newreshall: value });\n    }\n    onPhoneValueChange(value) {\n        if(value[3] ==='-' && value[7] ==='-' && value.length===12) {\n            this.setState({ newphone: value });\n        }\n    }\n    onEmailValueChange(value) {\n        if (value.includes('@') && value.includes('.')) {\n            this.setState({ newemail: value });\n        }\n    }\n    onActiveValueChange(value) {\n        this.setState({ newactive:value})\n\n\n    }\n\n    getBulkOrderHistory(bulk_order) {\n        var history = []\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                var cid = childSnapshot.key;\n                var res = cid.split('-');\n                //console.log(res[1])\n                if (res[1] === bulk_order.id) {\n                    history.push(childSnapshot.toJSON())\n                }\n            });\n        });\n        //console.log(history)\n        return history;\n    }\n\n    // displayPlanQuarters(customerPlan) {\n    //     if (customerPlan) {\n\n    //         if (customerPlan === 'F') {\n    //             const result = 'Fall Quarter';\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'W') {\n    //             const result = 'Winter Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'S') {\n    //             const result = 'Spring Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'F-W-S') {\n    //             const result = 'Full Year' ;\n    //             return result;\n    //         }\n    //     }\n    // }\n\n    resetNewInfo() {\n        this.setState({ newplanYear: null });\n        this.setState({ newplanQuarter: null });\n        this.setState({ newmax: null });\n        this.setState({ newreshall: null });\n        this.setState({ newphone: null });\n        this.setState({ newemail: null });\n        this.setState({ newactive: null })\n    }\n\n    /* --------------- Filters ---------------- */\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ bulk_orders: customerArray });\n    }\n\n    render() {\n        if (this.state.selectedOrder) {\n            var header = <div style={{ textAlign: 'left' }}></div>\n            var bulk_order = this.state.selectedOrder\n            var history = this.getBulkOrderHistory(bulk_order)\n            var laundryStatusDisplay = {\n                'picked-up': 'picked up',\n                'delivered-to-SH': 'delivered to SH',\n                'delivered-to-dorm': 'delivered to dorm',\n                'out-of-service': 'out of service',\n                'bag-missing': 'bag missing'\n            }\n\n            return (\n                <div style={{display: 'flex'}}>\n                    <div className=\"card card-search\">\n                        <DataTable value={this.state.bulk_orders} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} selectionMode=\"single\"\n                            responsive={true} autoLayout={true} selection={this.state.selectedOrder} onSelectionChange={e => this.setState({ selectedOrder: e.value })}>\n                            <Column field=\"order_id\" header=\"ID\" sortable={true} filter filterPlaceholder=\"Search id\"/>\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search name\" />\n                            <Column field=\"organization\" header=\"Organization\" sortable filter filterPlaceholder=\"Search name\" />\n                        </DataTable>\n                    </div>\n                    <div className=\"card card-list\">  <p className={bulk_order.active} style={{ marginRight: 15 }}>Active: {bulk_order.active}</p>\n                        <h1>{bulk_order.name}</h1>\n                        <div style={{ display: 'flex' }}>\n                            <div style={{ minWidth: '50%'  }}>\n                                <h3 style={{ marginBlockStart: 0, marginBlockEnd: '0.25em' }}>Account Information</h3>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Order ID: {bulk_order.order_id}</p>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Organization: {bulk_order.organization}</p>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Blank: {bulk_order.blank}</p>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Shipping Address: {bulk_order.ship_address}</p>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Design: {bulk_order.design}</p>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Tax Exempt: {bulk_order.tax_exempt}</p>\n                            \n                            </div>\n                            <div style={{ minWidth: '50%' }}>\n                                <h3 style={{ marginBlockStart: 0, marginBlockEnd: '0.25em' }}>Contact Information</h3>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Email: {bulk_order.email}</p>\n                                <p style={{ marginBlockStart: 0, marginBlockEnd: '0.25em', paddingRight: 15 }}>Phone: {bulk_order.phone}</p>\n                            </div>\n                        </div>\n                        {/*<Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} icon=\"pi pi-pencil\" iconPos=\"left\" label=\"EDIT\" onClick={this.edit}>\n                        </Button>*/}\n                        {/* <h3 style={{ marginBlockStart: '1em', marginBlockEnd: 0 }}>Bag Weight History</h3> */}\n                        {/* <Chart type=\"line\" data={data} /> */}\n                        {/* <Editor style={{ height: '320px' }} value={this.state.text} onTextChange={(e) => this.setState({ text: e.htmlValue })} /> */}\n                    </div>\n                </div>\n            );\n\n        } else {\n            var header = <div style={{ textAlign: 'left' }}>\n            </div>;\n\n            return (\n                <div style={{ display: 'flex' }}>\n                    <div className=\"card card-search\">\n                        <DataTable value={this.state.bulk_orders} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} selectionMode=\"single\"\n                        responsive={true} autoLayout={true} selection={this.state.selectedOrder} onSelectionChange={e => this.setState({ selectedOrder: e.value })}>\n                            <Column field=\"order_id\" header=\"ID\" sortable={true} filter filterPlaceholder=\"Search id\"/>\n                            <Column field=\"name\" header=\"Name\" sortable filter filterPlaceholder=\"Search name\" />\n                            <Column field=\"organization\" header=\"Organization\" sortable filter filterPlaceholder=\"Search name\" />\n                        </DataTable>\n                    </div>\n                    <div className=\"card card-list\">\n                        <h1>Select an Order</h1>\n                    </div>\n                </div>\n            );\n        }\n\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}