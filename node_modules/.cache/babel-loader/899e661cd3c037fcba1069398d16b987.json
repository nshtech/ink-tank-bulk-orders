{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\3\\\\documents\\\\github\\\\ink-tank-bulk-orders\\\\src\\\\components\\\\OrderTracker.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var OrderTracker = /*#__PURE__*/function (_Component) {\n  _inherits(OrderTracker, _Component);\n\n  var _super = _createSuper(OrderTracker);\n\n  function OrderTracker() {\n    var _this;\n\n    _classCallCheck(this, OrderTracker);\n\n    _this = _super.call(this);\n    _this.loadInitialState = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var customerArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              customerArray = [];\n              firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n                snapshot.forEach(function (childSnapshot) {\n                  if (childSnapshot.val().active === 'True') {\n                    customerArray.push(childSnapshot.toJSON());\n                  }\n                });\n              });\n\n              _this.setState({\n                customers: customerArray\n              });\n\n              _this.setState({\n                bulk_orders: customerArray\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n              console.log('bulk orders in order sheeet: ', customerArray);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      customers: [],\n      bulk_orders: [],\n      selectedStatus: null,\n      selectedReshall: null,\n      editing: false,\n      loading: true,\n      selectedCustomers: null,\n      selectedOrders: null\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.export = _this.export.bind(_assertThisInitialized(_this));\n    _this.onStatusFilterChange = _this.onStatusFilterChange.bind(_assertThisInitialized(_this));\n    _this.onReshallFilterChange = _this.onReshallFilterChange.bind(_assertThisInitialized(_this));\n    _this.bagStatusEditor = _this.bagStatusEditor.bind(_assertThisInitialized(_this));\n    _this.displaySelection = _this.displaySelection.bind(_assertThisInitialized(_this));\n    _this.loadInitialState = _this.loadInitialState.bind(_assertThisInitialized(_this));\n    _this.generalEditor = _this.generalEditor.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(OrderTracker, [{\n    key: \"export\",\n    value: function _export() {\n      this.dt.exportCSV();\n    }\n    /* --------------- Editing ---------------- */\n\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this.setState({\n        editing: false\n      });\n    }\n  }, {\n    key: \"updateWeightStatus\",\n    value: function updateWeightStatus(props, value, currDate) {\n      console.log(this.state.customers[props.rowIndex]); // console.log(props.rowIndex)\n      //if (value > props.rowData.maxweight) {\n      //if (value > firebase.database().ref('/customers/'+props.rowData.id+'/maxweight')) {\n\n      console.log('value: ', value);\n      console.log('maxweight comparison: ', parseInt(this.state.customers[props.rowIndex].maxweight));\n\n      if (parseFloat(value) > parseFloat(this.state.customers[props.rowIndex].maxweight)) {\n        var over = parseFloat(value) - parseFloat(this.state.customers[props.rowIndex].maxweight);\n        console.log('marking as overweight.');\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + 'weightstatus').set('overweight');\n        /*let temp = firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages')\r\n        temp.once('value', (snapshot) => {\r\n            let total = snapshot.val()+over\r\n            firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages').set(total)\r\n        })*/\n\n        var updatedCustomers = this.state.customers;\n        updatedCustomers[props.rowIndex][props.field] = value;\n        updatedCustomers[props.rowIndex]['weightstatus'] = 'overweight'; //updatedCustomers[props.rowIndex]['quarter-overages'] += parseFloat(value);\n        // this.setState({ customers: updatedCustomers });\n\n        return value;\n      } else {\n        console.log('marking as underweight');\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + 'weightstatus').set('underweight');\n        var _updatedCustomers = this.state.customers;\n        _updatedCustomers[props.rowIndex][props.field] = value;\n        _updatedCustomers[props.rowIndex]['weightstatus'] = 'underweight'; // this.setState({ customers: updatedCustomers });\n\n        return value;\n      }\n    }\n  }, {\n    key: \"onEditorValueChange\",\n    value: function () {\n      var _onEditorValueChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props, value) {\n        var db, currWeight, currDay, currMonth, currYear, currDate, fullDate, currTime, curr;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value);\n                db = firebase.database().ref();\n                currWeight = value;\n                currDay = new Date().getDate();\n                currMonth = new Date().getMonth() + 1;\n\n                if (currMonth < 10) {\n                  currMonth = '0' + currMonth;\n                }\n\n                if (currDay < 10) {\n                  currDay = '0' + currDay;\n                }\n\n                currYear = new Date().getFullYear();\n                currDate = currYear + '-' + currMonth + '-' + currDay;\n                fullDate = new Date().toDateString();\n                currTime = new Date().toLocaleTimeString('it-IT');\n                db.child('/orders/' + currDate + props.rowData.id).once(\"value\").then(function (snapshot) {\n                  if (!snapshot.val()) {\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id).set(0);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weight').set(currWeight);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/id').set(props.rowData.id);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n                  }\n\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/date').set(currDate + ' ' + currTime);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weight').set(currWeight);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/id').set(props.rowData.id);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n                });\n                firebase.database().ref('/customers/' + props.rowData.id + '/last_weight_updated').set(currDate + ' ' + currTime);\n                _context2.next = 15;\n                return this.updateWeightStatus(props, value, currDate);\n\n              case 15:\n                curr = _context2.sent;\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onEditorValueChange(_x, _x2) {\n        return _onEditorValueChange.apply(this, arguments);\n      }\n\n      return onEditorValueChange;\n    }()\n  }, {\n    key: \"inputTextEditor\",\n    value: function inputTextEditor(props, field) {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(InputText, {\n        type: \"text\",\n        value: props.rowData[field],\n        style: {\n          maxWidth: 100\n        },\n        onChange: function onChange(e) {\n          _this2.onEditorValueChange(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"generalEditor\",\n    value: function generalEditor(props) {\n      return this.inputTextEditor(props, ' ');\n    } // onRowEditInit(event) {\n    //     this.clonedCars[event.data.vin] = { ...event.data };\n    // }\n    // onRowEditSave(event) {\n    //     if (this.onRowEditorValidator(event.data)) {\n    //         delete this.clonedCars[event.data.vin];\n    //         this.growl.show({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\n    //     }\n    //     else {\n    //         this.growl.show({ severity: 'error', summary: 'Error', detail: 'Brand is required' });\n    //     }\n    // }\n    // onRowEditCancel(event) {\n    //     let cars = [...this.state.cars2];\n    //     cars[event.index] = this.clonedCars[event.data.vin];\n    //     delete this.clonedCars[event.data.vin];\n    //     this.setState({\n    //         cars2: cars\n    //     })\n    // }\n\n  }, {\n    key: \"bagStatusEditor\",\n    value: function bagStatusEditor(allcustomers, currentcustomers, newstatus) {\n      var updatedCustomers = _toConsumableArray(allcustomers);\n\n      var db = firebase.database().ref();\n      var currDay = new Date().getDate();\n      var currMonth = new Date().getMonth() + 1;\n\n      if (currMonth < 10) {\n        currMonth = '0' + currMonth;\n      }\n\n      if (currDay < 10) {\n        currDay = '0' + currDay;\n      }\n\n      var currYear = new Date().getFullYear();\n      var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n      var currTime = new Date().toLocaleTimeString('it-IT');\n\n      if (currentcustomers) {\n        var ids = Object.keys(currentcustomers).map(function (key) {\n          return currentcustomers[key].id;\n        });\n        updatedCustomers.map(function (each) {\n          if (ids.includes(each.id)) {\n            each.laundrystatus = newstatus;\n\n            if (newstatus == 'out-of-service') {\n              each.weightstatus = 'N/A';\n              each.weekweight = 'N/A';\n              db.child('/customers/' + each.id + '/weekweight').set('N/A');\n              db.child('/customers/' + each.id + '/weightstatus').set('N/A');\n            }\n\n            firebase.database().ref('/customers/' + each.id + '/last_status_updated').set(currDate + ' ' + currTime);\n            db.child('/orders/' + currDate + each.id).once(\"value\").then(function (snapshot) {\n              if (!snapshot.val()) {\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id).set(0);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weight').set(each.weekweight);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/maxweight').set(each.maxweight);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/id').set(each.id);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/laundrystatus').set(each.laundrystatus);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weightstatus').set(each.weightstatus);\n              }\n\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/date').set(currDate + ' ' + currTime);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weight').set(each.weekweight);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/maxweight').set(each.maxweight);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/id').set(each.id);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/laundrystatus').set(each.laundrystatus);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weightstatus').set(each.weightstatus);\n            });\n          }\n        });\n        this.setState({\n          customers: updatedCustomers\n        });\n      }\n\n      console.log('bagStatusEditor currentcustomers: ', currentcustomers);\n      this.dothisfirst(currentcustomers, newstatus);\n    }\n  }, {\n    key: \"dothisfirst\",\n    value: function dothisfirst(currentcustomers, newstatus) {\n      console.log('currentcustomers: ', currentcustomers);\n      console.log('newstatus: ', newstatus);\n\n      if (currentcustomers) {\n        var ids = Object.keys(currentcustomers).map(function (key) {\n          return currentcustomers[key].id;\n        });\n        console.log('ids: ', ids);\n        var query = firebase.database().ref(\"customers\").orderByKey();\n        query.once(\"value\").then(function (snapshot) {\n          var counter = 0;\n          snapshot.forEach(function (childSnapshot) {\n            var key = childSnapshot.key;\n\n            if (ids.includes(key)) {\n              var key = childSnapshot.key;\n              firebase.database().ref('/customers/' + key + '/' + \"laundrystatus\").set(newstatus);\n              console.log('currentcustomers in forEach: ', currentcustomers);\n\n              if (newstatus === 'delivered-to-SH' && parseFloat(currentcustomers[counter].weekweight) > parseFloat(currentcustomers[counter].maxweight)) {\n                firebase.database().ref('/customers/' + key + '/' + \"quarter_overages\").transaction(function (currOverages) {\n                  //return currOverages+1;\n                  return currOverages + parseFloat(currentcustomers[counter].weekweight) - parseFloat(currentcustomers[counter].maxweight);\n                });\n              }\n\n              counter = counter + 1;\n            }\n          });\n        });\n      }\n\n      return currentcustomers;\n    }\n  }, {\n    key: \"displaySelection\",\n    value: function displaySelection(data) {\n      if (this.state.editing && (!data || data.length === 0)) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 20\n          }\n        }, \"No Selection\");\n      }\n    }\n    /* --------------- Filters ---------------- */\n    //dropdown for laundrystats\n\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      var laundryStatusDisplay = {\n        'picked-up': 'picked up',\n        'delivered-to-SH': 'delivered to SH',\n        'delivered-to-dorm': 'delivered to dorm',\n        'out-of-service': 'out of service',\n        'bag-missing': 'bag missing',\n        'start-of-quarter': 'start of quarter'\n      };\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.laundrystatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 16\n        }\n      }, laundryStatusDisplay[rowData.laundrystatus]);\n    }\n  }, {\n    key: \"renderStatusFilter\",\n    value: function renderStatusFilter() {\n      var statuses = [{\n        label: 'Picked Up',\n        value: 'picked-up'\n      }, {\n        label: 'Out of Service',\n        value: 'out-of-service'\n      }, {\n        label: 'Delivered to SH',\n        value: 'delivered-to-SH'\n      }, {\n        label: 'Delivered to Dorm',\n        value: 'delivered-to-dorm'\n      }, {\n        label: 'Bag Missing',\n        value: 'bag-missing'\n      }, {\n        label: 'Start of Quarter',\n        value: 'start-of-quarter'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedStatus,\n        options: statuses,\n        onChange: this.onStatusFilterChange,\n        showClear: true,\n        placeholder: \"Select a Status\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"weightBodyTemplate\",\n    value: function weightBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.weightstatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 16\n        }\n      }, rowData.weightstatus);\n    }\n  }, {\n    key: \"onStatusFilterChange\",\n    value: function onStatusFilterChange(event) {\n      this.dt.filter(event.value, 'laundrystatus', 'equals');\n      this.setState({\n        selectedStatus: event.value\n      });\n    } //dropdown for reshall\n\n  }, {\n    key: \"reshallBodyTemplate\",\n    value: function reshallBodyTemplate(rowData) {\n      var _reshallDisplay;\n\n      var reshallDisplay = (_reshallDisplay = {\n        '560 Lincoln': '560 Lincoln',\n        '720 Emerson': '720 Emerson',\n        '1715 Chicago Ave': '1715 Chicago Ave',\n        '1838 Chicago': '1838 Chicago',\n        '1856 Orrington': '1856 Orrington',\n        '2303 Sheridan': '2303 Sheridan',\n        'Ayers': 'Ayers',\n        'Allison': 'Allison',\n        'Bobb': 'Bobb',\n        'Chapin': 'Chapin',\n        'East Fairchild': 'East Fairchild',\n        'Elder': 'Elder',\n        'West Fairchild': 'West Fairchild',\n        'Foster-Walker': 'Foster-Walker',\n        'Goodrich': 'Goodrich',\n        'Hobart': 'Hobart',\n        'Jones': 'Jones',\n        'Kemper': 'Kemper',\n        'McCulloch': 'McCulloch',\n        'PARC': 'PARC (North Mid Quads)',\n        'Rogers House': 'Rogers House',\n        'Sargent': 'Sargent',\n        'SMQ': 'Shepard Residential College (South Mid Quads)',\n        'Shepard': 'Shepard',\n        'Slivka': 'Slivka',\n        'Willard': 'Willard',\n        'Delta Gamma': 'Delta Gamma',\n        'Kappa Kappa Gamma': 'Kappa Kappa Gamma'\n      }, _defineProperty(_reshallDisplay, \"Foster-Walker\", 'Foster-Walker'), _defineProperty(_reshallDisplay, 'Zeta Beta Tau (ZBT)', 'Zeta Beta Tau (ZBT)'), _reshallDisplay);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.reshall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 18\n        }\n      }, reshallDisplay[rowData.reshall]);\n    }\n  }, {\n    key: \"renderReshallFilter\",\n    value: function renderReshallFilter() {\n      var reshalls = [{\n        label: '560 Lincoln',\n        value: '560 Lincoln'\n      }, {\n        label: '720 Emerson',\n        value: '720 Emerson'\n      }, {\n        label: '1715 Chicago',\n        value: '1715 Chicago'\n      }, {\n        label: '1838 Chicago',\n        value: '1838 Chicago'\n      }, {\n        label: '1856 Orrington',\n        value: '1856 Orrington'\n      }, {\n        label: '2303 Sheridan',\n        value: '2303 Sheridan'\n      }, {\n        label: 'Ayers',\n        value: 'Ayers'\n      }, {\n        label: 'Allison',\n        value: 'Allison'\n      }, {\n        label: 'Bobb',\n        value: 'Bobb'\n      }, {\n        label: 'Chapin',\n        value: 'Chapin'\n      }, {\n        label: 'East Fairchild',\n        value: 'East Fairchild'\n      }, {\n        label: 'Elder',\n        value: 'Elder'\n      }, {\n        label: 'West Fairchild',\n        value: 'West Fairchild'\n      }, {\n        label: 'Foster-Walker',\n        value: 'Foster-Walker'\n      }, {\n        label: 'Goodrich',\n        value: 'Goodrich'\n      }, {\n        label: 'Hobart',\n        value: 'Hobart'\n      }, {\n        label: 'Jones',\n        value: 'Jones'\n      }, {\n        label: 'Kemper',\n        value: 'Kemper'\n      }, {\n        label: 'McCulloch',\n        value: 'McCulloch'\n      }, {\n        label: 'PARC (North Mid Quads)',\n        value: 'PARC'\n      }, {\n        label: 'Rogers House',\n        value: 'Rogers House'\n      }, {\n        label: 'Sargent',\n        value: 'Sargent'\n      }, {\n        label: 'Shepard Residential College (South Mid Quads)',\n        value: 'SMQ'\n      }, {\n        label: 'Shepard',\n        value: 'Shepard'\n      }, {\n        label: 'Slivka',\n        value: 'Slivka'\n      }, {\n        label: 'Willard',\n        value: 'Willard'\n      }, {\n        label: 'Delta Gamma',\n        value: 'Delta Gamma'\n      }, {\n        label: 'Kappa Kappa Gamma',\n        value: 'Kappa Kappa Gamma'\n      }, {\n        label: 'Foster-Walker',\n        value: 'Foster-Walker'\n      }, {\n        label: 'Zeta Beta Tau (ZBT)',\n        value: 'Zeta Beta Tau (ZBT)'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedReshall,\n        options: reshalls,\n        onChange: this.onReshallFilterChange,\n        showClear: true,\n        placeholder: \"Select a Dorm\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"onReshallFilterChange\",\n    value: function onReshallFilterChange(event) {\n      this.dt.filter(event.value, 'reshall', 'equals');\n      this.setState({\n        selectedReshall: event.value\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadInitialState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var statusFilter = this.renderStatusFilter();\n      var reshallFilter = this.renderReshallFilter();\n      var allcustomers = this.state.customers;\n      var currentcustomers = this.state.selectedCustomers;\n      var allbulkorders = this.state.bulk_orders;\n      var currentorders = this.state.selectedOrders;\n      /* --------------- RETURN ---------------- */\n\n      /* ---------------- edit mode ------------*/\n\n      if (this.state.editing) {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            marginBottom: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: 'white',\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-save\",\n          iconPos: \"left\",\n          label: \"SAVE\",\n          onClick: this.save,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#23547B',\n            backgroundColor: '#B3E5FC',\n            borderColor: '#23547B',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"PICKED UP\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'picked-up');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#694382',\n            backgroundColor: '#ECCFFF',\n            borderColor: '#694382',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"SH\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-SH');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#256029',\n            backgroundColor: '#C8E6C9',\n            borderColor: '#256029',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"DORM\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-dorm');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"NO SERVICE\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'out-of-service');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#C63737',\n            backgroundColor: '#FFCDD2',\n            borderColor: '#C63737',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"MISSING\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'bag-missing');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"START\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'start-of-quarter');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }\n        })); //loading = {true} loadingIcon = \"pi pi-spinner\"\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"elmid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }\n        }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }\n        }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }\n        }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.bulk_orders,\n          header: header,\n          ref: function ref(el) {\n            _this3.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          footer: this.displaySelection(this.state.selectedOrders),\n          selection: this.state.selectedOrders,\n          onSelectionChange: function onSelectionChange(e) {\n            return _this3.setState({\n              selectedOrders: e.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          selectionMode: \"multiple\",\n          style: {\n            width: '3em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"id\",\n          header: \"ID\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"organization\",\n          header: \"Organization\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterElement: statusFilter,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"blank\",\n          header: \"Blank\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"design\",\n          header: \"Design\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"tax_exempt\",\n          header: \"Tax Exempt\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"team_member\",\n          header: \"Team Member\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"status\",\n          header: \"status\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          body: this.statusBodyTemplate,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"order_quote\",\n          header: \"Order Quote\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"final_total\",\n          header: \"Final Total\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }\n        }))));\n        /* ---------------- NOT edit mode ------------*/\n      } else {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-pencil\",\n          iconPos: \"left\",\n          label: \"EDIT\",\n          onClick: this.edit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }\n        }));\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"elmid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }\n        }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }\n        }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }\n        }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.customers,\n          header: header,\n          ref: function ref(el) {\n            _this3.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"id\",\n          header: \"ID\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"organization\",\n          header: \"Organization\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterElement: statusFilter,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"blank\",\n          header: \"Blank\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"design\",\n          header: \"Design\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"tax_exempt\",\n          header: \"Tax Exempt\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"team_member\",\n          header: \"Team Member\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"status\",\n          header: \"status\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          body: this.statusBodyTemplate,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 29\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return OrderTracker;\n}(Component);","map":{"version":3,"sources":["C:/Users/3/documents/github/ink-tank-bulk-orders/src/components/OrderTracker.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","firebase","validator","customerData","OrderTracker","loadInitialState","customerArray","database","ref","on","snapshot","forEach","childSnapshot","val","active","push","toJSON","setState","customers","bulk_orders","loading","console","log","state","selectedStatus","selectedReshall","editing","selectedCustomers","selectedOrders","edit","bind","save","export","onStatusFilterChange","onReshallFilterChange","bagStatusEditor","displaySelection","generalEditor","dt","exportCSV","props","value","currDate","rowIndex","parseInt","maxweight","parseFloat","over","rowData","id","set","updatedCustomers","field","db","currWeight","currDay","Date","getDate","currMonth","getMonth","currYear","getFullYear","fullDate","toDateString","currTime","toLocaleTimeString","child","once","then","laundrystatus","weightstatus","updateWeightStatus","curr","maxWidth","e","onEditorValueChange","target","inputTextEditor","allcustomers","currentcustomers","newstatus","ids","Object","keys","map","key","each","includes","weekweight","dothisfirst","query","orderByKey","counter","transaction","currOverages","data","length","textAlign","laundryStatusDisplay","statuses","label","minWidth","event","filter","reshallDisplay","reshall","reshalls","statusFilter","renderStatusFilter","reshallFilter","renderReshallFilter","allbulkorders","currentorders","header","marginBottom","backgroundColor","borderColor","marginRight","color","el","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","width","statusBodyTemplate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column'\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nimport validator from 'validator'\r\n\r\n\r\nimport customerData from '../customers.json';\r\n// import classNames from 'classnames';\r\n\r\nimport '../Dashboard.css';\r\n//import { arrayToHash } from '@fullcalendar/core/util/object';\r\n\r\n\r\nexport class OrderTracker extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: [],\r\n            bulk_orders: [],\r\n            selectedStatus: null,\r\n            selectedReshall: null,\r\n            editing: false,\r\n            loading: true,\r\n            selectedCustomers: null,\r\n            selectedOrders: null\r\n        };\r\n        this.edit = this.edit.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.export = this.export.bind(this);\r\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\r\n        this.onReshallFilterChange = this.onReshallFilterChange.bind(this);\r\n        this.bagStatusEditor = this.bagStatusEditor.bind(this)\r\n        this.displaySelection = this.displaySelection.bind(this)\r\n        this.loadInitialState = this.loadInitialState.bind(this)\r\n        this.generalEditor = this.generalEditor.bind(this);\r\n\r\n\r\n\r\n    }\r\n    export() {\r\n        this.dt.exportCSV();\r\n    }\r\n\r\n    /* --------------- Editing ---------------- */\r\n    edit() {\r\n        this.setState({ editing: true });\r\n    }\r\n\r\n    save() {\r\n        this.setState({ editing: false });\r\n    }\r\n\r\n\r\n    updateWeightStatus(props,value, currDate) {\r\n\r\n        console.log(this.state.customers[props.rowIndex])\r\n        // console.log(props.rowIndex)\r\n\r\n        //if (value > props.rowData.maxweight) {\r\n        \r\n        //if (value > firebase.database().ref('/customers/'+props.rowData.id+'/maxweight')) {\r\n        console.log('value: ',value);\r\n        console.log('maxweight comparison: ',parseInt(this.state.customers[props.rowIndex].maxweight));\r\n        if (parseFloat(value) > parseFloat(this.state.customers[props.rowIndex].maxweight)) {\r\n            let over = parseFloat(value) - parseFloat(this.state.customers[props.rowIndex].maxweight)\r\n            console.log('marking as overweight.');\r\n            firebase.database().ref('/customers/' + props.rowData.id + '/'+'weightstatus').set('overweight')\r\n            /*let temp = firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages')\r\n            temp.once('value', (snapshot) => {\r\n                let total = snapshot.val()+over\r\n                firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages').set(total)\r\n            })*/\r\n            let updatedCustomers = this.state.customers;\r\n            updatedCustomers[props.rowIndex][props.field] = value;\r\n            updatedCustomers[props.rowIndex]['weightstatus'] = 'overweight';\r\n            //updatedCustomers[props.rowIndex]['quarter-overages'] += parseFloat(value);\r\n            // this.setState({ customers: updatedCustomers });\r\n            return value\r\n        }\r\n        else {\r\n            console.log('marking as underweight');\r\n            firebase.database().ref('/customers/' + props.rowData.id + '/'+'weightstatus').set('underweight')\r\n            let updatedCustomers = this.state.customers;\r\n            updatedCustomers[props.rowIndex][props.field] = value;\r\n            updatedCustomers[props.rowIndex]['weightstatus'] = 'underweight';\r\n            // this.setState({ customers: updatedCustomers });\r\n            return value\r\n        }\r\n    }\r\n\r\n    async onEditorValueChange(props, value) {\r\n\r\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value)\r\n        const db = firebase.database().ref();\r\n        var currWeight = value;\r\n        var currDay = new Date().getDate();\r\n        var currMonth = new Date().getMonth() +1;\r\n        if (currMonth < 10) {\r\n            currMonth = '0'+currMonth\r\n        }\r\n        if (currDay < 10) {\r\n            currDay = '0' + currDay\r\n        }\r\n        var currYear = new Date().getFullYear();\r\n        var currDate = currYear + '-' + currMonth + '-'+currDay;\r\n        var fullDate = new Date().toDateString();\r\n        var currTime = new Date().toLocaleTimeString('it-IT');\r\n        db.child('/orders/' + currDate + props.rowData.id).once(\"value\")\r\n            .then(snapshot => {\r\n                if (!snapshot.val()) {\r\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id).set(0)\r\n                    db.child('/orders/' + currDate +' '+currTime+' - '+props.rowData.id + '/weight').set(currWeight);\r\n                    db.child('/orders/' + currDate+' '+currTime+' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\r\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/id').set(props.rowData.id);\r\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\r\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\r\n                }\r\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/date').set(currDate+' '+ currTime);\r\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weight').set(currWeight);\r\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/maxweight').set(props.rowData.maxweight);\r\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/id').set(props.rowData.id);\r\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\r\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\r\n\r\n            })\r\n        firebase.database().ref('/customers/' + props.rowData.id + '/last_weight_updated').set(currDate + ' ' + currTime)\r\n        const curr = await this.updateWeightStatus(props,value, currDate);\r\n    }\r\n\r\n    inputTextEditor(props, field) {\r\n        return <InputText type=\"text\" value={props.rowData[field]} style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.target.value);}}/>\r\n    }\r\n\r\n    generalEditor(props) {\r\n        return this.inputTextEditor(props, ' ');\r\n    }\r\n\r\n    // onRowEditInit(event) {\r\n    //     this.clonedCars[event.data.vin] = { ...event.data };\r\n    // }\r\n\r\n    // onRowEditSave(event) {\r\n    //     if (this.onRowEditorValidator(event.data)) {\r\n    //         delete this.clonedCars[event.data.vin];\r\n    //         this.growl.show({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\r\n    //     }\r\n    //     else {\r\n    //         this.growl.show({ severity: 'error', summary: 'Error', detail: 'Brand is required' });\r\n    //     }\r\n    // }\r\n\r\n    // onRowEditCancel(event) {\r\n    //     let cars = [...this.state.cars2];\r\n    //     cars[event.index] = this.clonedCars[event.data.vin];\r\n    //     delete this.clonedCars[event.data.vin];\r\n    //     this.setState({\r\n    //         cars2: cars\r\n    //     })\r\n    // }\r\n\r\n    bagStatusEditor(allcustomers, currentcustomers, newstatus) {\r\n        let updatedCustomers = [...allcustomers];\r\n        const db = firebase.database().ref()\r\n        var currDay = new Date().getDate();\r\n        var currMonth = new Date().getMonth() +1;\r\n        if (currMonth < 10) {\r\n            currMonth = '0'+currMonth\r\n        }\r\n        if (currDay < 10) {\r\n            currDay = '0' + currDay\r\n        }\r\n        var currYear = new Date().getFullYear();\r\n        var currDate = currYear + '-' + currMonth + '-'+currDay;\r\n        //var currDate = new Date().toDateString();\r\n        var currTime = new Date().toLocaleTimeString('it-IT');\r\n\r\n        if (currentcustomers) {\r\n            var ids = Object.keys(currentcustomers).map(function (key) {\r\n                return currentcustomers[key].id;\r\n            });\r\n            updatedCustomers.map(each => {\r\n                if (ids.includes(each.id)) {\r\n                    each.laundrystatus = newstatus;\r\n                    if (newstatus == 'out-of-service') {\r\n                        each.weightstatus = 'N/A'\r\n                        each.weekweight = 'N/A'\r\n                        db.child('/customers/'+each.id+'/weekweight').set('N/A');\r\n                        db.child('/customers/'+each.id+'/weightstatus').set('N/A');\r\n                    }\r\n                    firebase.database().ref('/customers/' + each.id + '/last_status_updated').set(currDate + ' ' + currTime)\r\n\r\n                    db.child('/orders/' + currDate + each.id).once(\"value\")\r\n                        .then(snapshot => {\r\n                            if (!snapshot.val()) {\r\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id).set(0)\r\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weight').set(each.weekweight);\r\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/maxweight').set(each.maxweight);\r\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/id').set(each.id);\r\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/laundrystatus').set(each.laundrystatus);\r\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weightstatus').set(each.weightstatus);\r\n                            }\r\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/date').set(currDate+' '+ currTime);\r\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weight').set(each.weekweight);\r\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/maxweight').set(each.maxweight);\r\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/id').set(each.id);\r\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/laundrystatus').set(each.laundrystatus);\r\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weightstatus').set(each.weightstatus);\r\n\r\n                        })\r\n\r\n                }\r\n            })\r\n            this.setState({ customers: updatedCustomers });\r\n        }\r\n        console.log('bagStatusEditor currentcustomers: ',currentcustomers);\r\n        this.dothisfirst(currentcustomers, newstatus)\r\n\r\n    }\r\n\r\n\r\n    dothisfirst(currentcustomers, newstatus) {\r\n        console.log('currentcustomers: ',currentcustomers);\r\n        console.log('newstatus: ',newstatus);\r\n        if (currentcustomers) {\r\n            var ids = Object.keys(currentcustomers).map(function (key) {\r\n                return currentcustomers[key].id;\r\n            });\r\n            console.log('ids: ',ids);\r\n            var query = firebase.database().ref(\"customers\").orderByKey();\r\n            query.once(\"value\")\r\n                .then(function (snapshot) {\r\n                    var counter=0;\r\n                    snapshot.forEach(function (childSnapshot) {\r\n                        var key = childSnapshot.key;\r\n                        if (ids.includes(key)) {\r\n                            var key = childSnapshot.key;\r\n                            firebase.database().ref('/customers/' + key + '/' + \"laundrystatus\").set(newstatus);\r\n                            console.log('currentcustomers in forEach: ',currentcustomers);\r\n                            if (newstatus === 'delivered-to-SH' && parseFloat(currentcustomers[counter].weekweight) > parseFloat(currentcustomers[counter].maxweight)) {\r\n                                firebase.database().ref('/customers/' + key + '/' + \"quarter_overages\").transaction(function(currOverages) {\r\n                                    //return currOverages+1;\r\n                                    return currOverages + parseFloat(currentcustomers[counter].weekweight) - parseFloat(currentcustomers[counter].maxweight);\r\n                                });\r\n                            }\r\n                            counter = counter+1;\r\n\r\n                        }\r\n                    });\r\n                });\r\n        }\r\n        return currentcustomers\r\n    }\r\n\r\n\r\n    displaySelection(data) {\r\n        if (this.state.editing && (!data || data.length === 0)) {\r\n            return <div style={{ textAlign: 'left' }}>No Selection</div>;\r\n        }\r\n    }\r\n\r\n\r\n    /* --------------- Filters ---------------- */\r\n\r\n//dropdown for laundrystats\r\n    statusBodyTemplate(rowData) {\r\n        var laundryStatusDisplay = {\r\n            'picked-up': 'picked up',\r\n            'delivered-to-SH': 'delivered to SH',\r\n            'delivered-to-dorm': 'delivered to dorm',\r\n            'out-of-service': 'out of service',\r\n            'bag-missing': 'bag missing',\r\n            'start-of-quarter': 'start of quarter'\r\n        }\r\n        return <span className={rowData.laundrystatus}>{laundryStatusDisplay[rowData.laundrystatus]}</span>\r\n    }\r\n\r\n\r\n    renderStatusFilter() {\r\n        var statuses = [\r\n            { label: 'Picked Up', value: 'picked-up' },\r\n            { label: 'Out of Service', value: 'out-of-service' },\r\n            { label: 'Delivered to SH', value: 'delivered-to-SH' },\r\n            { label: 'Delivered to Dorm', value: 'delivered-to-dorm' },\r\n            { label: 'Bag Missing', value: 'bag-missing' },\r\n            { label: 'Start of Quarter', value: 'start-of-quarter' }\r\n        ];\r\n\r\n        return (\r\n\r\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\r\n             showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{maxWidth: 200, minWidth: 50}} />\r\n        );\r\n    }\r\n\r\n    weightBodyTemplate(rowData) {\r\n        return <span className={rowData.weightstatus}>{rowData.weightstatus}</span>;\r\n    }\r\n\r\n\r\n    onStatusFilterChange(event) {\r\n        this.dt.filter(event.value, 'laundrystatus', 'equals');\r\n        this.setState({ selectedStatus: event.value });\r\n    }\r\n\r\n\r\n//dropdown for reshall\r\n\r\n    reshallBodyTemplate(rowData) {\r\n        var reshallDisplay = {\r\n          '560 Lincoln': '560 Lincoln',\r\n          '720 Emerson': '720 Emerson',\r\n            '1715 Chicago Ave': '1715 Chicago Ave',\r\n          '1838 Chicago': '1838 Chicago',\r\n          '1856 Orrington': '1856 Orrington',\r\n          '2303 Sheridan': '2303 Sheridan',\r\n          'Ayers': 'Ayers',\r\n          'Allison': 'Allison',\r\n          'Bobb': 'Bobb',\r\n          'Chapin': 'Chapin',\r\n          'East Fairchild': 'East Fairchild',\r\n          'Elder': 'Elder',\r\n          'West Fairchild': 'West Fairchild',\r\n          'Foster-Walker': 'Foster-Walker',\r\n          'Goodrich': 'Goodrich',\r\n          'Hobart': 'Hobart',\r\n          'Jones': 'Jones',\r\n          'Kemper': 'Kemper',\r\n          'McCulloch': 'McCulloch',\r\n          'PARC': 'PARC (North Mid Quads)',\r\n          'Rogers House': 'Rogers House',\r\n          'Sargent': 'Sargent',\r\n          'SMQ': 'Shepard Residential College (South Mid Quads)',\r\n          'Shepard': 'Shepard',\r\n          'Slivka': 'Slivka',\r\n          'Willard':  'Willard',\r\n          'Delta Gamma': 'Delta Gamma',\r\n          'Kappa Kappa Gamma': 'Kappa Kappa Gamma',\r\n          'Foster-Walker': 'Foster-Walker',\r\n            'Zeta Beta Tau (ZBT)': 'Zeta Beta Tau (ZBT)'\r\n          }\r\n          return <span className={rowData.reshall}>{reshallDisplay[rowData.reshall]}</span>\r\n    }\r\n\r\n    renderReshallFilter() {\r\n        var reshalls = [\r\n            { label: '560 Lincoln', value: '560 Lincoln' },\r\n            { label: '720 Emerson', value: '720 Emerson'},\r\n            { label: '1715 Chicago', value: '1715 Chicago'},\r\n            { label: '1838 Chicago', value: '1838 Chicago'},\r\n            { label: '1856 Orrington', value: '1856 Orrington'},\r\n            { label: '2303 Sheridan', value: '2303 Sheridan'},\r\n            { label: 'Ayers', value: 'Ayers'},\r\n            { label: 'Allison', value: 'Allison'},\r\n            { label: 'Bobb', value: 'Bobb' },\r\n            { label: 'Chapin', value: 'Chapin'},\r\n            { label: 'East Fairchild', value: 'East Fairchild'},\r\n            { label: 'Elder', value: 'Elder'},\r\n            { label: 'West Fairchild', value: 'West Fairchild'},\r\n            { label: 'Foster-Walker', value: 'Foster-Walker'},\r\n            { label: 'Goodrich', value: 'Goodrich'},\r\n            { label: 'Hobart', value: 'Hobart'},\r\n            { label: 'Jones', value: 'Jones' },\r\n            { label: 'Kemper', value: 'Kemper'},\r\n            { label: 'McCulloch', value: 'McCulloch'},\r\n            { label: 'PARC (North Mid Quads)', value: 'PARC'},\r\n            { label: 'Rogers House', value: 'Rogers House' },\r\n            { label: 'Sargent', value: 'Sargent'},\r\n            { label: 'Shepard Residential College (South Mid Quads)', value: 'SMQ'},\r\n            { label: 'Shepard', value: 'Shepard'},\r\n            { label: 'Slivka', value: 'Slivka'},\r\n            { label: 'Willard', value: 'Willard'},\r\n            { label: 'Delta Gamma', value: 'Delta Gamma'},\r\n            { label: 'Kappa Kappa Gamma', value: 'Kappa Kappa Gamma'},\r\n            { label: 'Foster-Walker', value: 'Foster-Walker'},\r\n            { label: 'Zeta Beta Tau (ZBT)', value: 'Zeta Beta Tau (ZBT)'}\r\n    ];\r\n\r\n        return (\r\n\r\n            <Dropdown value={this.state.selectedReshall} options={reshalls} onChange={this.onReshallFilterChange}\r\n             showClear={true} placeholder=\"Select a Dorm\" className=\"p-column-filter\" style={{maxWidth: 200, minWidth: 50}} />\r\n        );\r\n    }\r\n\r\n\r\n    onReshallFilterChange(event) {\r\n        this.dt.filter(event.value, 'reshall', 'equals');\r\n        this.setState({ selectedReshall: event.value });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    loadInitialState = async () => {\r\n        const customerArray = [];\r\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                if (childSnapshot.val().active === 'True' ) {\r\n                    customerArray.push(childSnapshot.toJSON());\r\n                }\r\n\r\n            });\r\n        });\r\n        this.setState({ customers: customerArray });\r\n        this.setState({ bulk_orders: customerArray });\r\n        this.setState({ loading: false });\r\n        console.log('bulk orders in order sheeet: ', customerArray);\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadInitialState()\r\n    }\r\n\r\n    render() {\r\n        const statusFilter = this.renderStatusFilter();\r\n        const reshallFilter = this.renderReshallFilter();\r\n        const allcustomers = this.state.customers;\r\n        const currentcustomers = this.state.selectedCustomers;\r\n        const allbulkorders = this.state.bulk_orders;\r\n        const currentorders = this.state.selectedOrders;\r\n\r\n        /* --------------- RETURN ---------------- */\r\n        /* ---------------- edit mode ------------*/\r\n        if (this.state.editing) {\r\n            var header = <div style={{ textAlign: 'left' }}>\r\n                <div style={{ marginBottom: 10 }}>\r\n                    <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\r\n                    </Button>\r\n                    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-save\" iconPos=\"left\" label=\"SAVE\" onClick={this.save}>\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Button type=\"button\" style={{ color: '#23547B', backgroundColor: '#B3E5FC', borderColor: '#23547B', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"PICKED UP\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'picked-up')}}>\r\n                    </Button>\r\n                    <Button type=\"button\" style={{ color: '#694382', backgroundColor: '#ECCFFF', borderColor: '#694382', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"SH\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-SH') }}>\r\n                    </Button>\r\n                    <Button type=\"button\" style={{ color: '#256029', backgroundColor: '#C8E6C9', borderColor: '#256029', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"DORM\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-dorm') }}>\r\n                    </Button>\r\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"NO SERVICE\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'out-of-service') }}>\r\n                    </Button>\r\n                    <Button type=\"button\" style={{ color: '#C63737', backgroundColor: '#FFCDD2', borderColor: '#C63737', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"MISSING\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'bag-missing') }}>\r\n                    </Button>\r\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"START\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'start-of-quarter') }}>\r\n                    </Button>\r\n\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>;\r\n            //loading = {true} loadingIcon = \"pi pi-spinner\"\r\n            return (\r\n                <div id=\"elmid\">\r\n                    <div className=\"card\">\r\n                        <h1>Ink Tank Bulk Order Tracker</h1>\r\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\r\n                        <p>ONLY individuals running operations should be accessing this page.</p>\r\n                        <DataTable value={this.state.bulk_orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true}\r\n                        editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}\r\n                        footer={this.displaySelection(this.state.selectedOrders)} selection={this.state.selectedOrders} onSelectionChange={e => this.setState({ selectedOrders: e.value })}>\r\n                            <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\r\n                            <Column field=\"id\" header=\"ID\" sortable={true} />\r\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\r\n                            <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter}  exportable={false}/>\r\n                            <Column field=\"blank\" header=\"Blank\" style={{ maxWidth: 150 }}  sortable={true}  exportable={false}/>\r\n                            <Column field=\"design\" header=\"Design\" style={{ maxWidth: 100 }} sortable={true}  />\r\n                            <Column field=\"tax_exempt\" header=\"Tax Exempt\" style={{ maxWidth: 100 }} sortable={true}  exportable={false}/>\r\n                            <Column field=\"team_member\" header=\"Team Member\" style={{ maxWidth: 100 }} sortable={true}  exportable={false}/>\r\n                            <Column field=\"status\" header=\"status\" style={{ maxWidth: 100 }} sortable={true} body={this.statusBodyTemplate} exportable={false}/>\r\n                            <Column field=\"order_quote\" header=\"Order Quote\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }}/>\r\n                            <Column field=\"final_total\" header=\"Final Total\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }}/>\r\n\r\n                            {/* <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter}  exportable={false}/>\r\n                            <Column field=\"reshall\" header=\"Residential Hall\" style={{ maxWidth: 200 }} sortable={true} filter filterElement={reshallFilter} /> \r\n                            <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} />\r\n                            <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }} sortable={true} />\r\n\r\n                            <Column field=\"weekweight\" header=\"Bag Weight\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} editor={this.generalEditor}/> */}\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            );\r\n            /* ---------------- NOT edit mode ------------*/\r\n        } else {\r\n            var header = <div style={{ textAlign: 'left' }}>\r\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\r\n                </Button>\r\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-pencil\" iconPos=\"left\" label=\"EDIT\" onClick={this.edit}>\r\n                </Button>\r\n            </div>;\r\n            return (\r\n\r\n                <div id=\"elmid\">\r\n                    <div className=\"card\">\r\n                        <h1>Ink Tank Bulk Order Tracker</h1>\r\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\r\n                        <p>ONLY individuals running operations should be accessing this page.</p>\r\n                        <DataTable value={this.state.customers} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\r\n                            <Column field=\"id\" header=\"ID\" sortable={true} />\r\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\r\n                            <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter}  exportable={false}/>\r\n                            <Column field=\"blank\" header=\"Blank\" style={{ maxWidth: 150 }}  sortable={true}  exportable={false}/>\r\n                            <Column field=\"design\" header=\"Design\" style={{ maxWidth: 100 }} sortable={true}  />\r\n                            <Column field=\"tax_exempt\" header=\"Tax Exempt\" style={{ maxWidth: 100 }} sortable={true}  exportable={false}/>\r\n                            <Column field=\"team_member\" header=\"Team Member\" style={{ maxWidth: 100 }} sortable={true}  exportable={false}/>\r\n                            <Column field=\"status\" header=\"status\" style={{ maxWidth: 100 }} sortable={true} body={this.statusBodyTemplate} exportable={false}/>\r\n\r\n                            {/* <Column field=\"reshall\" header=\"Residential Hall\" style={{ maxWidth: 200 }} sortable={true} filter filterElement={reshallFilter} />\r\n                            <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter}  />\r\n                            <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }} sortable={true} />\r\n                            <Column field=\"weekweight\" header=\"Bag Weight\" style={{ maxWidth: 100 }} sortable={true} /> */}\r\n\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}