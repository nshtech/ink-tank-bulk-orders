{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PickList = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _DomHandler = _interopRequireDefault(require(\"../utils/DomHandler\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _PickListSubList = require(\"./PickListSubList\");\n\nvar _PickListControls = require(\"./PickListControls\");\n\nvar _PickListTransferControls = require(\"./PickListTransferControls\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PickList = /*#__PURE__*/function (_Component) {\n  _inherits(PickList, _Component);\n\n  function PickList(props) {\n    var _this;\n\n    _classCallCheck(this, PickList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PickList).call(this, props));\n    _this.state = {\n      selectedItemsSource: [],\n      selectedItemsTarget: []\n    };\n    _this.onSourceReorder = _this.onSourceReorder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTargetReorder = _this.onTargetReorder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTransfer = _this.onTransfer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PickList, [{\n    key: \"onSourceReorder\",\n    value: function onSourceReorder(event) {\n      this.handleChange(event, event.value, this.props.target);\n      this.reorderedListElement = this.sourceListElement;\n      this.reorderDirection = event.direction;\n    }\n  }, {\n    key: \"onTargetReorder\",\n    value: function onTargetReorder(event) {\n      this.handleChange(event, this.props.source, event.value);\n      this.reorderedListElement = this.targetListElement;\n      this.reorderDirection = event.direction;\n    }\n  }, {\n    key: \"handleScrollPosition\",\n    value: function handleScrollPosition(listElement, direction) {\n      switch (direction) {\n        case 'up':\n          this.scrollInView(listElement, -1);\n          break;\n\n        case 'top':\n          listElement.scrollTop = 0;\n          break;\n\n        case 'down':\n          this.scrollInView(listElement, 1);\n          break;\n\n        case 'bottom':\n          listElement.scrollTop = listElement.scrollHeight;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, source, target) {\n      if (this.props.onChange) {\n        this.props.onChange({\n          event: event.originalEvent,\n          source: source,\n          target: target\n        });\n      }\n    }\n  }, {\n    key: \"onTransfer\",\n    value: function onTransfer(event) {\n      switch (event.direction) {\n        case 'toTarget':\n          if (this.props.onMoveToTarget) {\n            this.props.onMoveToTarget({\n              originalEvent: event.originalEvent,\n              value: this.state.selectedItemsSource\n            });\n          }\n\n          break;\n\n        case 'allToTarget':\n          if (this.props.onMoveAllToTarget) {\n            this.props.onMoveAllToTarget({\n              originalEvent: event.originalEvent,\n              value: this.props.source\n            });\n          }\n\n          break;\n\n        case 'toSource':\n          if (this.props.onMoveToSource) {\n            this.props.onMoveToSource({\n              originalEvent: event.originalEvent,\n              value: this.state.selectedItemsTarget\n            });\n          }\n\n          break;\n\n        case 'allToSource':\n          if (this.props.onMoveAllToSource) {\n            this.props.onMoveAllToSource({\n              originalEvent: event.originalEvent,\n              value: this.props.target\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        selectedItemsSource: [],\n        selectedItemsTarget: []\n      });\n      this.handleChange(event, event.source, event.target);\n    }\n  }, {\n    key: \"scrollInView\",\n    value: function scrollInView(listElement, direction) {\n      var listContainer = _DomHandler.default.findSingle(listElement, '.p-picklist-list');\n\n      var listItems = listContainer.getElementsByClassName('p-highlight');\n      var listItem;\n      if (direction === -1) listItem = listItems[0];else if (direction === 1) listItem = listItems[listItems.length - 1];\n\n      _DomHandler.default.scrollInView(listContainer, listItem);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.reorderedListElement) {\n        this.handleScrollPosition(this.reorderedListElement, this.reorderDirection);\n        this.reorderedListElement = null;\n        this.reorderDirection = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = (0, _classnames.default)('p-picklist p-component', this.props.className, {\n        'p-picklist-responsive': this.props.responsive\n      });\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style\n      }, this.props.showSourceControls && _react.default.createElement(_PickListControls.PickListControls, {\n        list: this.props.source,\n        selection: this.state.selectedItemsSource,\n        onReorder: this.onSourceReorder,\n        className: \"p-picklist-source-controls\"\n      }), _react.default.createElement(_PickListSubList.PickListSubList, {\n        ref: function ref(el) {\n          return _this2.sourceListElement = _reactDom.default.findDOMNode(el);\n        },\n        list: this.props.source,\n        selection: this.state.selectedItemsSource,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this2.setState({\n            selectedItemsSource: e.value\n          });\n        },\n        itemTemplate: this.props.itemTemplate,\n        header: this.props.sourceHeader,\n        style: this.props.sourceStyle,\n        className: \"p-picklist-source-wrapper\",\n        listClassName: \"p-picklist-source\",\n        metaKeySelection: this.props.metaKeySelection,\n        tabIndex: this.props.tabIndex\n      }), _react.default.createElement(_PickListTransferControls.PickListTransferControls, {\n        onTransfer: this.onTransfer,\n        source: this.props.source,\n        target: this.props.target,\n        sourceSelection: this.state.selectedItemsSource,\n        targetSelection: this.state.selectedItemsTarget\n      }), _react.default.createElement(_PickListSubList.PickListSubList, {\n        ref: function ref(el) {\n          return _this2.targetListElement = _reactDom.default.findDOMNode(el);\n        },\n        list: this.props.target,\n        selection: this.state.selectedItemsTarget,\n        onSelectionChange: function onSelectionChange(e) {\n          return _this2.setState({\n            selectedItemsTarget: e.value\n          });\n        },\n        itemTemplate: this.props.itemTemplate,\n        header: this.props.targetHeader,\n        style: this.props.targetStyle,\n        className: \"p-picklist-target-wrapper\",\n        listClassName: \"p-picklist-targe\",\n        metaKeySelection: this.props.metaKeySelection,\n        tabIndex: this.props.tabIndex\n      }), this.props.showTargetControls && _react.default.createElement(_PickListControls.PickListControls, {\n        list: this.props.target,\n        selection: this.state.selectedItemsTarget,\n        onReorder: this.onTargetReorder,\n        className: \"p-picklist-target-controls\"\n      }));\n    }\n  }]);\n\n  return PickList;\n}(_react.Component);\n\nexports.PickList = PickList;\n\n_defineProperty(PickList, \"defaultProps\", {\n  id: null,\n  source: null,\n  target: null,\n  sourceHeader: null,\n  targetHeader: null,\n  style: null,\n  className: null,\n  sourceStyle: null,\n  targetStyle: null,\n  responsive: false,\n  showSourceControls: true,\n  showTargetControls: true,\n  metaKeySelection: true,\n  tabIndex: '0',\n  itemTemplate: null,\n  onChange: null,\n  onMoveToSource: null,\n  onMoveAllToSource: null,\n  onMoveToTarget: null,\n  onMoveAllToTarget: null\n});\n\n_defineProperty(PickList, \"propTypes\", {\n  id: _propTypes.default.string,\n  source: _propTypes.default.array,\n  target: _propTypes.default.array,\n  sourceHeader: _propTypes.default.string,\n  targetHeader: _propTypes.default.string,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  sourcestyle: _propTypes.default.object,\n  targetstyle: _propTypes.default.object,\n  responsive: _propTypes.default.bool,\n  showSourceControls: _propTypes.default.bool,\n  showTargetControls: _propTypes.default.bool,\n  metaKeySelection: _propTypes.default.bool,\n  tabIndex: _propTypes.default.string,\n  itemTemplate: _propTypes.default.func,\n  onChange: _propTypes.default.func,\n  onMoveToSource: _propTypes.default.func,\n  onMoveAllToSource: _propTypes.default.func,\n  onMoveToTarget: _propTypes.default.func,\n  onMoveAllToTarget: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}