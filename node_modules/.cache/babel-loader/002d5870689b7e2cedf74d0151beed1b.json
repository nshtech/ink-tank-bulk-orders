{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeTableHeader = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _DomHandler = _interopRequireDefault(require(\"../utils/DomHandler\"));\n\nvar _InputText = require(\"../inputtext/InputText\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar TreeTableHeader = /*#__PURE__*/function (_Component) {\n  _inherits(TreeTableHeader, _Component);\n\n  function TreeTableHeader(props) {\n    var _this;\n\n    _classCallCheck(this, TreeTableHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TreeTableHeader).call(this, props));\n    _this.onHeaderMouseDown = _this.onHeaderMouseDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFilterInput = _this.onFilterInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TreeTableHeader, [{\n    key: \"onHeaderClick\",\n    value: function onHeaderClick(event, column) {\n      if (column.props.sortable) {\n        var targetNode = event.target;\n\n        if (_DomHandler.default.hasClass(targetNode, 'p-sortable-column') || _DomHandler.default.hasClass(targetNode, 'p-column-title') || _DomHandler.default.hasClass(targetNode, 'p-sortable-column-icon') || _DomHandler.default.hasClass(targetNode.parentElement, 'p-sortable-column-icon')) {\n          this.props.onSort({\n            originalEvent: event,\n            sortField: column.props.field,\n            sortFunction: column.props.sortFunction,\n            sortable: column.props.sortable\n          });\n\n          _DomHandler.default.clearSelection();\n        }\n      }\n    }\n  }, {\n    key: \"onHeaderMouseDown\",\n    value: function onHeaderMouseDown(event) {\n      if (this.props.reorderableColumns) {\n        if (event.target.nodeName !== 'INPUT') event.currentTarget.draggable = true;else if (event.target.nodeName === 'INPUT') event.currentTarget.draggable = false;\n      }\n    }\n  }, {\n    key: \"onHeaderKeyDown\",\n    value: function onHeaderKeyDown(event, column) {\n      if (event.key === 'Enter') {\n        this.onHeaderClick(event, column);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"getMultiSortMetaData\",\n    value: function getMultiSortMetaData(column) {\n      if (this.props.multiSortMeta) {\n        for (var i = 0; i < this.props.multiSortMeta.length; i++) {\n          if (this.props.multiSortMeta[i].field === column.props.field) {\n            return this.props.multiSortMeta[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"onResizerMouseDown\",\n    value: function onResizerMouseDown(event, column) {\n      if (this.props.resizableColumns && this.props.onResizeStart) {\n        this.props.onResizeStart({\n          originalEvent: event,\n          columnEl: event.target.parentElement,\n          column: column\n        });\n      }\n    }\n  }, {\n    key: \"onFilterInput\",\n    value: function onFilterInput(e, column) {\n      var _this2 = this;\n\n      if (column.props.filter && this.props.onFilter) {\n        if (this.filterTimeout) {\n          clearTimeout(this.filterTimeout);\n        }\n\n        var filterValue = e.target.value;\n        this.filterTimeout = setTimeout(function () {\n          _this2.props.onFilter({\n            value: filterValue,\n            field: column.props.field,\n            matchMode: column.props.filterMatchMode\n          });\n\n          _this2.filterTimeout = null;\n        }, this.filterDelay);\n      }\n    }\n  }, {\n    key: \"renderSortIcon\",\n    value: function renderSortIcon(column, sorted, sortOrder) {\n      if (column.props.sortable) {\n        var sortIcon = sorted ? sortOrder < 0 ? 'pi-sort-down' : 'pi-sort-up' : 'pi-sort';\n        var sortIconClassName = (0, _classnames.default)('p-sortable-column-icon', 'pi pi-fw', sortIcon);\n        return _react.default.createElement(\"span\", {\n          className: sortIconClassName\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderResizer\",\n    value: function renderResizer(column) {\n      var _this3 = this;\n\n      if (this.props.resizableColumns) {\n        return _react.default.createElement(\"span\", {\n          className: \"p-column-resizer p-clickable\",\n          onMouseDown: function onMouseDown(e) {\n            return _this3.onResizerMouseDown(e, column);\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderHeaderCell\",\n    value: function renderHeaderCell(column, index) {\n      var _this4 = this;\n\n      var multiSortMetaData = this.getMultiSortMetaData(column);\n      var singleSorted = column.props.field === this.props.sortField;\n      var multipleSorted = multiSortMetaData !== null;\n      var sorted = column.props.sortable && (singleSorted || multipleSorted);\n      var sortOrder = 0;\n      var filterElement;\n      if (singleSorted) sortOrder = this.props.sortOrder;else if (multipleSorted) sortOrder = multiSortMetaData.order;\n      var sortIconElement = this.renderSortIcon(column, sorted, sortOrder);\n      var className = (0, _classnames.default)(column.props.headerClassName || column.props.className, {\n        'p-sortable-column': column.props.sortable,\n        'p-highlight': sorted,\n        'p-resizable-column': this.props.resizableColumns\n      });\n\n      if (column.props.filter) {\n        filterElement = column.props.filterElement || _react.default.createElement(_InputText.InputText, {\n          onInput: function onInput(e) {\n            return _this4.onFilterInput(e, column);\n          },\n          type: this.props.filterType,\n          defaultValue: this.props.filters && this.props.filters[this.props.field] ? this.props.filters[this.props.field].value : null,\n          className: \"p-column-filter\",\n          placeholder: column.props.filterPlaceholder,\n          maxLength: column.props.filterMaxLength\n        });\n      }\n\n      var resizer = this.renderResizer(column);\n      return _react.default.createElement(\"th\", {\n        key: column.field || index,\n        className: className,\n        style: column.props.headerStyle || column.props.style,\n        tabIndex: column.props.sortable ? this.props.tabIndex : null,\n        onClick: function onClick(e) {\n          return _this4.onHeaderClick(e, column);\n        },\n        onMouseDown: this.onHeaderMouseDown,\n        onKeyDown: function onKeyDown(e) {\n          return _this4.onHeaderKeyDown(e, column);\n        },\n        rowSpan: column.props.rowSpan,\n        colSpan: column.props.colSpan,\n        onDragStart: this.props.onDragStart,\n        onDragOver: this.props.onDragOver,\n        onDragLeave: this.props.onDragLeave,\n        onDrop: this.props.onDrop\n      }, resizer, _react.default.createElement(\"span\", {\n        className: \"p-column-title\"\n      }, column.props.header), sortIconElement, filterElement);\n    }\n  }, {\n    key: \"renderHeaderRow\",\n    value: function renderHeaderRow(row, index) {\n      var _this5 = this;\n\n      var rowColumns = _react.default.Children.toArray(row.props.children);\n\n      var rowHeaderCells = rowColumns.map(function (col, index) {\n        return _this5.renderHeaderCell(col, index);\n      });\n      return _react.default.createElement(\"tr\", {\n        key: index\n      }, rowHeaderCells);\n    }\n  }, {\n    key: \"renderColumnGroup\",\n    value: function renderColumnGroup() {\n      var _this6 = this;\n\n      var rows = _react.default.Children.toArray(this.props.columnGroup.props.children);\n\n      return rows.map(function (row, i) {\n        return _this6.renderHeaderRow(row, i);\n      });\n    }\n  }, {\n    key: \"renderColumns\",\n    value: function renderColumns(columns) {\n      var _this7 = this;\n\n      if (columns) {\n        var headerCells = columns.map(function (col, index) {\n          return _this7.renderHeaderCell(col, index);\n        });\n        return _react.default.createElement(\"tr\", null, headerCells);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.props.columnGroup ? this.renderColumnGroup() : this.renderColumns(this.props.columns);\n      return _react.default.createElement(\"thead\", {\n        className: \"p-treetable-thead\"\n      }, content);\n    }\n  }]);\n\n  return TreeTableHeader;\n}(_react.Component);\n\nexports.TreeTableHeader = TreeTableHeader;\n\n_defineProperty(TreeTableHeader, \"defaultProps\", {\n  columns: null,\n  columnGroup: null,\n  sortField: null,\n  sortOrder: null,\n  multiSortMeta: null,\n  resizableColumns: false,\n  reorderableColumns: false,\n  onSort: null,\n  onResizeStart: null,\n  onDragStart: null,\n  onDragOver: null,\n  onDragLeave: null,\n  onDrop: null,\n  onFilter: null\n});\n\n_defineProperty(TreeTableHeader, \"propTypes\", {\n  columns: _propTypes.default.array,\n  columnGroup: _propTypes.default.any,\n  sortField: _propTypes.default.string,\n  sortOrder: _propTypes.default.number,\n  multiSortMeta: _propTypes.default.array,\n  resizableColumns: _propTypes.default.bool,\n  reorderableColumns: _propTypes.default.bool,\n  onSort: _propTypes.default.func,\n  onResizeStart: _propTypes.default.func,\n  onDragStart: _propTypes.default.func,\n  onDragOver: _propTypes.default.func,\n  onDragLeave: _propTypes.default.func,\n  onDrop: _propTypes.default.func,\n  onFilter: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}