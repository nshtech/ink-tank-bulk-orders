{"ast":null,"code":"import _toConsumableArray from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderTracker.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var OrderTracker = /*#__PURE__*/function (_Component) {\n  _inherits(OrderTracker, _Component);\n\n  var _super = _createSuper(OrderTracker);\n\n  function OrderTracker() {\n    var _this;\n\n    _classCallCheck(this, OrderTracker);\n\n    _this = _super.call(this);\n    _this.loadInitialState = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var customerArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              customerArray = [];\n              firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n                snapshot.forEach(function (childSnapshot) {\n                  if (childSnapshot.val().active.toLowerCase() === 'yes' || childSnapshot.val().active.toLowerCase() === 'true') {\n                    customerArray.push(childSnapshot.toJSON());\n                  }\n                });\n                console.log(customerArray);\n                console.log(customerArray[0]);\n              });\n\n              _this.setState({\n                bulk_orders: customerArray\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n              console.log('bulk orders in ordertracking: ', customerArray);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      bulk_orders: [],\n      selectedStatus: null,\n      selectedTeamMember: null,\n      editing: false,\n      loading: true,\n      selectedOrders: null\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.export = _this.export.bind(_assertThisInitialized(_this));\n    _this.onStatusFilterChange = _this.onStatusFilterChange.bind(_assertThisInitialized(_this));\n    _this.onTeamMemberFilterChange = _this.onTeamMemberFilterChange.bind(_assertThisInitialized(_this));\n    _this.bagStatusEditor = _this.bagStatusEditor.bind(_assertThisInitialized(_this));\n    _this.displaySelection = _this.displaySelection.bind(_assertThisInitialized(_this));\n    _this.loadInitialState = _this.loadInitialState.bind(_assertThisInitialized(_this));\n    _this.generalEditor = _this.generalEditor.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(OrderTracker, [{\n    key: \"export\",\n    value: function _export() {\n      this.dt.exportCSV();\n    }\n    /* --------------- Editing ---------------- */\n\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this.setState({\n        editing: false\n      });\n    }\n  }, {\n    key: \"onEditorValueChange\",\n    value: function () {\n      var _onEditorValueChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props, value) {\n        var db, currDay, currMonth, currYear, currDate, currTime;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                firebase.database().ref('/bulk_orders/' + props.rowData.order_id + '/' + props.field).set(value);\n                db = firebase.database().ref();\n                currDay = new Date().getDate();\n                currMonth = new Date().getMonth() + 1;\n\n                if (currMonth < 10) {\n                  currMonth = '0' + currMonth;\n                }\n\n                if (currDay < 10) {\n                  currDay = '0' + currDay;\n                }\n\n                currYear = new Date().getFullYear();\n                currDate = currYear + '-' + currMonth + '-' + currDay;\n                currTime = new Date().toLocaleTimeString('it-IT');\n                db.child('/history/' + currDate + props.rowData.order_id).once(\"value\").then(function (snapshot) {\n                  if (!snapshot.val()) {\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id).set(0);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n                  }\n\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/date').set(currDate + ' ' + currTime);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n                  db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n                });\n                firebase.database().ref('/history/' + props.rowData.order_id + '/last_quote_updated').set(currDate + ' ' + currTime);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function onEditorValueChange(_x, _x2) {\n        return _onEditorValueChange.apply(this, arguments);\n      }\n\n      return onEditorValueChange;\n    }()\n  }, {\n    key: \"inputTextEditor\",\n    value: function inputTextEditor(props, field) {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(InputText, {\n        type: \"text\",\n        value: props.rowData[field],\n        style: {\n          maxWidth: 100\n        },\n        onChange: function onChange(e) {\n          _this2.onEditorValueChange(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"generalEditor\",\n    value: function generalEditor(props, field) {\n      return this.inputTextEditor(props, field);\n    }\n  }, {\n    key: \"quoteEditor\",\n    value: function quoteEditor(props) {\n      return this.generalEditor(props, 'order_quote');\n    }\n  }, {\n    key: \"totalEditor\",\n    value: function totalEditor(props) {\n      return this.generalEditor(props, 'final_total');\n    }\n  }, {\n    key: \"quantityEditor\",\n    value: function quantityEditor(props) {\n      return this.generalEditor(props, 'quantity');\n    }\n  }, {\n    key: \"bagStatusEditor\",\n    value: function bagStatusEditor(allorders, currentorder, newstatus) {\n      var updatedOrders = _toConsumableArray(allorders);\n\n      var db = firebase.database().ref();\n      var currDay = new Date().getDate();\n      var currMonth = new Date().getMonth() + 1;\n\n      if (currMonth < 10) {\n        currMonth = '0' + currMonth;\n      }\n\n      if (currDay < 10) {\n        currDay = '0' + currDay;\n      }\n\n      var currYear = new Date().getFullYear();\n      var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n      var currTime = new Date().toLocaleTimeString('it-IT');\n\n      if (currentorder) {\n        var ids = Object.keys(currentorder).map(function (key) {\n          return currentorder[key].order_id;\n        });\n        updatedOrders.map(function (each) {\n          if (ids.includes(each.order_id)) {\n            each.status = newstatus;\n\n            if (newstatus === 'cancelled') {\n              each.final_total = 'N/A';\n              db.child('/bulk_orders/' + each.order_id + '/active').set('False');\n            }\n\n            firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime);\n            db.child('/history/' + currDate + each.order_id).once(\"value\").then(function (snapshot) {\n              if (!snapshot.val()) {\n                //why is each.id undefined on firebase?\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n              }\n\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n            });\n          }\n        });\n        this.setState({\n          bulk_orders: updatedOrders\n        });\n      }\n\n      console.log('bagStatusEditor currentorder: ', currentorder);\n      this.dothisfirst(currentorder, newstatus);\n    }\n  }, {\n    key: \"dothisfirst\",\n    value: function dothisfirst(currentorder, newstatus) {\n      console.log('currentorder: ', currentorder);\n      console.log('newstatus: ', newstatus);\n\n      if (currentorder) {\n        var ids = Object.keys(currentorder).map(function (key) {\n          return currentorder[key].order_id;\n        });\n        console.log('ids: ', ids);\n        var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n        query.once(\"value\").then(function (snapshot) {\n          snapshot.forEach(function (childSnapshot) {\n            var key = childSnapshot.key;\n\n            if (ids.includes(key)) {\n              var key = childSnapshot.key;\n              firebase.database().ref('/bulk_orders/' + key + '/' + \"status\").set(newstatus);\n              console.log('currentorder in forEach: ', currentorder);\n            }\n          });\n        });\n      }\n\n      return currentorder;\n    }\n  }, {\n    key: \"teammemberEditor\",\n    value: function teammemberEditor(allorders, currentorder, newteammember) {\n      var updatedOrders = _toConsumableArray(allorders);\n\n      var db = firebase.database().ref();\n      var currDay = new Date().getDate();\n      var currMonth = new Date().getMonth() + 1;\n\n      if (currMonth < 10) {\n        currMonth = '0' + currMonth;\n      }\n\n      if (currDay < 10) {\n        currDay = '0' + currDay;\n      }\n\n      var currYear = new Date().getFullYear();\n      var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n      var currTime = new Date().toLocaleTimeString('it-IT');\n\n      if (currentorder) {\n        var ids = Object.keys(currentorder).map(function (key) {\n          return currentorder[key].order_id;\n        });\n        updatedOrders.map(function (each) {\n          if (ids.includes(each.order_id)) {\n            each.team_member = newteammember;\n            firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime);\n            db.child('/history/' + currDate + each.order_id).once(\"value\").then(function (snapshot) {\n              if (!snapshot.val()) {\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n              }\n\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n            });\n          }\n        });\n        this.setState({\n          bulk_orders: updatedOrders\n        });\n      }\n\n      console.log('bagStatusEditor currentorder: ', currentorder);\n      this.dothisfirst_teammember(currentorder, newteammember);\n    }\n  }, {\n    key: \"dothisfirst_teammember\",\n    value: function dothisfirst_teammember(currentorder, newteammember) {\n      console.log('currentorder: ', currentorder);\n      console.log('newteammember: ', newteammember);\n\n      if (currentorder) {\n        var ids = Object.keys(currentorder).map(function (key) {\n          return currentorder[key].order_id;\n        });\n        console.log('ids: ', ids);\n        var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n        query.once(\"value\").then(function (snapshot) {\n          snapshot.forEach(function (childSnapshot) {\n            var key = childSnapshot.key;\n\n            if (ids.includes(key)) {\n              var key = childSnapshot.key;\n              firebase.database().ref('/bulk_orders/' + key + '/' + \"team_member\").set(newteammember);\n              console.log('currentorder in forEach: ', currentorder);\n            }\n          });\n        });\n      }\n\n      return currentorder;\n    }\n  }, {\n    key: \"displaySelection\",\n    value: function displaySelection(data) {\n      if (this.state.editing && (!data || data.length === 0)) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 20\n          }\n        }, \"No Selection\");\n      }\n    }\n    /* --------------- Filters ---------------- */\n    //dropdown for status\n\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      var orderStatusDisplay = {\n        'quote': 'quote',\n        'confirmed': 'confirmed',\n        'invoiced': 'invoiced',\n        'in-production': 'in production',\n        'shipped': 'shipped',\n        'fulfilled': 'fulfilled',\n        'cancelled': 'cancelled'\n      };\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 16\n        }\n      }, orderStatusDisplay[rowData.status]);\n    }\n  }, {\n    key: \"renderStatusFilter\",\n    value: function renderStatusFilter() {\n      var statuses = [{\n        label: 'Confirmed',\n        value: 'confirmed'\n      }, {\n        label: 'In Production',\n        value: 'in production'\n      }, {\n        label: 'Invoiced',\n        value: 'invoiced'\n      }, {\n        label: 'Fulfilled',\n        value: 'fulfilled'\n      }, {\n        label: 'Shipped',\n        value: 'Shipped'\n      }, {\n        label: 'Quote',\n        value: 'quote'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedStatus,\n        options: statuses,\n        onChange: this.onStatusFilterChange,\n        showClear: true,\n        placeholder: \"Select a Status\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"onStatusFilterChange\",\n    value: function onStatusFilterChange(event) {\n      this.dt.filter(event.value, 'status', 'equals');\n      this.setState({\n        selectedStatus: event.value\n      });\n    } //dropdown for reshall\n\n  }, {\n    key: \"teammemberBodyTemplate\",\n    value: function teammemberBodyTemplate(rowData) {\n      var teammemberDisplay = {\n        'Caden Gaviria': 'Caden Gaviria',\n        'Philippe Manzone': 'Philippe Manzone',\n        'Alec Aragon': 'Alec Aragon',\n        'Shannon Groves': 'Shannon Groves',\n        'Ali Kilic': 'Ali Kilic'\n      };\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.teammember,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 16\n        }\n      }, teammemberDisplay[rowData.teammember]);\n    }\n  }, {\n    key: \"renderTeamMemberFilter\",\n    value: function renderTeamMemberFilter() {\n      var teammembers = [{\n        label: 'Caden Gaviria',\n        value: 'Caden Gaviria'\n      }, {\n        label: 'Philippe Manzone',\n        value: 'Philippe Manzone'\n      }, {\n        label: 'Alec Aragon',\n        value: 'Alec Aragon'\n      }, {\n        label: 'Shannon Groves',\n        value: 'Shannon Groves'\n      }, {\n        label: 'Ali Kilic',\n        value: 'Ali Kilic'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedTeamMember,\n        options: teammembers,\n        onChange: this.onTeamMemberFilterChange,\n        showClear: true,\n        placeholder: \"Select a Team Member\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"onTeamMemberFilterChange\",\n    value: function onTeamMemberFilterChange(event) {\n      this.dt.filter(event.value, 'team_member', 'equals');\n      this.setState({\n        selectedTeamMember: event.value\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadInitialState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var statusFilter = this.renderStatusFilter();\n      var teammemberFilter = this.renderTeamMemberFilter();\n      var allorders = this.state.bulk_orders;\n      var currentorder = this.state.selectedOrders;\n      var allbulkorders = this.state.bulk_orders;\n      var currentorders = this.state.selectedOrders;\n      /* --------------- RETURN ---------------- */\n\n      /* ---------------- edit mode ------------*/\n\n      if (this.state.editing) {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            marginBottom: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: 'white',\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-save\",\n          iconPos: \"left\",\n          label: \"SAVE\",\n          onClick: this.save,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#23547B',\n            backgroundColor: '#B3E5FC',\n            borderColor: '#23547B',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Invoiced\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'invoiced');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#694382',\n            backgroundColor: '#ECCFFF',\n            borderColor: '#694382',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Quote\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'quote');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Confirmed\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'confirmed');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#256029',\n            backgroundColor: '#C8E6C9',\n            borderColor: '#256029',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"In Production\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'in-production');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#C63737',\n            backgroundColor: '#FFCDD2',\n            borderColor: '#C63737',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Shipped\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'shipped');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Fulfilled\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'fulfilled');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Cancelled\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allorders, currentorder, 'cancelled');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#23547B',\n            backgroundColor: '#B3E5FC',\n            borderColor: '#23547B',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Caden Gaviria\",\n          onClick: function onClick() {\n            _this3.teammemberEditor(allorders, currentorder, 'Caden Gaviria');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#694382',\n            backgroundColor: '#ECCFFF',\n            borderColor: '#694382',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Philippe Manzone\",\n          onClick: function onClick() {\n            _this3.teammemberEditor(allorders, currentorder, 'Philippe Manzone');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#256029',\n            backgroundColor: '#C8E6C9',\n            borderColor: '#256029',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Alec Aragon\",\n          onClick: function onClick() {\n            _this3.teammemberEditor(allorders, currentorder, 'Alec Aragon');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Shannon Groves\",\n          onClick: function onClick() {\n            _this3.teammemberEditor(allorders, currentorder, 'Shannon Groves');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#C63737',\n            backgroundColor: '#FFCDD2',\n            borderColor: '#C63737',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"Ali Kilic\",\n          onClick: function onClick() {\n            _this3.teammemberEditor(allorders, currentorder, 'Ali Kilic');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }\n        })); //loading = {true} loadingIcon = \"pi pi-spinner\"\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"elmid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }\n        }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }\n        }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }\n        }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.bulk_orders,\n          header: header,\n          ref: function ref(el) {\n            _this3.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          footer: this.displaySelection(this.state.selectedOrders),\n          selection: this.state.selectedOrders,\n          onSelectionChange: function onSelectionChange(e) {\n            return _this3.setState({\n              selectedOrders: e.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          selectionMode: \"multiple\",\n          style: {\n            width: '3em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"order_id\",\n          header: \"ID\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"organization\",\n          header: \"Organization\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterElement: statusFilter,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"design\",\n          header: \"Design\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"tax_exempt\",\n          header: \"Tax Exempt\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"team_member\",\n          header: \"Team Member\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"status\",\n          header: \"Status\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          body: this.statusBodyTemplate,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"blank\",\n          header: \"Blank\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          exportable: false,\n          editor: this.generalEditor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"order_quote\",\n          header: \"Order Quote\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          editor: this.generalEditor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"final_total\",\n          header: \"Final Total\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          editor: this.generalEditor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"quantity\",\n          header: \"Quantity\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          editor: this.generalEditor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }\n        }))));\n        /* ---------------- NOT edit mode ------------*/\n      } else {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-pencil\",\n          iconPos: \"left\",\n          label: \"EDIT\",\n          onClick: this.edit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }\n        }));\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"elmid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }\n        }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }\n        }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }\n        }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.bulk_orders,\n          header: header,\n          ref: function ref(el) {\n            _this3.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"order_id\",\n          header: \"ID\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"organization\",\n          header: \"Organization\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterElement: statusFilter,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"design\",\n          header: \"Design\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"tax_exempt\",\n          header: \"Tax Exempt\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"team_member\",\n          header: \"Team Member\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"status\",\n          header: \" Status \",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          body: this.statusBodyTemplate,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"blank\",\n          header: \"Blank\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          exportable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"order_quote\",\n          header: \"Order Quote\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"final_total\",\n          header: \"Final Total\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"quantity\",\n          header: \"Quantity\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return OrderTracker;\n}(Component);","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderTracker.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","firebase","validator","customerData","OrderTracker","loadInitialState","customerArray","database","ref","on","snapshot","forEach","childSnapshot","val","active","toLowerCase","push","toJSON","console","log","setState","bulk_orders","loading","state","selectedStatus","selectedTeamMember","editing","selectedOrders","edit","bind","save","export","onStatusFilterChange","onTeamMemberFilterChange","bagStatusEditor","displaySelection","generalEditor","dt","exportCSV","props","value","rowData","order_id","field","set","db","currDay","Date","getDate","currMonth","getMonth","currYear","getFullYear","currDate","currTime","toLocaleTimeString","child","once","then","blank","design","team_member","status","final_total","order_quote","quantity","maxWidth","e","onEditorValueChange","target","inputTextEditor","allorders","currentorder","newstatus","updatedOrders","ids","Object","keys","map","key","each","includes","dothisfirst","query","orderByKey","newteammember","dothisfirst_teammember","data","length","textAlign","orderStatusDisplay","statuses","label","minWidth","event","filter","teammemberDisplay","teammember","teammembers","statusFilter","renderStatusFilter","teammemberFilter","renderTeamMemberFilter","allbulkorders","currentorders","header","marginBottom","backgroundColor","borderColor","marginRight","color","teammemberEditor","el","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","width","statusBodyTemplate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class OrderTracker extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bulk_orders: [],\n            selectedStatus: null,\n            selectedTeamMember: null,\n            editing: false,\n            loading: true,\n            selectedOrders: null\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n        this.onTeamMemberFilterChange = this.onTeamMemberFilterChange.bind(this);\n        this.bagStatusEditor = this.bagStatusEditor.bind(this)\n        this.displaySelection = this.displaySelection.bind(this)\n        this.loadInitialState = this.loadInitialState.bind(this)\n        this.generalEditor = this.generalEditor.bind(this);\n\n\n\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n    /* --------------- Editing ---------------- */\n    edit() {\n        this.setState({ editing: true });\n    }\n\n    save() {\n        this.setState({ editing: false });\n    }\n\n    async onEditorValueChange(props, value) {\n\n        firebase.database().ref('/bulk_orders/' + props.rowData.order_id + '/' + props.field).set(value)\n        const db = firebase.database().ref();\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() + 1;\n        if (currMonth < 10) {\n            currMonth = '0' + currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-' + currDay;\n        var currTime = new Date().toLocaleTimeString('it-IT');\n        db.child('/history/' + currDate + props.rowData.order_id).once(\"value\")\n            .then(snapshot => {\n                if (!snapshot.val()) {\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id).set(0)\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n                }\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/date').set(currDate + ' ' + currTime);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n\n            })\n        firebase.database().ref('/history/' + props.rowData.order_id + '/last_quote_updated').set(currDate + ' ' + currTime)\n\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.target.value); }} />\n    }\n\n    generalEditor(props, field) {\n        return this.inputTextEditor(props, field);\n    }\n\n    quoteEditor(props) {\n        return this.generalEditor(props,'order_quote');\n    }\n\n    totalEditor(props) {\n        return this.generalEditor(props,'final_total');\n    }\n\n    quantityEditor(props) {\n        return this.generalEditor(props,'quantity');\n    }\n\n\n    bagStatusEditor(allorders, currentorder, newstatus) {\n        let updatedOrders = [...allorders];\n        const db = firebase.database().ref()\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() + 1;\n        if (currMonth < 10) {\n            currMonth = '0' + currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-' + currDay;\n        //var currDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            updatedOrders.map(each => {\n                if (ids.includes(each.order_id)) {\n                    each.status = newstatus;\n                    if (newstatus === 'cancelled') {\n                        each.final_total = 'N/A'\n                        db.child('/bulk_orders/' + each.order_id + '/active').set('False');\n                    }\n                    firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime)\n\n                    db.child('/history/' + currDate + each.order_id).once(\"value\")\n                        .then(snapshot => {\n                            if (!snapshot.val()) { //why is each.id undefined on firebase?\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0)\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n                            }\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n\n                        })\n\n                }\n            })\n            this.setState({ bulk_orders: updatedOrders });\n        }\n        console.log('bagStatusEditor currentorder: ', currentorder);\n        this.dothisfirst(currentorder, newstatus)\n\n    }\n\n\n    dothisfirst(currentorder, newstatus) {\n        console.log('currentorder: ', currentorder);\n        console.log('newstatus: ', newstatus);\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            console.log('ids: ', ids);\n            var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n            query.once(\"value\")\n                .then(function (snapshot) {\n                    snapshot.forEach(function (childSnapshot) {\n                        var key = childSnapshot.key;\n                        if (ids.includes(key)) {\n                            var key = childSnapshot.key;\n                            firebase.database().ref('/bulk_orders/' + key + '/' + \"status\").set(newstatus);\n                            console.log('currentorder in forEach: ', currentorder);\n\n                        }\n                    });\n                });\n        }\n        return currentorder\n    }\n\n    teammemberEditor(allorders, currentorder, newteammember) {\n        let updatedOrders = [...allorders];\n        const db = firebase.database().ref()\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() + 1;\n        if (currMonth < 10) {\n            currMonth = '0' + currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-' + currDay;\n        //var currDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            updatedOrders.map(each => {\n                if (ids.includes(each.order_id)) {\n                    each.team_member = newteammember;\n                    firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime)\n\n                    db.child('/history/' + currDate + each.order_id).once(\"value\")\n                        .then(snapshot => {\n                            if (!snapshot.val()) {\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0)\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n                            }\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n\n                        })\n\n                }\n            })\n            this.setState({ bulk_orders: updatedOrders });\n        }\n        console.log('bagStatusEditor currentorder: ', currentorder);\n        this.dothisfirst_teammember(currentorder, newteammember)\n\n    }\n\n\n    dothisfirst_teammember(currentorder, newteammember) {\n        console.log('currentorder: ', currentorder);\n        console.log('newteammember: ', newteammember);\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            console.log('ids: ', ids);\n            var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n            query.once(\"value\")\n                .then(function (snapshot) {\n                    snapshot.forEach(function (childSnapshot) {\n                        var key = childSnapshot.key;\n                        if (ids.includes(key)) {\n                            var key = childSnapshot.key;\n                            firebase.database().ref('/bulk_orders/' + key + '/' + \"team_member\").set(newteammember);\n                            console.log('currentorder in forEach: ', currentorder);\n\n                        }\n                    });\n                });\n        }\n        return currentorder\n    }\n\n\n\n    displaySelection(data) {\n        if (this.state.editing && (!data || data.length === 0)) {\n            return <div style={{ textAlign: 'left' }}>No Selection</div>;\n        }\n    }\n\n\n    /* --------------- Filters ---------------- */\n\n    //dropdown for status\n    statusBodyTemplate(rowData) {\n        var orderStatusDisplay = {\n            'quote': 'quote',\n            'confirmed': 'confirmed',\n            'invoiced': 'invoiced',\n            'in-production': 'in production',\n            'shipped': 'shipped',\n            'fulfilled': 'fulfilled',\n            'cancelled': 'cancelled'\n        }\n        return <span className={rowData.status}>{orderStatusDisplay[rowData.status]}</span>;\n    }\n\n    renderStatusFilter() {\n        var statuses = [\n            { label: 'Confirmed', value: 'confirmed' },\n            { label: 'In Production', value: 'in production' },\n            { label: 'Invoiced', value: 'invoiced' },\n            { label: 'Fulfilled', value: 'fulfilled' },\n            { label: 'Shipped', value: 'Shipped' },\n            { label: 'Quote', value: 'quote' }\n        ];\n\n        return (\n\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n                showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }} />\n        );\n    }\n\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'status', 'equals');\n        this.setState({ selectedStatus: event.value });\n    }\n\n\n    //dropdown for reshall\n\n    teammemberBodyTemplate(rowData) {\n        var teammemberDisplay = {\n            'Caden Gaviria': 'Caden Gaviria',\n            'Philippe Manzone': 'Philippe Manzone',\n            'Alec Aragon': 'Alec Aragon',\n            'Shannon Groves': 'Shannon Groves',\n            'Ali Kilic': 'Ali Kilic'\n        }\n        return <span className={rowData.teammember}>{teammemberDisplay[rowData.teammember]}</span>\n    }\n\n    renderTeamMemberFilter() {\n        var teammembers = [\n            { label: 'Caden Gaviria', value: 'Caden Gaviria' },\n            { label: 'Philippe Manzone', value: 'Philippe Manzone' },\n            { label: 'Alec Aragon', value: 'Alec Aragon' },\n            { label: 'Shannon Groves', value: 'Shannon Groves' },\n            { label: 'Ali Kilic', value: 'Ali Kilic' }\n        ];\n\n        return (\n\n            <Dropdown value={this.state.selectedTeamMember} options={teammembers} onChange={this.onTeamMemberFilterChange}\n                showClear={true} placeholder=\"Select a Team Member\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }} />\n        );\n    }\n\n\n    onTeamMemberFilterChange(event) {\n        this.dt.filter(event.value, 'team_member', 'equals');\n        this.setState({ selectedTeamMember: event.value });\n    }\n\n    loadInitialState = async () => {\n        const customerArray = [];\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                if (childSnapshot.val().active.toLowerCase() === 'yes' || childSnapshot.val().active.toLowerCase() === 'true') {\n                    customerArray.push(childSnapshot.toJSON());\n                }\n\n            });\n            console.log(customerArray)\n            console.log(customerArray[0])\n        });\n        this.setState({ bulk_orders: customerArray });\n        this.setState({ loading: false });\n        console.log('bulk orders in ordertracking: ', customerArray);\n\n    }\n\n    componentWillMount() {\n        this.loadInitialState()\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n        const teammemberFilter = this.renderTeamMemberFilter();\n        const allorders = this.state.bulk_orders;\n        const currentorder = this.state.selectedOrders;\n        const allbulkorders = this.state.bulk_orders;\n        const currentorders = this.state.selectedOrders;\n\n        /* --------------- RETURN ---------------- */\n        /* ---------------- edit mode ------------*/\n        if (this.state.editing) {\n            var header = <div style={{ textAlign: 'left' }}>\n                <div style={{ marginBottom: 10 }}>\n                    <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-save\" iconPos=\"left\" label=\"SAVE\" onClick={this.save}>\n                    </Button>\n                </div>\n                <div>\n                    <Button type=\"button\" style={{ color: '#23547B', backgroundColor: '#B3E5FC', borderColor: '#23547B', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Invoiced\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'invoiced') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#694382', backgroundColor: '#ECCFFF', borderColor: '#694382', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Quote\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'quote') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Confirmed\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'confirmed') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#256029', backgroundColor: '#C8E6C9', borderColor: '#256029', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"In Production\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'in-production') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#C63737', backgroundColor: '#FFCDD2', borderColor: '#C63737', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Shipped\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'shipped') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Fulfilled\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'fulfilled') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Cancelled\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'cancelled') }}>\n                    </Button>\n                    \n                    \n\n                </div>\n                <div>\n                    <Button type=\"button\" style={{ color: '#23547B', backgroundColor: '#B3E5FC', borderColor: '#23547B', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Caden Gaviria\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Caden Gaviria') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#694382', backgroundColor: '#ECCFFF', borderColor: '#694382', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Philippe Manzone\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Philippe Manzone') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#256029', backgroundColor: '#C8E6C9', borderColor: '#256029', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Alec Aragon\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Alec Aragon') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Shannon Groves\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Shannon Groves') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#C63737', backgroundColor: '#FFCDD2', borderColor: '#C63737', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Ali Kilic\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Ali Kilic') }}>\n                    </Button>\n\n                </div>\n                <div>\n\n                </div>\n            </div>;\n            //loading = {true} loadingIcon = \"pi pi-spinner\"\n            return (\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Ink Tank Bulk Order Tracker</h1>\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <DataTable value={this.state.bulk_orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true}\n                            editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}\n                            footer={this.displaySelection(this.state.selectedOrders)} selection={this.state.selectedOrders} onSelectionChange={e => this.setState({ selectedOrders: e.value })}>\n                            <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                            <Column field=\"order_id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} exportable={false} />\n                            <Column field=\"design\" header=\"Design\" style={{ maxWidth: 100 }} sortable={true} />\n                            <Column field=\"tax_exempt\" header=\"Tax Exempt\" style={{ maxWidth: 100 }} sortable={true} exportable={false} />\n                            <Column field=\"team_member\" header=\"Team Member\" style={{ maxWidth: 100 }} sortable={true} exportable={false} />\n                            <Column field=\"status\" header=\"Status\" style={{ maxWidth: 100 }} sortable={true} body={this.statusBodyTemplate} exportable={false} />\n                            <Column field=\"blank\" header=\"Blank\" style={{ maxWidth: 150 }} sortable={true} exportable={false} editor={this.generalEditor} />\n                            <Column field=\"order_quote\" header=\"Order Quote\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} editor={this.generalEditor} />\n                            <Column field=\"final_total\" header=\"Final Total\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} editor={this.generalEditor} />\n                            <Column field=\"quantity\" header=\"Quantity\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} editor={this.generalEditor} />\n                        </DataTable>\n                    </div>\n                </div>\n            );\n            /* ---------------- NOT edit mode ------------*/\n        } else {\n            var header = <div style={{ textAlign: 'left' }}>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                </Button>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-pencil\" iconPos=\"left\" label=\"EDIT\" onClick={this.edit}>\n                </Button>\n            </div>;\n            return (\n\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Ink Tank Bulk Order Tracker</h1>\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <DataTable value={this.state.bulk_orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                            <Column field=\"order_id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} exportable={false} />\n                            <Column field=\"design\" header=\"Design\" style={{ maxWidth: 100 }} sortable={true} />\n                            <Column field=\"tax_exempt\" header=\"Tax Exempt\" style={{ maxWidth: 100 }} sortable={true} exportable={false} />\n                            <Column field=\"team_member\" header=\"Team Member\" style={{ maxWidth: 100 }} sortable={true} exportable={false} />\n                            <Column field=\"status\" header=\" Status \" style={{ maxWidth: 100 }} sortable={true} body={this.statusBodyTemplate} exportable={false} />\n                            <Column field=\"blank\" header=\"Blank\" style={{ maxWidth: 150 }} sortable={true} exportable={false} />\n                            <Column field=\"order_quote\" header=\"Order Quote\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} />\n                            <Column field=\"final_total\" header=\"Final Total\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} />\n                            <Column field=\"quantity\" header=\"Quantity\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} />\n\n                        </DataTable>\n                    </div>\n                </div>\n            );\n\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}