{"ast":null,"code":"var _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/AddCustomers.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddCustomers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: [],\n      orders: [],\n      selectedCustomer: null,\n      editing: false,\n      idcount: null,\n      newfirstname: null,\n      newlastname: null,\n      newid: null,\n      newplanYear: null,\n      newplanQuarter: null,\n      newmax: null,\n      newreshall: null,\n      newphone: null,\n      newemail: null,\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planSelectQuarter: [{\n        label: 'Full Year',\n        value: '-F-W-S'\n      }, {\n        label: 'Winter/Spring Quarter',\n        value: '-W-S'\n      }, {\n        label: 'Fall Quarter',\n        value: '-F'\n      }, {\n        label: 'Winter Quarter',\n        value: '-W'\n      }, {\n        label: 'Spring Quarter',\n        value: '-S'\n      }],\n      planSelectWeight: [{\n        label: '15 lb/week',\n        value: '15'\n      }, {\n        label: '20 lb/week',\n        value: '20'\n      }, {\n        label: '25 lb/week',\n        value: '25'\n      }],\n      planSelectReshall: [{\n        label: 'Choose later',\n        value: 'Choose later'\n      }, {\n        label: '560 Lincoln',\n        value: '560 Lincoln'\n      }, {\n        label: '720 Emerson',\n        value: '720 Emerson'\n      }, {\n        label: '1715 Chicago',\n        value: '1715 Chicago'\n      }, {\n        label: '1838 Chicago',\n        value: '1838 Chicago'\n      }, {\n        label: '1856 Orrington',\n        value: '1856 Orrington'\n      }, {\n        label: '2303 Sheridan',\n        value: '2303 Sheridan'\n      }, {\n        label: 'Ayers',\n        value: 'Ayers'\n      }, {\n        label: 'Allison',\n        value: 'Allison'\n      }, {\n        label: 'Bobb',\n        value: 'Bobb'\n      }, {\n        label: 'Chapin',\n        value: 'Chapin'\n      }, {\n        label: 'East Fairchild',\n        value: 'East Fairchild'\n      }, {\n        label: 'Elder',\n        value: 'Elder'\n      }, {\n        label: 'West Fairchild',\n        value: 'West Fairchild'\n      }, {\n        label: 'Foster-Walker (PLEX)',\n        value: 'Foster-Walker (PLEX)'\n      }, {\n        label: 'Goodrich',\n        value: 'Goodrich'\n      }, {\n        label: 'Hobart',\n        value: 'Hobart'\n      }, {\n        label: 'Jones',\n        value: 'Jones'\n      }, {\n        label: 'Kemper',\n        value: 'Kemper'\n      }, {\n        label: 'McCulloch',\n        value: 'McCulloch'\n      }, {\n        label: 'PARC (North Mid Quads)',\n        value: 'PARC (North Mid Quads)'\n      }, {\n        label: 'Rogers House',\n        value: 'Rogers House'\n      }, {\n        label: 'Sargent',\n        value: 'Sargent'\n      }, {\n        label: 'Shepard Residential College (South Mid Quads)',\n        value: 'Shepard Residential College (South Mid Quads)'\n      }, {\n        label: 'Shepard Hall',\n        value: 'Shepard Hall'\n      }, {\n        label: 'Slivka',\n        value: 'Slivka'\n      }, {\n        label: 'Willard',\n        value: 'Willard'\n      }, {\n        label: 'Delta Gamma',\n        value: 'Delta Gamma'\n      }, {\n        label: 'Kappa Kappa Gamma',\n        value: 'Kappa Kappa Gamma'\n      }, {\n        label: 'Zeta Beta Tau (ZBT)',\n        value: 'Zeta Beta Tau (ZBT)'\n      }]\n    };\n    this.edit = this.edit.bind(this);\n    this.save = this.save.bind(this);\n    this.onPlanYearValueChange = this.onPlanYearValueChange.bind(this);\n    this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this); //this.getCustomerHistory = this.getCustomerHistory.bind(this)\n\n    this.displayPlanQuarters = this.displayPlanQuarters.bind(this);\n    this.resetNewInfo = this.resetNewInfo.bind(this);\n    this.addCustomer = this.addCustomer.bind(this);\n    this.padId = this.padId.bind(this);\n  }\n\n  padId(idNum) {\n    var digitLength = idNum.toString().length;\n\n    if (digitLength === 1) {\n      var result = '0000' + idNum;\n    } else if (digitLength === 2) {\n      var result = '000' + idNum;\n    } else if (digitLength === 3) {\n      var result = '00' + idNum;\n    } else if (digitLength === 4) {\n      var result = '0' + idNum;\n    } else if (digitLength === 5) {\n      var result = idNum.toString();\n    }\n\n    return result;\n  }\n\n  edit() {\n    this.setState({\n      editing: true\n    }); //this.resetNewInfo();\n  }\n\n  save(customer) {\n    this.setState({\n      editing: false\n    }); //console.log(this.state.newplan)\n\n    let allcustomers = [...this.state.customers];\n    let newcustomer = { ...this.state.selectedCustomer\n    };\n\n    if (this.state.newplanyear && this.state.newplanquarter) {\n      newcustomer.plan = this.state.newplanyear + this.state.newplanquarter; //console.log('newplanQuarter: ', this.state.newplanQuarter);\n      //console.log('newplanYear', this.state.newplanYear)\n\n      firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n    } else if (this.state.newplanyear) {\n      newcustomer.plan = this.state.newplanyear + customer.plan.substring(9); //console.log('newcustomer.plan: ', newcustomer.plan);\n      //console.log('newplanYear', this.state.newplanYear)\n      //console.log('customer quarter: ', customer.plan.substring(9));\n\n      firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n    } else if (this.state.newplanquarter) {\n      newcustomer.plan = customer.plan.substring(0, 9) + this.state.newplanquarter; //console.log('newcustomer.plan: ', newcustomer.plan);\n      //console.log('customer year', customer.plan.substring(0,9))\n      //console.log('newplanQuarter: ', this.state.newplanQuarter);\n\n      firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n    }\n\n    if (this.state.newmax) {\n      newcustomer.maxweight = this.state.newmax;\n      firebase.database().ref('/customers/' + customer.id + '/maxweight').set(newcustomer.maxweight);\n    }\n\n    if (this.state.newreshall) {\n      newcustomer.reshall = this.state.newreshall;\n      firebase.database().ref('/customers/' + customer.id + '/reshall').set(newcustomer.reshall);\n    }\n\n    if (this.state.newphone) {\n      newcustomer.phone = this.state.newphone;\n      firebase.database().ref('/customers/' + customer.id + '/phone').set(newcustomer.phone);\n    }\n\n    if (this.state.newemail) {\n      newcustomer.email = this.state.newemail;\n      firebase.database().ref('/customers/' + customer.id + '/email').set(newcustomer.email);\n    }\n\n    let count = 0;\n    let individual = null;\n    allcustomers.map(each => {\n      if (newcustomer.id == each.id) {\n        individual = { ...allcustomers[count]\n        };\n        individual = newcustomer;\n        allcustomers[count] = individual;\n      }\n\n      count = count + 1;\n    });\n    this.setState({\n      customers: allcustomers\n    });\n    this.setState({\n      selectedCustomer: newcustomer\n    });\n  } //CUSTOMER INFORMATION EDITING\n\n\n  onFirstNameValueChange(value) {\n    //console.log('new first name: ', value)\n    this.setState({\n      newfirstname: value\n    });\n  }\n\n  onLastNameValueChange(value) {\n    //console.log('new last name: ', value)\n    this.setState({\n      newlastname: value\n    });\n  }\n\n  onIdValueChange(value) {\n    //console.log('new id name: ', value)\n    this.setState({\n      newid: value\n    });\n  }\n\n  onPlanYearValueChange(value) {\n    //console.log('newPlanYear: ', value)\n    this.setState({\n      newplanyear: value\n    });\n  }\n\n  onPlanQuarterValueChange(value) {\n    //console.log('newPlanQuarter: ', value)\n    this.setState({\n      newplanquarter: value\n    });\n  }\n\n  onMaxweightValueChange(value) {\n    this.setState({\n      newmax: value\n    });\n  }\n\n  onReshallValueChange(value) {\n    this.setState({\n      newreshall: value\n    });\n  }\n\n  onPhoneValueChange(value) {\n    if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n      this.setState({\n        newphone: value\n      });\n    } //this.setState({ newphone: value });\n\n  }\n\n  onEmailValueChange(value) {\n    if (value.includes('@') && value.includes('.')) {\n      this.setState({\n        newemail: value\n      });\n    }\n  }\n\n  resetNewInfo() {\n    this.setState({\n      newfirstname: ''\n    });\n    this.setState({\n      newlastname: ''\n    });\n    this.setState({\n      newid: ''\n    });\n    this.setState({\n      newplanyear: ''\n    });\n    this.setState({\n      newplanquarter: ''\n    });\n    this.setState({\n      newmax: ''\n    });\n    this.setState({\n      newreshall: ''\n    });\n    this.setState({\n      newphone: ''\n    });\n    this.setState({\n      newemail: ''\n    });\n    this.setState({\n      newoverage: ''\n    });\n  }\n\n  addCustomer() {\n    //console.log('new first name: ', this.state.newfirstname);\n    //console.log('new last name: ', this.state.newlastname);\n    // console.log('new plan year: ', this.state.newplanyear);\n    // console.log('new plan quarter: ', this.state.newplanquarter);\n    // console.log('new max weight: ', this.state.newmax);\n    // console.log('new res hall: ', this.state.newreshall);\n    // console.log('new phone: ', this.state.newphone);\n    // console.log('new email: ', this.state.newemail);\n    //this.setState({idcount: this.state.idcount+1});\n    //console.log('updated id Count', this.state.idcount);\n    if (this.state.newfirstname !== '' && this.state.newlastname !== '' && this.state.newemail !== '' && this.state.newphone !== '' && this.state.newreshall !== '' && this.state.newmax !== '' && this.state.newplanyear !== null && this.state.newplanquarter !== null) {\n      var idNum = this.padId(this.state.idcount); // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n\n      var id = this.state.newid; //console.log('NEW ID: ', id);\n\n      this.messages.show({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Customer Added!'\n      });\n      const db = firebase.database().ref(); //updating id count in firebase and then updating state variable\n\n      db.child('/idcount').set(this.state.idcount + 1);\n      db.child('/idcount').once('value').then(snapshot => {\n        this.setState({\n          idcount: snapshot.val()\n        });\n        console.log('state var idcount: ', this.state.idcount); //idNum = snapshot.val();\n\n        console.log('id from firebase: ', snapshot.val());\n      });\n      const fullname = this.state.newfirstname + ' ' + this.state.newlastname;\n      const email = this.state.newemail;\n      const phone = this.state.newphone;\n      const reshall = this.state.newreshall;\n      const maxweight = this.state.newmax;\n      const plan = this.state.newplanyear + this.state.newplanquarter;\n      db.child('/customers/' + id).once(\"value\").then(snapshot => {\n        if (!snapshot.val()) {\n          db.child('/customers/' + id + '/activestatus').set(\"active\");\n          db.child('/customers/' + id + '/bag-condition').set(\"good\");\n          db.child('/customers/' + id + '/bag-missing').set(\"false\");\n          db.child('/customers/' + id + '/detergent').set('unscented');\n          db.child('/customers/' + id + '/email').set(email);\n          db.child('/customers/' + id + '/fabric_softener').set('No');\n          db.child('/customers/' + id + '/id').set(id);\n          db.child('/customers/' + id + '/last_status_updated').set('N/A');\n          db.child('/customers/' + id + '/last_weight_updated').set('N/A');\n          db.child('/customers/' + id + '/laundrystatus').set('out-of-service');\n          db.child('/customers/' + id + '/maxweight').set(maxweight);\n          db.child('/customers/' + id + '/name').set(fullname);\n          db.child('/customers/' + id + '/phone').set(phone);\n          db.child('/customers/' + id + '/plan').set(plan);\n          db.child('/customers/' + id + '/reshall').set(reshall);\n          db.child('/customers/' + id + '/weekweight').set(\"N/A\");\n          db.child('/customers/' + id + '/weightstatus').set(\"N/A\");\n        }\n      });\n      this.setState({\n        newfirstname: ''\n      });\n      this.setState({\n        newlastname: ''\n      });\n      this.setState({\n        newid: ''\n      });\n      this.setState({\n        newplanyear: ''\n      });\n      this.setState({\n        newplanquarter: ''\n      });\n      this.setState({\n        newmax: ''\n      });\n      this.setState({\n        newreshall: ''\n      });\n      this.setState({\n        newphone: ''\n      });\n      this.setState({\n        newemail: ''\n      }); //const curr  = await this.resetNewInfo();\n      //console.log('reset info: ', this.state.newfirstname);\n      //document.getElementById(\"form\").reset();\n    } else {\n      this.messages.show({\n        severity: \"error\",\n        summary: \"Missing Fields\",\n        detail: \"Please enter all information\"\n      });\n    }\n  }\n\n  displayPlanQuarters(customerPlan) {\n    if (customerPlan) {\n      if (customerPlan === 'F') {\n        const result = 'Fall Quarter';\n        return result;\n      } else if (customerPlan === 'W') {\n        const result = 'Winter Quarter';\n        return result;\n      } else if (customerPlan === 'S') {\n        const result = 'Spring Quarter';\n        return result;\n      } else if (customerPlan === 'W-S') {\n        const result = 'Winter/Spring Quarter';\n        return result;\n      } else if (customerPlan === 'F-W-S') {\n        const result = 'Full Year';\n        return result;\n      }\n    }\n  }\n  /* --------------- Filters ---------------- */\n\n\n  componentDidMount() {\n    const customerArray = [];\n    firebase.database().ref('/customers').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        customerArray.push(childSnapshot.toJSON());\n      });\n    });\n    this.setState({\n      customers: customerArray\n    });\n    const orderArray = [];\n    firebase.database().ref('/orders').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        orderArray.push(childSnapshot.toJSON());\n      });\n    });\n    this.setState({\n      orders: orderArray\n    }); //var idNum = 0;\n\n    firebase.database().ref('/idcount').once('value').then(snapshot => {\n      this.setState({\n        idcount: snapshot.val()\n      });\n      console.log('state var idcount: ', this.state.idcount); //idNum = snapshot.val();\n\n      console.log('id from firebase: ', snapshot.val());\n    }); //console.log('var idNum: ', idNum);\n    //this.setState({idcount: idNum});\n  }\n\n  render() {\n    var header = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 26\n    }, this);\n\n    var customer = this.state.selectedCustomer; //var history = this.getCustomerHistory(customer)\n\n    var laundryStatusDisplay = {\n      'picked-up': 'picked up',\n      'delivered-to-SH': 'delivered to SH',\n      'delivered-to-dorm': 'delivered to dorm',\n      'out-of-service': 'out of service',\n      'bag-missing': 'bag missing'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-fluid p-formgrid p-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname6\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            value: this.state.newfirstname,\n            id: \"firstname\",\n            type: \"text\",\n            onChange: e => {\n              this.onFirstNameValueChange(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname6\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            value: this.state.newlastname,\n            id: \"lastname\",\n            type: \"text\",\n            onChange: e => {\n              this.onLastNameValueChange(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname6\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            value: this.state.newid,\n            id: \"firstname\",\n            type: \"text\",\n            onChange: e => {\n              this.onIdValueChange(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname6\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            value: this.state.newemail,\n            id: \"newemail\",\n            type: \"text\",\n            onChange: e => {\n              this.onEmailValueChange(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstname6\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            value: this.state.newphone,\n            id: \"newphone\",\n            type: \"text\",\n            onChange: e => {\n              this.onPhoneValueChange(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Laundry Plan Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            value: this.state.newplanyear,\n            options: this.state.planSelectYear,\n            onChange: e => {\n              this.onPlanYearValueChange(e.target.value);\n            },\n            placeholder: \"Select School Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastname6\",\n            children: \"Laundry Plan Quarter(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            value: this.state.newplanquarter,\n            options: this.state.planSelectQuarter,\n            onChange: e => {\n              this.onPlanQuarterValueChange(e.target.value);\n            },\n            placeholder: \"Select Quarter(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"Maximum Weight/week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            value: this.state.newmax,\n            options: this.state.planSelectWeight,\n            onChange: e => {\n              this.onMaxweightValueChange(e.target.value);\n            },\n            placeholder: \"Select Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12 p-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"state\",\n            children: \"Residence Hall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            value: this.state.newreshall,\n            options: this.state.planSelectReshall,\n            onChange: e => {\n              this.onReshallValueChange(e.target.value);\n            },\n            placeholder: \"Select Residence Hall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: 'white',\n              backgroundColor: '#6a09a4',\n              borderColor: '#6a09a4',\n              marginTop: 30\n            },\n            label: \"ADD CUSTOMER\",\n            onClick: () => {\n              this.addCustomer();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-col-12\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            ref: el => this.messages = el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/AddCustomers.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","InputTextarea","Messages","Message","firebase","validator","customerData","AddCustomers","constructor","state","customers","orders","selectedCustomer","editing","idcount","newfirstname","newlastname","newid","newplanYear","newplanQuarter","newmax","newreshall","newphone","newemail","planSelectYear","label","value","planSelectQuarter","planSelectWeight","planSelectReshall","edit","bind","save","onPlanYearValueChange","onPlanQuarterValueChange","displayPlanQuarters","resetNewInfo","addCustomer","padId","idNum","digitLength","toString","length","result","setState","customer","allcustomers","newcustomer","newplanyear","newplanquarter","plan","database","ref","id","set","substring","maxweight","reshall","phone","email","count","individual","map","each","onFirstNameValueChange","onLastNameValueChange","onIdValueChange","onMaxweightValueChange","onReshallValueChange","onPhoneValueChange","onEmailValueChange","includes","newoverage","messages","show","severity","summary","detail","db","child","once","then","snapshot","val","console","log","fullname","customerPlan","componentDidMount","customerArray","on","forEach","childSnapshot","push","toJSON","orderArray","render","header","textAlign","laundryStatusDisplay","e","target","color","backgroundColor","borderColor","marginTop","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { Chart } from 'primereact/chart'\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport {InputTextarea} from 'primereact/inputtextarea';\nimport {Messages} from 'primereact/messages';\nimport {Message} from 'primereact/message';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class AddCustomers extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            orders: [],\n            selectedCustomer: null,\n            editing: false,\n            idcount: null,\n            newfirstname: null,\n            newlastname: null,\n            newid: null,\n            newplanYear: null,\n            newplanQuarter: null,\n            newmax: null,\n            newreshall: null,\n            newphone: null,\n            newemail: null,\n            planSelectYear: [\n                {label: '2020-2021', value: '2020-2021'},\n                {label: '2021-2022', value: '2021-2022'},\n                {label: '2022-2023', value: '2022-2023'},\n                {label: '2023-2024', value: '2023-2024'}\n            ],\n            planSelectQuarter: [\n                {label: 'Full Year', value: '-F-W-S'},\n                {label: 'Winter/Spring Quarter', value: '-W-S'},\n                {label: 'Fall Quarter', value: '-F'},\n                {label: 'Winter Quarter', value: '-W'},\n                {label: 'Spring Quarter', value: '-S'},\n            ],\n            planSelectWeight: [\n                {label: '15 lb/week', value: '15'},\n                {label: '20 lb/week', value: '20'},\n                {label: '25 lb/week', value: '25'},\n            ],\n            planSelectReshall:[\n                {label: 'Choose later', value: 'Choose later'},\n                {label: '560 Lincoln', value: '560 Lincoln'},\n                {label: '720 Emerson', value: '720 Emerson'},\n                { label: '1715 Chicago', value: '1715 Chicago'},\n                {label: '1838 Chicago', value: '1838 Chicago'},\n                {label: '1856 Orrington', value: '1856 Orrington'},\n                {label: '2303 Sheridan', value: '2303 Sheridan'},\n                {label: 'Ayers', value: 'Ayers'},\n                {label: 'Allison', value: 'Allison'},\n                {label: 'Bobb', value: 'Bobb'},\n                {label: 'Chapin', value: 'Chapin'},\n                {label: 'East Fairchild', value: 'East Fairchild'},\n                {label: 'Elder', value: 'Elder'},\n                {label: 'West Fairchild', value: 'West Fairchild'},\n                {label: 'Foster-Walker (PLEX)', value: 'Foster-Walker (PLEX)'},\n                {label: 'Goodrich', value: 'Goodrich'},\n                {label: 'Hobart', value: 'Hobart'},\n                {label: 'Jones', value: 'Jones'},\n                {label: 'Kemper', value: 'Kemper'},\n                {label: 'McCulloch', value: 'McCulloch'},\n                {label: 'PARC (North Mid Quads)', value: 'PARC (North Mid Quads)'},\n                {label: 'Rogers House', value: 'Rogers House'},\n                {label: 'Sargent', value: 'Sargent'},\n                {label: 'Shepard Residential College (South Mid Quads)', value: 'Shepard Residential College (South Mid Quads)'},\n                {label: 'Shepard Hall', value: 'Shepard Hall'},\n                {label: 'Slivka', value: 'Slivka'},\n                {label: 'Willard', value: 'Willard'},\n                {label: 'Delta Gamma', value: 'Delta Gamma'},\n                {label: 'Kappa Kappa Gamma', value: 'Kappa Kappa Gamma'},\n                {label: 'Zeta Beta Tau (ZBT)', value: 'Zeta Beta Tau (ZBT)'}\n\n            ],\n\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.onPlanYearValueChange = this.onPlanYearValueChange.bind(this)\n        this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this)\n        //this.getCustomerHistory = this.getCustomerHistory.bind(this)\n        this.displayPlanQuarters = this.displayPlanQuarters.bind(this)\n        this.resetNewInfo = this.resetNewInfo.bind(this)\n        this.addCustomer = this.addCustomer.bind(this)\n        this.padId = this.padId.bind(this)\n    }\n\n\n    padId(idNum) {\n        var digitLength = (idNum.toString()).length;\n        if (digitLength === 1) {\n            var result = '0000'+idNum;\n        }\n        else if (digitLength === 2) {\n            var result = '000'+idNum;\n        }\n        else if (digitLength === 3) {\n            var result = '00'+idNum;\n        }\n        else if (digitLength === 4) {\n            var result = '0'+idNum;\n        }\n        else if (digitLength === 5) {\n            var result = idNum.toString();\n        }\n        return result;\n\n    }\n    edit() {\n        this.setState({ editing: true });\n        //this.resetNewInfo();\n    }\n\n    save(customer) {\n        this.setState({ editing: false });\n        //console.log(this.state.newplan)\n        let allcustomers = [...this.state.customers];\n        let newcustomer = {...this.state.selectedCustomer};\n        if (this.state.newplanyear && this.state.newplanquarter) {\n             newcustomer.plan = this.state.newplanyear+this.state.newplanquarter;\n             //console.log('newplanQuarter: ', this.state.newplanQuarter);\n             //console.log('newplanYear', this.state.newplanYear)\n             firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n        }\n        else if (this.state.newplanyear) {\n            newcustomer.plan = this.state.newplanyear+customer.plan.substring(9);\n            //console.log('newcustomer.plan: ', newcustomer.plan);\n            //console.log('newplanYear', this.state.newplanYear)\n            //console.log('customer quarter: ', customer.plan.substring(9));\n            firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n       }\n       else if (this.state.newplanquarter) {\n            newcustomer.plan = customer.plan.substring(0,9)+this.state.newplanquarter;\n            //console.log('newcustomer.plan: ', newcustomer.plan);\n            //console.log('customer year', customer.plan.substring(0,9))\n            //console.log('newplanQuarter: ', this.state.newplanQuarter);\n            firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n   }\n        if (this.state.newmax) {\n            newcustomer.maxweight = this.state.newmax;\n            firebase.database().ref('/customers/' + customer.id + '/maxweight').set(newcustomer.maxweight);\n       }\n        if (this.state.newreshall) {\n            newcustomer.reshall = this.state.newreshall;\n            firebase.database().ref('/customers/' + customer.id + '/reshall').set(newcustomer.reshall);\n        }\n        if (this.state.newphone) {\n            newcustomer.phone = this.state.newphone;\n            firebase.database().ref('/customers/' + customer.id + '/phone').set(newcustomer.phone);\n        }\n        if (this.state.newemail) {\n            newcustomer.email = this.state.newemail;\n            firebase.database().ref('/customers/' + customer.id + '/email').set(newcustomer.email)\n        }\n        let count = 0;\n        let individual=null;\n        allcustomers.map(each => {\n            if (newcustomer.id == each.id) {\n                individual = {...allcustomers[count]};\n                individual= newcustomer;\n                allcustomers[count] = individual;\n            }\n            count = count+1\n        })\n        this.setState({ customers: allcustomers });\n        this.setState({selectedCustomer: newcustomer});\n        \n    }\n\n    //CUSTOMER INFORMATION EDITING\n    onFirstNameValueChange(value) {\n        //console.log('new first name: ', value)\n        this.setState({newfirstname: value});\n        \n    }\n    onLastNameValueChange(value) {\n        //console.log('new last name: ', value)\n        this.setState({newlastname: value});\n    }\n    onIdValueChange(value) {\n        //console.log('new id name: ', value)\n        this.setState({ newid: value });\n    }\n\n    onPlanYearValueChange(value) {\n        //console.log('newPlanYear: ', value)\n        this.setState({ newplanyear: value });\n    }\n    onPlanQuarterValueChange(value) {\n        //console.log('newPlanQuarter: ', value)\n        this.setState({ newplanquarter: value });\n    }\n    onMaxweightValueChange(value) {\n        this.setState({ newmax: value });\n    }\n    onReshallValueChange(value) {\n        this.setState({ newreshall: value });\n    }\n    onPhoneValueChange(value) {\n        if(value[3] ==='-' && value[7]==='-' && value.length===12) {\n            this.setState({ newphone: value });\n        }\n        //this.setState({ newphone: value });\n    }\n    onEmailValueChange(value) {\n        if (value.includes('@') && value.includes('.')) {\n            this.setState({ newemail: value });\n        }\n    }\n    resetNewInfo() {\n        this.setState({newfirstname: ''});\n        this.setState({newlastname: ''});\n        this.setState({ newid: '' });\n        this.setState({ newplanyear: '' });\n        this.setState({ newplanquarter: ''});\n        this.setState({ newmax: '' });\n        this.setState({ newreshall: '' });\n        this.setState({ newphone: '' });\n        this.setState({ newemail: '' });\n        this.setState({newoverage: ''});\n    }\n\n    addCustomer() {\n        //console.log('new first name: ', this.state.newfirstname);\n        //console.log('new last name: ', this.state.newlastname);\n        // console.log('new plan year: ', this.state.newplanyear);\n        // console.log('new plan quarter: ', this.state.newplanquarter);\n        // console.log('new max weight: ', this.state.newmax);\n        // console.log('new res hall: ', this.state.newreshall);\n        // console.log('new phone: ', this.state.newphone);\n        // console.log('new email: ', this.state.newemail);\n        //this.setState({idcount: this.state.idcount+1});\n        //console.log('updated id Count', this.state.idcount);\n        if(this.state.newfirstname !=='' && this.state.newlastname !== '' && this.state.newemail !=='' && this.state.newphone !== '' && this.state.newreshall!=='' && this.state.newmax!=='' && this.state.newplanyear!==null && this.state.newplanquarter !== null) {\n            \n            var idNum = this.padId(this.state.idcount);\n            // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n            var id = this.state.newid;\n            //console.log('NEW ID: ', id);\n            this.messages.show({severity: 'success', summary: 'Success', detail: 'Customer Added!'});\n            const db = firebase.database().ref()\n            //updating id count in firebase and then updating state variable\n            db.child('/idcount').set(this.state.idcount+1);\n            db.child('/idcount').once('value')\n                .then(snapshot => {\n                    this.setState({idcount: snapshot.val()})\n                    console.log('state var idcount: ', this.state.idcount);\n                    //idNum = snapshot.val();\n                    console.log('id from firebase: ', snapshot.val());\n                });\n\n            const fullname = this.state.newfirstname + ' ' + this.state.newlastname;\n            const email = this.state.newemail\n            const phone = this.state.newphone\n            const reshall = this.state.newreshall\n            const maxweight = this.state.newmax\n            const plan = this.state.newplanyear+this.state.newplanquarter\n            db.child('/customers/'+id).once(\"value\")\n                .then(snapshot => {\n                    if(!snapshot.val()) {\n                        db.child('/customers/'+id+'/activestatus').set(\"active\");\n                        db.child('/customers/'+id+'/bag-condition').set(\"good\");\n                        db.child('/customers/'+id+'/bag-missing').set(\"false\");\n                        db.child('/customers/'+id+'/detergent').set('unscented');\n                        db.child('/customers/'+id+'/email').set(email);\n                        db.child('/customers/'+id+'/fabric_softener').set('No');\n                        db.child('/customers/'+id+'/id').set(id);\n                        db.child('/customers/'+id+'/last_status_updated').set('N/A');\n                        db.child('/customers/'+id+'/last_weight_updated').set('N/A');\n                        db.child('/customers/'+id+'/laundrystatus').set('out-of-service');\n                        db.child('/customers/'+id+'/maxweight').set(maxweight);\n                        db.child('/customers/'+id+'/name').set(fullname);\n                        db.child('/customers/'+id+'/phone').set(phone);\n                        db.child('/customers/'+id+'/plan').set(plan);\n                        db.child('/customers/'+id+'/reshall').set(reshall);\n                        db.child('/customers/'+id+'/weekweight').set(\"N/A\");\n                        db.child('/customers/'+id+'/weightstatus').set(\"N/A\");\n\n                    }\n                })\n\n            this.setState({newfirstname: ''});\n            this.setState({newlastname: ''});\n            this.setState({ newid: '' });\n            this.setState({ newplanyear: ''});\n            this.setState({ newplanquarter: '' });\n            this.setState({ newmax: '' });\n            this.setState({ newreshall: '' });\n            this.setState({ newphone: '' });\n            this.setState({ newemail: '' });\n            //const curr  = await this.resetNewInfo();\n       \n            //console.log('reset info: ', this.state.newfirstname);\n            //document.getElementById(\"form\").reset();\n        }\n        else {\n            this.messages.show({severity: \"error\", summary: \"Missing Fields\", detail: \"Please enter all information\"});\n        }\n\n    }\n\n    displayPlanQuarters(customerPlan) {\n        if (customerPlan) {\n\n            if (customerPlan === 'F') {\n                const result = 'Fall Quarter';\n                return result;\n            }\n            else if (customerPlan === 'W') {\n                const result = 'Winter Quarter' ;\n                return result;\n            }\n            else if (customerPlan === 'S') {\n                const result = 'Spring Quarter' ;\n                return result;\n            }\n            else if (customerPlan === 'W-S') {\n                const result = 'Winter/Spring Quarter' ;\n                return result;\n            }\n            else if (customerPlan === 'F-W-S') {\n                const result = 'Full Year' ;\n                return result;\n            }\n        }\n    }\n\n\n\n    /* --------------- Filters ---------------- */\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/customers').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ customers: customerArray });\n        const orderArray = [];\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                orderArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ orders: orderArray });\n        //var idNum = 0;\n        firebase.database().ref('/idcount').once('value')\n            .then(snapshot => {\n                this.setState({idcount: snapshot.val()})\n                console.log('state var idcount: ', this.state.idcount);\n                //idNum = snapshot.val();\n                console.log('id from firebase: ', snapshot.val());\n            });\n        //console.log('var idNum: ', idNum);\n        //this.setState({idcount: idNum});\n    }\n\n    render() {\n            var header = <div style={{ textAlign: 'left' }}></div>\n            var customer = this.state.selectedCustomer\n            //var history = this.getCustomerHistory(customer)\n            var laundryStatusDisplay = {\n                'picked-up': 'picked up',\n                'delivered-to-SH': 'delivered to SH',\n                'delivered-to-dorm': 'delivered to dorm',\n                'out-of-service': 'out of service',\n                'bag-missing': 'bag missing'\n            }\n\n            return (\n            <div className=\"card\" id=\"form\">\n                <h1>Add New Customer</h1>\n\n\n                <div className=\"p-fluid p-formgrid p-grid\">\n    <div className=\"p-field p-col-12 p-md-4\">\n        <label htmlFor=\"firstname6\">First Name</label>\n        <InputText value={this.state.newfirstname} id=\"firstname\" type=\"text\" onChange={(e) => { this.onFirstNameValueChange(e.target.value); }}/>\n    </div>\n    <div className=\"p-field p-col-12 p-md-4\">\n        <label htmlFor=\"lastname6\">Last Name</label>\n        <InputText value={this.state.newlastname} id=\"lastname\" type=\"text\" onChange={(e) => { this.onLastNameValueChange(e.target.value); }}/>\n    </div>\n    <div className=\"p-field p-col-12 p-md-4\">\n        <label htmlFor=\"firstname6\">ID</label>\n        <InputText value={this.state.newid} id=\"firstname\" type=\"text\" onChange={(e) => { this.onIdValueChange(e.target.value); }} />\n    </div>\n    <div className=\"p-field p-col-12 p-md-6\">\n        <label htmlFor=\"firstname6\">Email</label>\n        <InputText value={this.state.newemail} id=\"newemail\" type=\"text\" onChange={(e) => { this.onEmailValueChange(e.target.value); }}/>\n    </div>\n    <div className=\"p-field p-col-12 p-md-6\">\n        <label htmlFor=\"firstname6\">Phone</label>\n        <InputText value={this.state.newphone} id=\"newphone\" type=\"text\" onChange={(e) => { this.onPhoneValueChange(e.target.value); }}/>\n    </div>\n    <div className=\"p-field p-col-12 p-md-3\">\n        <label htmlFor=\"address\">Laundry Plan Year</label>\n        <Dropdown  value={this.state.newplanyear} options={this.state.planSelectYear} onChange={(e) => {this.onPlanYearValueChange(e.target.value);}} placeholder='Select School Year'/>\n\n    </div>\n    <div className=\"p-field p-col-12 p-md-3\">\n        <label htmlFor=\"lastname6\">Laundry Plan Quarter(s)</label>\n        <Dropdown  value={this.state.newplanquarter} options={this.state.planSelectQuarter} onChange={(e) => {this.onPlanQuarterValueChange(e.target.value);}} placeholder='Select Quarter(s)'/>\n\n    </div>\n    <div className=\"p-field p-col-12 p-md-3\">\n        <label htmlFor=\"city\">Maximum Weight/week</label>\n        <Dropdown  value={this.state.newmax} options={this.state.planSelectWeight} onChange={(e) => {this.onMaxweightValueChange(e.target.value);}} placeholder='Select Weight'/>\n\n    </div>\n    <div className=\"p-field p-col-12 p-md-3\">\n        <label htmlFor=\"state\">Residence Hall</label>\n        <Dropdown  value={this.state.newreshall} options={this.state.planSelectReshall} onChange={(e) => {this.onReshallValueChange(e.target.value);}} placeholder='Select Residence Hall'/>\n    </div>\n    <div className = \"p-field p-col-12\">\n    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} label=\"ADD CUSTOMER\" onClick={() => {this.addCustomer()}} />\n    </div>\n    <div className = \"p-field p-col-12\">\n    <Messages ref={(el) => this.messages = el}></Messages>\n    </div>\n\n\n</div>\n</div>\n            );\n\n\n\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}