{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PanelMenu = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactTransitionGroup = require(\"react-transition-group\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PanelMenuSub = /*#__PURE__*/function (_Component) {\n  _inherits(PanelMenuSub, _Component);\n\n  function PanelMenuSub(props) {\n    var _this;\n\n    _classCallCheck(this, PanelMenuSub);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PanelMenuSub).call(this, props));\n    _this.state = {\n      activeItem: null\n    };\n    return _this;\n  }\n\n  _createClass(PanelMenuSub, [{\n    key: \"onItemClick\",\n    value: function onItemClick(event, item) {\n      if (item.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      if (!item.url) {\n        event.preventDefault();\n      }\n\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n\n      if (this.state.activeItem && this.state.activeItem === item) {\n        this.setState({\n          activeItem: null\n        });\n      } else {\n        this.setState({\n          activeItem: item\n        });\n      }\n    }\n  }, {\n    key: \"renderSeparator\",\n    value: function renderSeparator(index) {\n      return _react.default.createElement(\"li\", {\n        key: 'separator_' + index,\n        className: \"p-menu-separator\"\n      });\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon(item) {\n      var className = (0, _classnames.default)('p-menuitem-icon', item.icon);\n\n      if (item.icon) {\n        return _react.default.createElement(\"span\", {\n          className: className\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderSubmenuIcon\",\n    value: function renderSubmenuIcon(item, active) {\n      var className = (0, _classnames.default)('p-panelmenu-icon pi pi-fw', {\n        'pi-caret-right': !active,\n        'pi-caret-down': active\n      });\n\n      if (item.items) {\n        return _react.default.createElement(\"span\", {\n          className: className\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderSubmenu\",\n    value: function renderSubmenu(item, active) {\n      var submenuWrapperClassName = (0, _classnames.default)('p-toggleable-content', {\n        'p-toggleable-content-collapsed': !active\n      });\n\n      if (item.items) {\n        return _react.default.createElement(_reactTransitionGroup.CSSTransition, {\n          classNames: \"p-toggleable-content\",\n          timeout: {\n            enter: 400,\n            exit: 250\n          },\n          in: active\n        }, _react.default.createElement(\"div\", {\n          className: submenuWrapperClassName\n        }, _react.default.createElement(PanelMenuSub, {\n          model: item.items\n        })));\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderMenuitem\",\n    value: function renderMenuitem(item, index) {\n      var _this2 = this;\n\n      var active = this.state.activeItem === item;\n      var className = (0, _classnames.default)('p-menuitem', item.className, {\n        'p-disabled': item.disabled\n      });\n      var icon = this.renderIcon(item, active);\n      var submenuIcon = this.renderSubmenuIcon(item, active);\n      var submenu = this.renderSubmenu(item, active);\n      return _react.default.createElement(\"li\", {\n        key: item.label + '_' + index,\n        className: className,\n        style: item.style\n      }, _react.default.createElement(\"a\", {\n        href: item.url || '#',\n        className: \"p-menuitem-link\",\n        target: item.target,\n        onClick: function onClick(event) {\n          return _this2.onItemClick(event, item, index);\n        }\n      }, submenuIcon, icon, _react.default.createElement(\"span\", {\n        className: \"p-menuitem-text\"\n      }, item.label)), submenu);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item, index) {\n      if (item.separator) return this.renderSeparator(index);else return this.renderMenuitem(item, index);\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this3 = this;\n\n      if (this.props.model) {\n        return this.props.model.map(function (item, index) {\n          return _this3.renderItem(item, index);\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _classnames.default)('p-submenu-list', this.props.className);\n      var menu = this.renderMenu();\n      return _react.default.createElement(\"ul\", {\n        className: className\n      }, menu);\n    }\n  }]);\n\n  return PanelMenuSub;\n}(_react.Component);\n\n_defineProperty(PanelMenuSub, \"defaultProps\", {\n  model: null\n});\n\n_defineProperty(PanelMenuSub, \"propTypes\", {\n  model: _propTypes.default.any\n});\n\nvar PanelMenu = /*#__PURE__*/function (_Component2) {\n  _inherits(PanelMenu, _Component2);\n\n  function PanelMenu(props) {\n    var _this4;\n\n    _classCallCheck(this, PanelMenu);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(PanelMenu).call(this, props));\n    _this4.state = {\n      activeItem: null\n    };\n    return _this4;\n  }\n\n  _createClass(PanelMenu, [{\n    key: \"onItemClick\",\n    value: function onItemClick(event, item) {\n      if (item.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      if (!item.url) {\n        event.preventDefault();\n      }\n\n      if (item.command) {\n        item.command({\n          originalEvent: event,\n          item: item\n        });\n      }\n\n      if (this.state.activeItem && this.state.activeItem === item) {\n        this.setState({\n          activeItem: null\n        });\n      } else {\n        this.setState({\n          activeItem: item\n        });\n      }\n    }\n  }, {\n    key: \"renderPanelIcon\",\n    value: function renderPanelIcon(item) {\n      var className = (0, _classnames.default)('p-menuitem-icon', item.icon);\n\n      if (item.items) {\n        return _react.default.createElement(\"span\", {\n          className: className\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderPanelToggleIcon\",\n    value: function renderPanelToggleIcon(item, active) {\n      var className = (0, _classnames.default)('p-panelmenu-icon pi pi-fw', {\n        'pi-caret-right': !active,\n        ' pi-caret-down': active\n      });\n\n      if (item.items) {\n        return _react.default.createElement(\"span\", {\n          className: className\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderPanel\",\n    value: function renderPanel(item, index) {\n      var _this5 = this;\n\n      var active = this.state.activeItem === item;\n      var className = (0, _classnames.default)('p-panelmenu-panel', item.className, {\n        'p-disabled': item.disabled\n      });\n      var headerClassName = (0, _classnames.default)('p-component p-panelmenu-header', {\n        'p-highlight': active\n      });\n      var toggleIcon = this.renderPanelToggleIcon(item, active);\n      var itemIcon = this.renderPanelIcon(item);\n      var contentWrapperClassName = (0, _classnames.default)('p-toggleable-content', {\n        'p-toggleable-content-collapsed': !active\n      });\n      return _react.default.createElement(\"div\", {\n        key: item.label + '_' + index,\n        className: className,\n        style: item.style\n      }, _react.default.createElement(\"div\", {\n        className: headerClassName,\n        style: item.style\n      }, _react.default.createElement(\"a\", {\n        href: item.url || '#',\n        className: \"p-panelmenu-header-link ng-tns-c2-1 ng-star-inserted\",\n        onClick: function onClick(e) {\n          return _this5.onItemClick(e, item);\n        }\n      }, toggleIcon, itemIcon, _react.default.createElement(\"span\", {\n        className: \"p-menuitem-text\"\n      }, item.label))), _react.default.createElement(_reactTransitionGroup.CSSTransition, {\n        classNames: \"p-toggleable-content\",\n        timeout: {\n          enter: 400,\n          exit: 250\n        },\n        in: active\n      }, _react.default.createElement(\"div\", {\n        className: contentWrapperClassName\n      }, _react.default.createElement(\"div\", {\n        className: \"p-panelmenu-content\"\n      }, _react.default.createElement(PanelMenuSub, {\n        model: item.items,\n        className: \"p-panelmenu-root-submenu\"\n      })))));\n    }\n  }, {\n    key: \"renderPanels\",\n    value: function renderPanels() {\n      var _this6 = this;\n\n      if (this.props.model) {\n        return this.props.model.map(function (item, index) {\n          return _this6.renderPanel(item, index);\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = (0, _classnames.default)('p-panelmenu p-component', this.props.className);\n      var panels = this.renderPanels();\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style\n      }, panels);\n    }\n  }]);\n\n  return PanelMenu;\n}(_react.Component);\n\nexports.PanelMenu = PanelMenu;\n\n_defineProperty(PanelMenu, \"defaultProps\", {\n  id: null,\n  model: null,\n  style: null,\n  className: null\n});\n\n_defineProperty(PanelMenu, \"propTypes\", {\n  id: _propTypes.default.string,\n  model: _propTypes.default.array,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string\n});","map":null,"metadata":{},"sourceType":"script"}