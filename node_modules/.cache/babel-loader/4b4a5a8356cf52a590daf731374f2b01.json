{"ast":null,"code":"var _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderTracker.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { p } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport class OrderTracker extends Component {\n  constructor() {\n    super();\n\n    this.loadInitialState = async () => {\n      const customerArray = [];\n      firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          if (childSnapshot.val().active.toLowerCase() === 'yes' || childSnapshot.val().active.toLowerCase() === 'true') {\n            customerArray.push(childSnapshot.toJSON());\n          }\n        });\n        console.log(customerArray);\n        console.log(customerArray[0]);\n      });\n      this.setState({\n        bulk_orders: customerArray\n      });\n      this.setState({\n        loading: false\n      });\n      console.log('bulk orders in ordertracking: ', customerArray);\n    };\n\n    this.state = {\n      bulk_orders: [],\n      selectedStatus: null,\n      selectedTeamMember: null,\n      selectedToggle: null,\n      editing: false,\n      loading: true,\n      selectedOrders: null,\n      planYesNo: [{\n        label: 'Yes',\n        value: 'Yes'\n      }, {\n        label: 'No',\n        value: 'No'\n      }]\n    };\n    this.edit = this.edit.bind(this);\n    this.save = this.save.bind(this);\n    this.export = this.export.bind(this);\n    this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n    this.onTeamMemberFilterChange = this.onTeamMemberFilterChange.bind(this);\n    this.bagStatusEditor = this.bagStatusEditor.bind(this);\n    this.displaySelection = this.displaySelection.bind(this);\n    this.loadInitialState = this.loadInitialState.bind(this);\n    this.generalEditor = this.generalEditor.bind(this);\n    this.dropdownEditor = this.dropdownEditor.bind(this);\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n  /* --------------- Editing ---------------- */\n\n\n  edit() {\n    this.setState({\n      editing: true\n    });\n  }\n\n  save() {\n    this.setState({\n      editing: false\n    });\n  }\n\n  async onEditorValueChange(props, value) {\n    console.log('value: ', value, '\\tfield: ', props.field);\n    firebase.database().ref('/bulk_orders/' + props.rowData.order_id + '/' + props.field).set(value);\n    let updatedOrders = this.state.bulk_orders;\n    updatedOrders[props.rowIndex][props.field] = value;\n    const db = firebase.database().ref();\n    var currDay = new Date().getDate();\n    var currMonth = new Date().getMonth() + 1;\n\n    if (currMonth < 10) {\n      currMonth = '0' + currMonth;\n    }\n\n    if (currDay < 10) {\n      currDay = '0' + currDay;\n    }\n\n    var currYear = new Date().getFullYear();\n    var currDate = currYear + '-' + currMonth + '-' + currDay;\n    var currTime = new Date().toLocaleTimeString('it-IT');\n    db.child('/history/' + currDate + props.rowData.order_id).once(\"value\").then(snapshot => {\n      if (!snapshot.val()) {\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id).set(0);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n        db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n      }\n\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/date').set(currDate + ' ' + currTime);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n      db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n    });\n    firebase.database().ref('/history/' + props.rowData.order_id + '/last_quote_updated').set(currDate + ' ' + currTime);\n  }\n\n  inputTextEditor(props, field) {\n    console.log('props.rowData[props.field]: ', props.rowData[props.field]);\n\n    if (field === \"design\" || field === \"tax_exempt\") {\n      return /*#__PURE__*/React.createElement(InputText, {\n        type: \"text\",\n        value: props.rowData[props.field],\n        tooltip: \"Yes or No only\",\n        placeholder: props.rowData[props.field],\n        className: \"p-inputtext-sm p-d-block p-mb-2\",\n        style: {\n          maxWidth: 100\n        },\n        onChange: e => {\n          this.onEditorValueChange(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      placeholder: props.rowData[field],\n      className: \"p-inputtext-sm p-d-block p-mb-2\",\n      style: {\n        maxWidth: 100\n      },\n      onChange: e => {\n        this.onEditorValueChange(props, e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }\n    });\n  }\n\n  dropdownEditor(props, field) {\n    //return <Dropdown value={props.rowData[field]} style={{ width: 20 }} options={this.state.planYesNo} onChange={(e) => { this.onEditorValueChange(props, e.target.value); }} />\n    //return <SelectButton value={this.state.planYesNo[props.rowData[field]]} options={this.state.planYesNo} style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.label); }} />\n    //this.setState({selectedToggle: props.rowData[field]})\n    //return <ToggleButton checked={props.rowData[field]} onChange={(e) => {this.onEditorValueChange(props, e.value); }} onLabel=\"Yes\" offLabel=\"No\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\n    let choice = props.rowData[props.field];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field-radiobutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      inputId: \"choice1\",\n      name: \"yes\",\n      value: choice,\n      onChange: e => {\n        choice = e.value;\n        this.onEditorValueChange(props, e.value);\n      },\n      checked: choice === 'Yes',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Yes\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field-radiobutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RadioButton, {\n      inputId: \"choice2\",\n      name: \"no\",\n      value: choice,\n      onChange: e => {\n        choice = e.value;\n        this.onEditorValueChange(props, e.value);\n      },\n      checked: choice === 'No',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"No\")));\n  }\n\n  generalEditor(props, field) {\n    return this.inputTextEditor(props, field);\n  }\n\n  quoteEditor(props) {\n    return this.generalEditor(props, 'order_quote');\n  }\n\n  totalEditor(props) {\n    return this.generalEditor(props, 'final_total');\n  }\n\n  quantityEditor(props) {\n    return this.generalEditor(props, 'quantity');\n  }\n\n  bagStatusEditor(allorders, currentorder, newstatus) {\n    let updatedOrders = [...allorders];\n    const db = firebase.database().ref();\n    var currDay = new Date().getDate();\n    var currMonth = new Date().getMonth() + 1;\n\n    if (currMonth < 10) {\n      currMonth = '0' + currMonth;\n    }\n\n    if (currDay < 10) {\n      currDay = '0' + currDay;\n    }\n\n    var currYear = new Date().getFullYear();\n    var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n    var currTime = new Date().toLocaleTimeString('it-IT');\n\n    if (currentorder) {\n      var ids = Object.keys(currentorder).map(function (key) {\n        return currentorder[key].order_id;\n      });\n      updatedOrders.map(each => {\n        if (ids.includes(each.order_id)) {\n          each.status = newstatus;\n\n          if (newstatus === 'cancelled') {\n            each.final_total = 'N/A';\n            db.child('/bulk_orders/' + each.order_id + '/active').set('False');\n          }\n\n          if (newstatus === 'fulfilled') {\n            db.child('/bulk_orders/' + each.order_id + '/active').set('False');\n          }\n\n          firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime);\n          db.child('/history/' + currDate + each.order_id).once(\"value\").then(snapshot => {\n            if (!snapshot.val()) {\n              //why is each.id undefined on firebase?\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n            }\n\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n          });\n        }\n      });\n      this.setState({\n        bulk_orders: updatedOrders\n      });\n    }\n\n    console.log('bagStatusEditor currentorder: ', currentorder);\n    this.dothisfirst(currentorder, newstatus);\n  }\n\n  dothisfirst(currentorder, newstatus) {\n    console.log('currentorder: ', currentorder);\n    console.log('newstatus: ', newstatus);\n\n    if (currentorder) {\n      var ids = Object.keys(currentorder).map(function (key) {\n        return currentorder[key].order_id;\n      });\n      console.log('ids: ', ids);\n      var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n      query.once(\"value\").then(function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n          console.log('key: ', key);\n\n          if (ids.includes(key)) {\n            var key = childSnapshot.key;\n            firebase.database().ref('/bulk_orders/' + key + '/' + \"status\").set(newstatus);\n            console.log('currentorder in forEach: ', currentorder);\n          }\n        });\n      });\n    }\n\n    return currentorder;\n  }\n\n  teammemberEditor(allorders, currentorder, newteammember) {\n    let updatedOrders = [...allorders];\n    const db = firebase.database().ref();\n    var currDay = new Date().getDate();\n    var currMonth = new Date().getMonth() + 1;\n\n    if (currMonth < 10) {\n      currMonth = '0' + currMonth;\n    }\n\n    if (currDay < 10) {\n      currDay = '0' + currDay;\n    }\n\n    var currYear = new Date().getFullYear();\n    var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n    var currTime = new Date().toLocaleTimeString('it-IT');\n\n    if (currentorder) {\n      var ids = Object.keys(currentorder).map(function (key) {\n        return currentorder[key].order_id;\n      });\n      updatedOrders.map(each => {\n        if (ids.includes(each.order_id)) {\n          each.team_member = newteammember;\n          firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime);\n          db.child('/history/' + currDate + each.order_id).once(\"value\").then(snapshot => {\n            if (!snapshot.val()) {\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n              db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n            }\n\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n          });\n        }\n      });\n      this.setState({\n        bulk_orders: updatedOrders\n      });\n    }\n\n    console.log('bagStatusEditor currentorder: ', currentorder);\n    this.dothisfirst_teammember(currentorder, newteammember);\n  }\n\n  dothisfirst_teammember(currentorder, newteammember) {\n    console.log('currentorder: ', currentorder);\n    console.log('newteammember: ', newteammember);\n\n    if (currentorder) {\n      var ids = Object.keys(currentorder).map(function (key) {\n        return currentorder[key].order_id;\n      });\n      console.log('ids: ', ids);\n      var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n      query.once(\"value\").then(function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n\n          if (ids.includes(key)) {\n            var key = childSnapshot.key;\n            firebase.database().ref('/bulk_orders/' + key + '/' + \"team_member\").set(newteammember);\n            console.log('currentorder in forEach: ', currentorder);\n          }\n        });\n      });\n    }\n\n    return currentorder;\n  }\n\n  displaySelection(data) {\n    if (this.state.editing && (!data || data.length === 0)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 20\n        }\n      }, \"No Selection\");\n    }\n  }\n  /* --------------- Filters ---------------- */\n  //dropdown for status\n\n\n  statusBodyTemplate(rowData) {\n    var orderStatusDisplay = {\n      'quote': 'quote',\n      'confirmed': 'confirmed',\n      'invoiced': 'invoiced',\n      'in-production': 'in production',\n      'shipped': 'shipped',\n      'fulfilled': 'fulfilled',\n      'cancelled': 'cancelled'\n    };\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: rowData.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 16\n      }\n    }, orderStatusDisplay[rowData.status]);\n  }\n\n  renderStatusFilter() {\n    var statuses = [{\n      label: 'Confirmed',\n      value: 'confirmed'\n    }, {\n      label: 'In Production',\n      value: 'in production'\n    }, {\n      label: 'Invoiced',\n      value: 'invoiced'\n    }, {\n      label: 'Fulfilled',\n      value: 'fulfilled'\n    }, {\n      label: 'Shipped',\n      value: 'Shipped'\n    }, {\n      label: 'Quote',\n      value: 'quote'\n    }];\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.selectedStatus,\n      options: statuses,\n      onChange: this.onStatusFilterChange,\n      showClear: true,\n      placeholder: \"Select a Status\",\n      className: \"p-column-filter\",\n      style: {\n        maxWidth: 200,\n        minWidth: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    });\n  }\n\n  onStatusFilterChange(event) {\n    this.dt.filter(event.value, 'status', 'equals');\n    this.setState({\n      selectedStatus: event.value\n    });\n  } //dropdown for reshall\n\n\n  teammemberBodyTemplate(rowData) {\n    var teammemberDisplay = {\n      'Caden Gaviria': 'Caden Gaviria',\n      'Philippe Manzone': 'Philippe Manzone',\n      'Alec Aragon': 'Alec Aragon',\n      'Shannon Groves': 'Shannon Groves',\n      'Ali Kilic': 'Ali Kilic'\n    };\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: rowData.teammember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 16\n      }\n    }, teammemberDisplay[rowData.teammember]);\n  }\n\n  renderTeamMemberFilter() {\n    var teammembers = [{\n      label: 'Caden Gaviria',\n      value: 'Caden Gaviria'\n    }, {\n      label: 'Philippe Manzone',\n      value: 'Philippe Manzone'\n    }, {\n      label: 'Alec Aragon',\n      value: 'Alec Aragon'\n    }, {\n      label: 'Shannon Groves',\n      value: 'Shannon Groves'\n    }, {\n      label: 'Ali Kilic',\n      value: 'Ali Kilic'\n    }];\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.selectedTeamMember,\n      options: teammembers,\n      onChange: this.onTeamMemberFilterChange,\n      showClear: true,\n      placeholder: \"Select a Team Member\",\n      className: \"p-column-filter\",\n      style: {\n        maxWidth: 200,\n        minWidth: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    });\n  }\n\n  onTeamMemberFilterChange(event) {\n    this.dt.filter(event.value, 'team_member', 'equals');\n    this.setState({\n      selectedTeamMember: event.value\n    });\n  }\n\n  componentWillMount() {\n    this.loadInitialState();\n  }\n\n  render() {\n    const statusFilter = this.renderStatusFilter();\n    const teammemberFilter = this.renderTeamMemberFilter();\n    const allorders = this.state.bulk_orders;\n    const currentorder = this.state.selectedOrders;\n    const allbulkorders = this.state.bulk_orders;\n    const currentorders = this.state.selectedOrders;\n    /* --------------- RETURN ---------------- */\n\n    /* ---------------- edit mode ------------*/\n\n    if (this.state.editing) {\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginRight: 10\n        },\n        icon: \"pi pi-external-link\",\n        iconPos: \"left\",\n        label: \"CSV\",\n        onClick: this.export,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: 'white',\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginRight: 10\n        },\n        icon: \"pi pi-save\",\n        iconPos: \"left\",\n        label: \"SAVE\",\n        onClick: this.save,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }\n      }, \"To edit order status or team member, select the rows you want to edit, and then use the buttons to set fields.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, \"Columns highlighted in purple can be individually edited. Click on the cell you'd like to edit to make changes.\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }\n      }, \"Order Status: \\u2003\", /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#694382',\n          backgroundColor: '#ECCFFF',\n          borderColor: '#23547B',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"Invoiced\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'invoiced');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#23547B',\n          backgroundColor: '#B3E5FC',\n          borderColor: '#694382',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"Quote\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'quote');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#c532a0',\n          backgroundColor: '#f5d4f5',\n          borderColor: '#474549',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"Confirmed\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'confirmed');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#8A5340',\n          backgroundColor: '#FEEDAF',\n          borderColor: '#256029',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"In Production\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'in-production');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#474549',\n          backgroundColor: 'lightgrey',\n          borderColor: '#474549',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"Shipped\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'shipped');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#256029',\n          backgroundColor: '#C8E6C9',\n          borderColor: '#474549',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"Fulfilled\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'fulfilled');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#C63737',\n          backgroundColor: '#FFCDD2',\n          borderColor: '#C63737',\n          marginRight: 10\n        },\n        icon: \"pi pi-check\",\n        iconPos: \"left\",\n        label: \"Cancelled\",\n        onClick: () => {\n          this.bagStatusEditor(allorders, currentorder, 'cancelled');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }\n      }, \"Assigned Team Member: \\u2003\", /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#343335',\n          backgroundColor: 'white',\n          borderColor: '#343335',\n          marginRight: 10\n        },\n        icon: \"pi pi-user\",\n        iconPos: \"left\",\n        label: \"Caden Gaviria\",\n        onClick: () => {\n          this.teammemberEditor(allorders, currentorder, 'Caden Gaviria');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#343335',\n          backgroundColor: 'white',\n          borderColor: '#343335',\n          marginRight: 10\n        },\n        icon: \"pi pi-user\",\n        iconPos: \"left\",\n        label: \"Philippe Manzone\",\n        onClick: () => {\n          this.teammemberEditor(allorders, currentorder, 'Philippe Manzone');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#343335',\n          backgroundColor: 'white',\n          borderColor: '#343335',\n          marginRight: 10\n        },\n        icon: \"pi pi-user\",\n        iconPos: \"left\",\n        label: \"Alec Aragon\",\n        onClick: () => {\n          this.teammemberEditor(allorders, currentorder, 'Alec Aragon');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#343335',\n          backgroundColor: 'white',\n          borderColor: '#343335',\n          marginRight: 10\n        },\n        icon: \"pi pi-user\",\n        iconPos: \"left\",\n        label: \"Shannon Groves\",\n        onClick: () => {\n          this.teammemberEditor(allorders, currentorder, 'Shannon Groves');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#343335',\n          backgroundColor: 'white',\n          borderColor: '#343335',\n          marginRight: 10\n        },\n        icon: \"pi pi-user\",\n        iconPos: \"left\",\n        label: \"Ali Kilic\",\n        onClick: () => {\n          this.teammemberEditor(allorders, currentorder, 'Ali Kilic');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: '#343335',\n          backgroundColor: 'white',\n          borderColor: '#343335',\n          marginRight: 10\n        },\n        icon: \"pi pi-user\",\n        iconPos: \"left\",\n        label: \"Caroline Lobel\",\n        onClick: () => {\n          this.teammemberEditor(allorders, currentorder, 'Caroline Lobel');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 17\n        }\n      })); //loading = {true} loadingIcon = \"pi pi-spinner\"\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"elmid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }\n      }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }\n      }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }\n      }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      }, \"NOTE: This page only displays active orders. Orders marked as \\\"fulfilled\\\" or \\\"cancelled\\\" will not appear here. Please find them on the Order Details page. \"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.bulk_orders,\n        header: header,\n        ref: el => {\n          this.dt = el;\n        },\n        style: {\n          marginBottom: '20px'\n        },\n        responsive: true,\n        autoLayout: true,\n        editMode: \"row\",\n        rowEditorValidator: this.onRowEditorValidator,\n        onRowEditInit: this.onRowEditInit,\n        onRowEditSave: this.onRowEditSave,\n        onRowEditCancel: this.onRowEditCancel,\n        footer: this.displaySelection(this.state.selectedOrders),\n        selection: this.state.selectedOrders,\n        onSelectionChange: e => this.setState({\n          selectedOrders: e.value\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        selectionMode: \"multiple\",\n        style: {\n          width: '3em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"order_id\",\n        header: \"ID\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        style: {\n          maxWidth: 150\n        },\n        sortable: true,\n        filter: true,\n        filterPlaceholder: \"Search by name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"organization\",\n        header: \"Organization\",\n        style: {\n          maxWidth: 150\n        },\n        sortable: true,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"team_member\",\n        header: \"Team Member\",\n        style: {\n          maxWidth: 100\n        },\n        sortable: true,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"status\",\n        header: \"Status\",\n        style: {\n          maxWidth: 120\n        },\n        sortable: true,\n        filter: true,\n        filterElement: statusFilter,\n        body: this.statusBodyTemplate,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"design\",\n        header: \"Design\",\n        style: {\n          backgroundColor: '#6a09a4',\n          color: 'white',\n          maxWidth: 80\n        },\n        sortable: true,\n        editor: this.generalEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"tax_exempt\",\n        header: \"Tax Exempt\",\n        style: {\n          backgroundColor: '#6a09a4',\n          color: 'white',\n          maxWidth: 80\n        },\n        sortable: true,\n        exportable: false,\n        editor: this.generalEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"blank\",\n        header: \"Blank\",\n        style: {\n          maxWidth: 150\n        },\n        sortable: true,\n        style: {\n          backgroundColor: '#6a09a4',\n          color: 'white',\n          maxWidth: 120\n        },\n        exportable: false,\n        editor: this.generalEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        sortable: true,\n        style: {\n          backgroundColor: '#6a09a4',\n          color: 'white',\n          maxWidth: 80\n        },\n        editor: this.generalEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"order_quote\",\n        header: \"Order Quote\",\n        sortable: true,\n        style: {\n          backgroundColor: '#6a09a4',\n          color: 'white',\n          maxWidth: 80\n        },\n        editor: this.generalEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"final_total\",\n        header: \"Final Total\",\n        sortable: true,\n        style: {\n          backgroundColor: '#6a09a4',\n          color: 'white',\n          maxWidth: 80\n        },\n        editor: this.generalEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 29\n        }\n      }))));\n      /* ---------------- NOT edit mode ------------*/\n    } else {\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginRight: 10\n        },\n        icon: \"pi pi-external-link\",\n        iconPos: \"left\",\n        label: \"CSV\",\n        onClick: this.export,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginRight: 10\n        },\n        icon: \"pi pi-pencil\",\n        iconPos: \"left\",\n        label: \"EDIT\",\n        onClick: this.edit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 17\n        }\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"elmid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 25\n        }\n      }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 25\n        }\n      }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }\n      }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }\n      }, \"NOTE: This page only displays active orders. Orders marked as \\\"fulfilled\\\" or \\\"cancelled\\\" will not appear here. Please find them on the Order Details page. \"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.bulk_orders,\n        header: header,\n        ref: el => {\n          this.dt = el;\n        },\n        style: {\n          marginBottom: '20px'\n        },\n        responsive: true,\n        autoLayout: true,\n        editMode: \"row\",\n        rowEditorValidator: this.onRowEditorValidator,\n        onRowEditInit: this.onRowEditInit,\n        onRowEditSave: this.onRowEditSave,\n        onRowEditCancel: this.onRowEditCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"order_id\",\n        header: \"ID\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        style: {\n          maxWidth: 150\n        },\n        sortable: true,\n        filter: true,\n        filterPlaceholder: \"Search by name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"organization\",\n        header: \"Organization\",\n        style: {\n          maxWidth: 150\n        },\n        sortable: true,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"team_member\",\n        header: \"Team Member\",\n        style: {\n          maxWidth: 100\n        },\n        sortable: true,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"status\",\n        header: \" Status \",\n        style: {\n          maxWidth: 120\n        },\n        sortable: true,\n        filter: true,\n        filterElement: statusFilter,\n        body: this.statusBodyTemplate,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"design\",\n        header: \"Design\",\n        style: {\n          maxWidth: 80\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"tax_exempt\",\n        header: \"Tax Exempt\",\n        style: {\n          maxWidth: 80\n        },\n        sortable: true,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"blank\",\n        header: \"Blank\",\n        style: {\n          maxWidth: 120\n        },\n        sortable: true,\n        exportable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"quantity\",\n        header: \"Quantity\",\n        style: {\n          maxWidth: 80\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"order_quote\",\n        header: \"Order Quote\",\n        style: {\n          maxWidth: 80\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"final_total\",\n        header: \"Final Total\",\n        style: {\n          maxWidth: 80\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderTracker.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","SelectButton","ToggleButton","RadioButton","p","firebase","validator","customerData","OrderTracker","constructor","loadInitialState","customerArray","database","ref","on","snapshot","forEach","childSnapshot","val","active","toLowerCase","push","toJSON","console","log","setState","bulk_orders","loading","state","selectedStatus","selectedTeamMember","selectedToggle","editing","selectedOrders","planYesNo","label","value","edit","bind","save","export","onStatusFilterChange","onTeamMemberFilterChange","bagStatusEditor","displaySelection","generalEditor","dropdownEditor","dt","exportCSV","onEditorValueChange","props","field","rowData","order_id","set","updatedOrders","rowIndex","db","currDay","Date","getDate","currMonth","getMonth","currYear","getFullYear","currDate","currTime","toLocaleTimeString","child","once","then","blank","design","team_member","status","final_total","order_quote","quantity","inputTextEditor","maxWidth","e","target","choice","quoteEditor","totalEditor","quantityEditor","allorders","currentorder","newstatus","ids","Object","keys","map","key","each","includes","dothisfirst","query","orderByKey","teammemberEditor","newteammember","dothisfirst_teammember","data","length","textAlign","statusBodyTemplate","orderStatusDisplay","renderStatusFilter","statuses","minWidth","event","filter","teammemberBodyTemplate","teammemberDisplay","teammember","renderTeamMemberFilter","teammembers","componentWillMount","render","statusFilter","teammemberFilter","allbulkorders","currentorders","header","marginBottom","backgroundColor","borderColor","marginRight","color","el","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,CAAT,QAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AAGA,OAAOC,YAAP,MAAyB,mBAAzB,C,CACA;;AAEA,OAAO,kBAAP,C,CACA;;AAGA,OAAO,MAAMC,YAAN,SAA2Bb,SAA3B,CAAqC;AAExCc,EAAAA,WAAW,GAAG;AACV;;AADU,SAwYdC,gBAxYc,GAwYK,YAAY;AAC3B,YAAMC,aAAa,GAAG,EAAtB;AACAN,MAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,cAAxB,EAAwCC,EAAxC,CAA2C,OAA3C,EAAoD,UAAUC,QAAV,EAAoB;AACpEA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtC,cAAIA,aAAa,CAACC,GAAd,GAAoBC,MAApB,CAA2BC,WAA3B,OAA6C,KAA7C,IAAsDH,aAAa,CAACC,GAAd,GAAoBC,MAApB,CAA2BC,WAA3B,OAA6C,MAAvG,EAA+G;AAC3GT,YAAAA,aAAa,CAACU,IAAd,CAAmBJ,aAAa,CAACK,MAAd,EAAnB;AACH;AAEJ,SALD;AAMAC,QAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYb,aAAa,CAAC,CAAD,CAAzB;AACH,OATD;AAUA,WAAKc,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEf;AAAf,OAAd;AACA,WAAKc,QAAL,CAAc;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8Cb,aAA9C;AAEH,KAxZa;;AAEV,SAAKiB,KAAL,GAAa;AACTF,MAAAA,WAAW,EAAE,EADJ;AAETG,MAAAA,cAAc,EAAE,IAFP;AAGTC,MAAAA,kBAAkB,EAAE,IAHX;AAITC,MAAAA,cAAc,EAAE,IAJP;AAKTC,MAAAA,OAAO,EAAE,KALA;AAMTL,MAAAA,OAAO,EAAE,IANA;AAOTM,MAAAA,cAAc,EAAE,IAPP;AAQTC,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAFO;AARF,KAAb;AAaA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BH,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKI,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BJ,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKK,eAAL,GAAuB,KAAKA,eAAL,CAAqBL,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBN,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAK5B,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB4B,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKO,aAAL,GAAqB,KAAKA,aAAL,CAAmBP,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKQ,cAAL,GAAsB,KAAKA,cAAL,CAAoBR,IAApB,CAAyB,IAAzB,CAAtB;AAIH;;AACDE,EAAAA,MAAM,GAAG;AACL,SAAKO,EAAL,CAAQC,SAAR;AACH;AAED;;;AACAX,EAAAA,IAAI,GAAG;AACH,SAAKZ,QAAL,CAAc;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAd;AACH;;AAEDO,EAAAA,IAAI,GAAG;AACH,SAAKd,QAAL,CAAc;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAd;AACH;;AAEwB,QAAnBiB,mBAAmB,CAACC,KAAD,EAAQd,KAAR,EAAe;AACpCb,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBY,KAAvB,EAA8B,WAA9B,EAA2Cc,KAAK,CAACC,KAAjD;AACA9C,IAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBqC,KAAK,CAACE,OAAN,CAAcC,QAAhC,GAA2C,GAA3C,GAAiDH,KAAK,CAACC,KAA/E,EAAsFG,GAAtF,CAA0FlB,KAA1F;AACA,QAAImB,aAAa,GAAG,KAAK3B,KAAL,CAAWF,WAA/B;AACA6B,IAAAA,aAAa,CAACL,KAAK,CAACM,QAAP,CAAb,CAA8BN,KAAK,CAACC,KAApC,IAA6Cf,KAA7C;AACA,UAAMqB,EAAE,GAAGpD,QAAQ,CAACO,QAAT,GAAoBC,GAApB,EAAX;AACA,QAAI6C,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,QAAIC,SAAS,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAAxC;;AACA,QAAID,SAAS,GAAG,EAAhB,EAAoB;AAChBA,MAAAA,SAAS,GAAG,MAAMA,SAAlB;AACH;;AACD,QAAIH,OAAO,GAAG,EAAd,EAAkB;AACdA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,QAAIK,QAAQ,GAAG,IAAIJ,IAAJ,GAAWK,WAAX,EAAf;AACA,QAAIC,QAAQ,GAAGF,QAAQ,GAAG,GAAX,GAAiBF,SAAjB,GAA6B,GAA7B,GAAmCH,OAAlD;AACA,QAAIQ,QAAQ,GAAG,IAAIP,IAAJ,GAAWQ,kBAAX,CAA8B,OAA9B,CAAf;AACAV,IAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyBf,KAAK,CAACE,OAAN,CAAcC,QAAhD,EAA0DgB,IAA1D,CAA+D,OAA/D,EACKC,IADL,CACUvD,QAAQ,IAAI;AACd,UAAI,CAACA,QAAQ,CAACG,GAAT,EAAL,EAAqB;AACjBuC,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAzE,EAAmFC,GAAnF,CAAuF,CAAvF;AACAG,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,QAApF,EAA8FC,GAA9F,CAAkGJ,KAAK,CAACE,OAAN,CAAcmB,KAAhH;AACAd,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,SAApF,EAA+FC,GAA/F,CAAmGJ,KAAK,CAACE,OAAN,CAAcoB,MAAjH;AACAf,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,KAApF,EAA2FC,GAA3F,CAA+FJ,KAAK,CAACE,OAAN,CAAcC,QAA7G;AACAI,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,cAApF,EAAoGC,GAApG,CAAwGJ,KAAK,CAACE,OAAN,CAAcqB,WAAtH;AACAhB,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,SAApF,EAA+FC,GAA/F,CAAmGJ,KAAK,CAACE,OAAN,CAAcsB,MAAjH;AACAjB,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,cAApF,EAAoGC,GAApG,CAAwGJ,KAAK,CAACE,OAAN,CAAcuB,WAAtH;AACAlB,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,cAApF,EAAoGC,GAApG,CAAwGJ,KAAK,CAACE,OAAN,CAAcwB,WAAtH;AACAnB,QAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,WAApF,EAAiGC,GAAjG,CAAqGJ,KAAK,CAACE,OAAN,CAAcyB,QAAnH;AACH;;AACDpB,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,OAApF,EAA6FC,GAA7F,CAAiGW,QAAQ,GAAG,GAAX,GAAiBC,QAAlH;AACAT,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,QAApF,EAA8FC,GAA9F,CAAkGJ,KAAK,CAACE,OAAN,CAAcmB,KAAhH;AACAd,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,SAApF,EAA+FC,GAA/F,CAAmGJ,KAAK,CAACE,OAAN,CAAcoB,MAAjH;AACAf,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,KAApF,EAA2FC,GAA3F,CAA+FJ,KAAK,CAACE,OAAN,CAAcC,QAA7G;AACAI,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,cAApF,EAAoGC,GAApG,CAAwGJ,KAAK,CAACE,OAAN,CAAcqB,WAAtH;AACAhB,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,SAApF,EAA+FC,GAA/F,CAAmGJ,KAAK,CAACE,OAAN,CAAcsB,MAAjH;AACAjB,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,cAApF,EAAoGC,GAApG,CAAwGJ,KAAK,CAACE,OAAN,CAAcuB,WAAtH;AACAlB,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,cAApF,EAAoGC,GAApG,CAAwGJ,KAAK,CAACE,OAAN,CAAcwB,WAAtH;AACAnB,MAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkDhB,KAAK,CAACE,OAAN,CAAcC,QAAhE,GAA2E,WAApF,EAAiGC,GAAjG,CAAqGJ,KAAK,CAACE,OAAN,CAAcyB,QAAnH;AAEH,KAvBL;AAwBAxE,IAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,cAAcqC,KAAK,CAACE,OAAN,CAAcC,QAA5B,GAAuC,qBAA/D,EAAsFC,GAAtF,CAA0FW,QAAQ,GAAG,GAAX,GAAiBC,QAA3G;AAEH;;AAEDY,EAAAA,eAAe,CAAC5B,KAAD,EAAQC,KAAR,EAAe;AAC1B5B,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C0B,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACC,KAApB,CAA5C;;AAEA,QAAIA,KAAK,KAAK,QAAV,IAAsBA,KAAK,KAAK,YAApC,EAAkD;AAC9C,0BAAO,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACC,KAApB,CAA9B;AAA0D,QAAA,OAAO,EAAC,gBAAlE;AAAmF,QAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACC,KAApB,CAAhG;AAA4H,QAAA,SAAS,EAAC,iCAAtI;AAAwK,QAAA,KAAK,EAAE;AAAE4B,UAAAA,QAAQ,EAAE;AAAZ,SAA/K;AAAkM,QAAA,QAAQ,EAAGC,CAAD,IAAO;AAAE,eAAK/B,mBAAL,CAAyBC,KAAzB,EAAgC8B,CAAC,CAACC,MAAF,CAAS7C,KAAzC;AAAkD,SAAvQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH;;AACD,wBAAO,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAEc,KAAK,CAACE,OAAN,CAAcD,KAAd,CAA9B;AAAoD,MAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcD,KAAd,CAAjE;AAAuF,MAAA,SAAS,EAAC,iCAAjG;AAAmI,MAAA,KAAK,EAAE;AAAE4B,QAAAA,QAAQ,EAAE;AAAZ,OAA1I;AAA6J,MAAA,QAAQ,EAAGC,CAAD,IAAO;AAAE,aAAK/B,mBAAL,CAAyBC,KAAzB,EAAgC8B,CAAC,CAACC,MAAF,CAAS7C,KAAzC;AAAkD,OAAlO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEDU,EAAAA,cAAc,CAACI,KAAD,EAAQC,KAAR,EAAe;AACzB;AACA;AACA;AACA;AACA,QAAI+B,MAAM,GAAGhC,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACC,KAApB,CAAb;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,SAArB;AAA+B,MAAA,IAAI,EAAC,KAApC;AAA0C,MAAA,KAAK,EAAE+B,MAAjD;AAAyD,MAAA,QAAQ,EAAGF,CAAD,IAAO;AAAEE,QAAAA,MAAM,GAAGF,CAAC,CAAC5C,KAAX;AAAkB,aAAKa,mBAAL,CAAyBC,KAAzB,EAAgC8B,CAAC,CAAC5C,KAAlC;AAA2C,OAAzI;AAA2I,MAAA,OAAO,EAAE8C,MAAM,KAAK,KAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADG,eAKH;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,SAArB;AAA+B,MAAA,IAAI,EAAC,IAApC;AAAyC,MAAA,KAAK,EAAEA,MAAhD;AAAwD,MAAA,QAAQ,EAAGF,CAAD,IAAO;AAAEE,QAAAA,MAAM,GAAGF,CAAC,CAAC5C,KAAX;AAAkB,aAAKa,mBAAL,CAAyBC,KAAzB,EAAgC8B,CAAC,CAAC5C,KAAlC;AAA2C,OAAxI;AAA0I,MAAA,OAAO,EAAE8C,MAAM,KAAK,IAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CALG,CAAP;AAUH;;AAEDrC,EAAAA,aAAa,CAACK,KAAD,EAAQC,KAAR,EAAe;AACxB,WAAO,KAAK2B,eAAL,CAAqB5B,KAArB,EAA4BC,KAA5B,CAAP;AACH;;AAEDgC,EAAAA,WAAW,CAACjC,KAAD,EAAQ;AACf,WAAO,KAAKL,aAAL,CAAmBK,KAAnB,EAA0B,aAA1B,CAAP;AACH;;AAEDkC,EAAAA,WAAW,CAAClC,KAAD,EAAQ;AACf,WAAO,KAAKL,aAAL,CAAmBK,KAAnB,EAA0B,aAA1B,CAAP;AACH;;AAEDmC,EAAAA,cAAc,CAACnC,KAAD,EAAQ;AAClB,WAAO,KAAKL,aAAL,CAAmBK,KAAnB,EAA0B,UAA1B,CAAP;AACH;;AAGDP,EAAAA,eAAe,CAAC2C,SAAD,EAAYC,YAAZ,EAA0BC,SAA1B,EAAqC;AAChD,QAAIjC,aAAa,GAAG,CAAC,GAAG+B,SAAJ,CAApB;AACA,UAAM7B,EAAE,GAAGpD,QAAQ,CAACO,QAAT,GAAoBC,GAApB,EAAX;AACA,QAAI6C,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,QAAIC,SAAS,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAAxC;;AACA,QAAID,SAAS,GAAG,EAAhB,EAAoB;AAChBA,MAAAA,SAAS,GAAG,MAAMA,SAAlB;AACH;;AACD,QAAIH,OAAO,GAAG,EAAd,EAAkB;AACdA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,QAAIK,QAAQ,GAAG,IAAIJ,IAAJ,GAAWK,WAAX,EAAf;AACA,QAAIC,QAAQ,GAAGF,QAAQ,GAAG,GAAX,GAAiBF,SAAjB,GAA6B,GAA7B,GAAmCH,OAAlD,CAZgD,CAahD;;AACA,QAAIQ,QAAQ,GAAG,IAAIP,IAAJ,GAAWQ,kBAAX,CAA8B,OAA9B,CAAf;;AAEA,QAAIoB,YAAJ,EAAkB;AACd,UAAIE,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,GAA1B,CAA8B,UAAUC,GAAV,EAAe;AACnD,eAAON,YAAY,CAACM,GAAD,CAAZ,CAAkBxC,QAAzB;AACH,OAFS,CAAV;AAGAE,MAAAA,aAAa,CAACqC,GAAd,CAAkBE,IAAI,IAAI;AACtB,YAAIL,GAAG,CAACM,QAAJ,CAAaD,IAAI,CAACzC,QAAlB,CAAJ,EAAiC;AAC7ByC,UAAAA,IAAI,CAACpB,MAAL,GAAcc,SAAd;;AACA,cAAIA,SAAS,KAAK,WAAlB,EAA+B;AAC3BM,YAAAA,IAAI,CAACnB,WAAL,GAAmB,KAAnB;AACAlB,YAAAA,EAAE,CAACW,KAAH,CAAS,kBAAkB0B,IAAI,CAACzC,QAAvB,GAAkC,SAA3C,EAAsDC,GAAtD,CAA0D,OAA1D;AACH;;AACD,cAAIkC,SAAS,KAAK,WAAlB,EAA+B;AAC3B/B,YAAAA,EAAE,CAACW,KAAH,CAAS,kBAAkB0B,IAAI,CAACzC,QAAvB,GAAkC,SAA3C,EAAsDC,GAAtD,CAA0D,OAA1D;AACH;;AACDjD,UAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBiF,IAAI,CAACzC,QAAvB,GAAkC,sBAA1D,EAAkFC,GAAlF,CAAsFW,QAAQ,GAAG,GAAX,GAAiBC,QAAvG;AAEAT,UAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB6B,IAAI,CAACzC,QAAvC,EAAiDgB,IAAjD,CAAsD,OAAtD,EACKC,IADL,CACUvD,QAAQ,IAAI;AACd,gBAAI,CAACA,QAAQ,CAACG,GAAT,EAAL,EAAqB;AAAE;AACnBuC,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAhE,EAA0EC,GAA1E,CAA8E,CAA9E;AACAG,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,QAA3E,EAAqFC,GAArF,CAAyFwC,IAAI,CAACvB,KAA9F;AACAd,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACtB,MAA/F;AACAf,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,KAA3E,EAAkFC,GAAlF,CAAsFwC,IAAI,CAACzC,QAA3F;AACAI,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACrB,WAApG;AACAhB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACpB,MAA/F;AACAjB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACnB,WAApG;AACAlB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAAClB,WAApG;AACAnB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,WAA3E,EAAwFC,GAAxF,CAA4FwC,IAAI,CAACjB,QAAjG;AACH;;AACDpB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,OAA3E,EAAoFC,GAApF,CAAwFW,QAAQ,GAAG,GAAX,GAAiBC,QAAzG;AACAT,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACtB,MAA/F;AACAf,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,KAA3E,EAAkFC,GAAlF,CAAsFwC,IAAI,CAACzC,QAA3F;AACAI,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACrB,WAApG;AACAhB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACpB,MAA/F;AACAjB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACnB,WAApG;AACAlB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAAClB,WAApG;AACAnB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,WAA3E,EAAwFC,GAAxF,CAA4FwC,IAAI,CAACjB,QAAjG;AAEH,WAtBL;AAwBH;AACJ,OArCD;AAsCA,WAAKpD,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE6B;AAAf,OAAd;AACH;;AACDhC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C+D,YAA9C;AACA,SAAKS,WAAL,CAAiBT,YAAjB,EAA+BC,SAA/B;AAEH;;AAGDQ,EAAAA,WAAW,CAACT,YAAD,EAAeC,SAAf,EAA0B;AACjCjE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B+D,YAA9B;AACAhE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgE,SAA3B;;AACA,QAAID,YAAJ,EAAkB;AACd,UAAIE,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,GAA1B,CAA8B,UAAUC,GAAV,EAAe;AACnD,eAAON,YAAY,CAACM,GAAD,CAAZ,CAAkBxC,QAAzB;AACH,OAFS,CAAV;AAGA9B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiE,GAArB;AACA,UAAIQ,KAAK,GAAG5F,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,aAAxB,EAAuCqF,UAAvC,EAAZ;AACAD,MAAAA,KAAK,CAAC5B,IAAN,CAAW,OAAX,EACKC,IADL,CACU,UAAUvD,QAAV,EAAoB;AACtBA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtC,cAAI4E,GAAG,GAAG5E,aAAa,CAAC4E,GAAxB;AACAtE,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqE,GAArB;;AACA,cAAIJ,GAAG,CAACM,QAAJ,CAAaF,GAAb,CAAJ,EAAuB;AACnB,gBAAIA,GAAG,GAAG5E,aAAa,CAAC4E,GAAxB;AACAxF,YAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBgF,GAAlB,GAAwB,GAAxB,GAA8B,QAAtD,EAAgEvC,GAAhE,CAAoEkC,SAApE;AACAjE,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC+D,YAAzC;AAEH;AACJ,SATD;AAUH,OAZL;AAaH;;AACD,WAAOA,YAAP;AACH;;AAEDY,EAAAA,gBAAgB,CAACb,SAAD,EAAYC,YAAZ,EAA0Ba,aAA1B,EAAyC;AACrD,QAAI7C,aAAa,GAAG,CAAC,GAAG+B,SAAJ,CAApB;AACA,UAAM7B,EAAE,GAAGpD,QAAQ,CAACO,QAAT,GAAoBC,GAApB,EAAX;AACA,QAAI6C,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACA,QAAIC,SAAS,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAAxC;;AACA,QAAID,SAAS,GAAG,EAAhB,EAAoB;AAChBA,MAAAA,SAAS,GAAG,MAAMA,SAAlB;AACH;;AACD,QAAIH,OAAO,GAAG,EAAd,EAAkB;AACdA,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AACH;;AACD,QAAIK,QAAQ,GAAG,IAAIJ,IAAJ,GAAWK,WAAX,EAAf;AACA,QAAIC,QAAQ,GAAGF,QAAQ,GAAG,GAAX,GAAiBF,SAAjB,GAA6B,GAA7B,GAAmCH,OAAlD,CAZqD,CAarD;;AACA,QAAIQ,QAAQ,GAAG,IAAIP,IAAJ,GAAWQ,kBAAX,CAA8B,OAA9B,CAAf;;AAEA,QAAIoB,YAAJ,EAAkB;AACd,UAAIE,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,GAA1B,CAA8B,UAAUC,GAAV,EAAe;AACnD,eAAON,YAAY,CAACM,GAAD,CAAZ,CAAkBxC,QAAzB;AACH,OAFS,CAAV;AAGAE,MAAAA,aAAa,CAACqC,GAAd,CAAkBE,IAAI,IAAI;AACtB,YAAIL,GAAG,CAACM,QAAJ,CAAaD,IAAI,CAACzC,QAAlB,CAAJ,EAAiC;AAC7ByC,UAAAA,IAAI,CAACrB,WAAL,GAAmB2B,aAAnB;AACA/F,UAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBiF,IAAI,CAACzC,QAAvB,GAAkC,sBAA1D,EAAkFC,GAAlF,CAAsFW,QAAQ,GAAG,GAAX,GAAiBC,QAAvG;AAEAT,UAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB6B,IAAI,CAACzC,QAAvC,EAAiDgB,IAAjD,CAAsD,OAAtD,EACKC,IADL,CACUvD,QAAQ,IAAI;AACd,gBAAI,CAACA,QAAQ,CAACG,GAAT,EAAL,EAAqB;AACjBuC,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAhE,EAA0EC,GAA1E,CAA8E,CAA9E;AACAG,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,QAA3E,EAAqFC,GAArF,CAAyFwC,IAAI,CAACvB,KAA9F;AACAd,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACtB,MAA/F;AACAf,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,KAA3E,EAAkFC,GAAlF,CAAsFwC,IAAI,CAACzC,QAA3F;AACAI,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACrB,WAApG;AACAhB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACpB,MAA/F;AACAjB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACnB,WAApG;AACAlB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAAClB,WAApG;AACAnB,cAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,WAA3E,EAAwFC,GAAxF,CAA4FwC,IAAI,CAACjB,QAAjG;AACH;;AACDpB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,OAA3E,EAAoFC,GAApF,CAAwFW,QAAQ,GAAG,GAAX,GAAiBC,QAAzG;AACAT,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACtB,MAA/F;AACAf,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,KAA3E,EAAkFC,GAAlF,CAAsFwC,IAAI,CAACzC,QAA3F;AACAI,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACrB,WAApG;AACAhB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,SAA3E,EAAsFC,GAAtF,CAA0FwC,IAAI,CAACpB,MAA/F;AACAjB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAACnB,WAApG;AACAlB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,cAA3E,EAA2FC,GAA3F,CAA+FwC,IAAI,CAAClB,WAApG;AACAnB,YAAAA,EAAE,CAACW,KAAH,CAAS,cAAcH,QAAd,GAAyB,GAAzB,GAA+BC,QAA/B,GAA0C,KAA1C,GAAkD4B,IAAI,CAACzC,QAAvD,GAAkE,WAA3E,EAAwFC,GAAxF,CAA4FwC,IAAI,CAACjB,QAAjG;AAEH,WAtBL;AAwBH;AACJ,OA9BD;AA+BA,WAAKpD,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE6B;AAAf,OAAd;AACH;;AACDhC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C+D,YAA9C;AACA,SAAKc,sBAAL,CAA4Bd,YAA5B,EAA0Ca,aAA1C;AAEH;;AAGDC,EAAAA,sBAAsB,CAACd,YAAD,EAAea,aAAf,EAA8B;AAChD7E,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B+D,YAA9B;AACAhE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B4E,aAA/B;;AACA,QAAIb,YAAJ,EAAkB;AACd,UAAIE,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,GAA1B,CAA8B,UAAUC,GAAV,EAAe;AACnD,eAAON,YAAY,CAACM,GAAD,CAAZ,CAAkBxC,QAAzB;AACH,OAFS,CAAV;AAGA9B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiE,GAArB;AACA,UAAIQ,KAAK,GAAG5F,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,aAAxB,EAAuCqF,UAAvC,EAAZ;AACAD,MAAAA,KAAK,CAAC5B,IAAN,CAAW,OAAX,EACKC,IADL,CACU,UAAUvD,QAAV,EAAoB;AACtBA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtC,cAAI4E,GAAG,GAAG5E,aAAa,CAAC4E,GAAxB;;AACA,cAAIJ,GAAG,CAACM,QAAJ,CAAaF,GAAb,CAAJ,EAAuB;AACnB,gBAAIA,GAAG,GAAG5E,aAAa,CAAC4E,GAAxB;AACAxF,YAAAA,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBgF,GAAlB,GAAwB,GAAxB,GAA8B,aAAtD,EAAqEvC,GAArE,CAAyE8C,aAAzE;AACA7E,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC+D,YAAzC;AAEH;AACJ,SARD;AASH,OAXL;AAYH;;AACD,WAAOA,YAAP;AACH;;AAID3C,EAAAA,gBAAgB,CAAC0D,IAAD,EAAO;AACnB,QAAI,KAAK1E,KAAL,CAAWI,OAAX,KAAuB,CAACsE,IAAD,IAASA,IAAI,CAACC,MAAL,KAAgB,CAAhD,CAAJ,EAAwD;AACpD,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;AACJ;AAGD;AAEA;;;AACAC,EAAAA,kBAAkB,CAACrD,OAAD,EAAU;AACxB,QAAIsD,kBAAkB,GAAG;AACrB,eAAS,OADY;AAErB,mBAAa,WAFQ;AAGrB,kBAAY,UAHS;AAIrB,uBAAiB,eAJI;AAKrB,iBAAW,SALU;AAMrB,mBAAa,WANQ;AAOrB,mBAAa;AAPQ,KAAzB;AASA,wBAAO;AAAM,MAAA,SAAS,EAAEtD,OAAO,CAACsB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCgC,kBAAkB,CAACtD,OAAO,CAACsB,MAAT,CAApD,CAAP;AACH;;AAEDiC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,QAAQ,GAAG,CACX;AAAEzE,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADW,EAEX;AAAED,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAFW,EAGX;AAAED,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAHW,EAIX;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAJW,EAKX;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KALW,EAMX;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KANW,CAAf;AASA,wBAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,cAA5B;AAA4C,MAAA,OAAO,EAAE+E,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKnE,oBAA9E;AACI,MAAA,SAAS,EAAE,IADf;AACqB,MAAA,WAAW,EAAC,iBADjC;AACmD,MAAA,SAAS,EAAC,iBAD7D;AAC+E,MAAA,KAAK,EAAE;AAAEsC,QAAAA,QAAQ,EAAE,GAAZ;AAAiB8B,QAAAA,QAAQ,EAAE;AAA3B,OADtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAKH;;AAGDpE,EAAAA,oBAAoB,CAACqE,KAAD,EAAQ;AACxB,SAAK/D,EAAL,CAAQgE,MAAR,CAAeD,KAAK,CAAC1E,KAArB,EAA4B,QAA5B,EAAsC,QAAtC;AACA,SAAKX,QAAL,CAAc;AAAEI,MAAAA,cAAc,EAAEiF,KAAK,CAAC1E;AAAxB,KAAd;AACH,GApWuC,CAuWxC;;;AAEA4E,EAAAA,sBAAsB,CAAC5D,OAAD,EAAU;AAC5B,QAAI6D,iBAAiB,GAAG;AACpB,uBAAiB,eADG;AAEpB,0BAAoB,kBAFA;AAGpB,qBAAe,aAHK;AAIpB,wBAAkB,gBAJE;AAKpB,mBAAa;AALO,KAAxB;AAOA,wBAAO;AAAM,MAAA,SAAS,EAAE7D,OAAO,CAAC8D,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,iBAAiB,CAAC7D,OAAO,CAAC8D,UAAT,CAAvD,CAAP;AACH;;AAEDC,EAAAA,sBAAsB,GAAG;AACrB,QAAIC,WAAW,GAAG,CACd;AAAEjF,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KADc,EAEd;AAAED,MAAAA,KAAK,EAAE,kBAAT;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAFc,EAGd;AAAED,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAHc,EAId;AAAED,MAAAA,KAAK,EAAE,gBAAT;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KAJc,EAKd;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KALc,CAAlB;AAQA,wBAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,kBAA5B;AAAgD,MAAA,OAAO,EAAEsF,WAAzD;AAAsE,MAAA,QAAQ,EAAE,KAAK1E,wBAArF;AACI,MAAA,SAAS,EAAE,IADf;AACqB,MAAA,WAAW,EAAC,sBADjC;AACwD,MAAA,SAAS,EAAC,iBADlE;AACoF,MAAA,KAAK,EAAE;AAAEqC,QAAAA,QAAQ,EAAE,GAAZ;AAAiB8B,QAAAA,QAAQ,EAAE;AAA3B,OAD3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAKH;;AAGDnE,EAAAA,wBAAwB,CAACoE,KAAD,EAAQ;AAC5B,SAAK/D,EAAL,CAAQgE,MAAR,CAAeD,KAAK,CAAC1E,KAArB,EAA4B,aAA5B,EAA2C,QAA3C;AACA,SAAKX,QAAL,CAAc;AAAEK,MAAAA,kBAAkB,EAAEgF,KAAK,CAAC1E;AAA5B,KAAd;AACH;;AAoBDiF,EAAAA,kBAAkB,GAAG;AACjB,SAAK3G,gBAAL;AACH;;AAED4G,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,KAAKZ,kBAAL,EAArB;AACA,UAAMa,gBAAgB,GAAG,KAAKL,sBAAL,EAAzB;AACA,UAAM7B,SAAS,GAAG,KAAK1D,KAAL,CAAWF,WAA7B;AACA,UAAM6D,YAAY,GAAG,KAAK3D,KAAL,CAAWK,cAAhC;AACA,UAAMwF,aAAa,GAAG,KAAK7F,KAAL,CAAWF,WAAjC;AACA,UAAMgG,aAAa,GAAG,KAAK9F,KAAL,CAAWK,cAAjC;AAEA;;AACA;;AACA,QAAI,KAAKL,KAAL,CAAWI,OAAf,EAAwB;AACpB,UAAI2F,MAAM,gBAAG;AAAK,QAAA,KAAK,EAAE;AAAEnB,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACT;AAAK,QAAA,KAAK,EAAE;AAAEoB,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,WAAW,EAAE,SAA3C;AAAsDC,UAAAA,WAAW,EAAE;AAAnE,SAA7B;AAAsG,QAAA,IAAI,EAAC,qBAA3G;AAAiI,QAAA,OAAO,EAAC,MAAzI;AAAgJ,QAAA,KAAK,EAAC,KAAtJ;AAA4J,QAAA,OAAO,EAAE,KAAKvF,MAA1K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEwF,UAAAA,KAAK,EAAE,OAAT;AAAkBH,UAAAA,eAAe,EAAE,SAAnC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,MAA7J;AAAoK,QAAA,OAAO,EAAE,KAAKxF,IAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADS,eAOT;AAAK,QAAA,KAAK,EAAE;AAAEqF,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0HADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAFJ,CAPS,eAWT;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,SAArC;AAAgDC,UAAAA,WAAW,EAAE,SAA7D;AAAwEC,UAAAA,WAAW,EAAE;AAArF,SAA7B;AAAwH,QAAA,IAAI,EAAC,aAA7H;AAA2I,QAAA,OAAO,EAAC,MAAnJ;AAA0J,QAAA,KAAK,EAAC,UAAhK;AAA2K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,UAA9C;AAA2D,SAAvP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,SAArC;AAAgDC,UAAAA,WAAW,EAAE,SAA7D;AAAwEC,UAAAA,WAAW,EAAE;AAArF,SAA7B;AAAwH,QAAA,IAAI,EAAC,aAA7H;AAA2I,QAAA,OAAO,EAAC,MAAnJ;AAA0J,QAAA,KAAK,EAAC,OAAhK;AAAwK,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,OAA9C;AAAwD,SAAjP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,SAArC;AAAgDC,UAAAA,WAAW,EAAE,SAA7D;AAAwEC,UAAAA,WAAW,EAAE;AAArF,SAA7B;AAAwH,QAAA,IAAI,EAAC,aAA7H;AAA2I,QAAA,OAAO,EAAC,MAAnJ;AAA0J,QAAA,KAAK,EAAC,WAAhK;AAA4K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,WAA9C;AAA4D,SAAzP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,SAArC;AAAgDC,UAAAA,WAAW,EAAE,SAA7D;AAAwEC,UAAAA,WAAW,EAAE;AAArF,SAA7B;AAAwH,QAAA,IAAI,EAAC,aAA7H;AAA2I,QAAA,OAAO,EAAC,MAAnJ;AAA0J,QAAA,KAAK,EAAC,eAAhK;AAAgL,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,eAA9C;AAAgE,SAAjQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,eASI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,WAArC;AAAkDC,UAAAA,WAAW,EAAE,SAA/D;AAA0EC,UAAAA,WAAW,EAAE;AAAvF,SAA7B;AAA0H,QAAA,IAAI,EAAC,aAA/H;AAA6I,QAAA,OAAO,EAAC,MAArJ;AAA4J,QAAA,KAAK,EAAC,SAAlK;AAA4K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,SAA9C;AAA0D,SAAvP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,eAWI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,SAArC;AAAgDC,UAAAA,WAAW,EAAE,SAA7D;AAAwEC,UAAAA,WAAW,EAAE;AAArF,SAA7B;AAAwH,QAAA,IAAI,EAAC,aAA7H;AAA2I,QAAA,OAAO,EAAC,MAAnJ;AAA0J,QAAA,KAAK,EAAC,WAAhK;AAA4K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,WAA9C;AAA4D,SAAzP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,eAaI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,SAArC;AAAgDC,UAAAA,WAAW,EAAE,SAA7D;AAAwEC,UAAAA,WAAW,EAAE;AAArF,SAA7B;AAAwH,QAAA,IAAI,EAAC,aAA7H;AAA2I,QAAA,OAAO,EAAC,MAAnJ;AAA0J,QAAA,KAAK,EAAC,WAAhK;AAA4K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpF,eAAL,CAAqB2C,SAArB,EAAgCC,YAAhC,EAA8C,WAA9C;AAA4D,SAAzP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,CADJ,CAXS,eAgCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,OAArC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,eAA7J;AAA6K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5B,gBAAL,CAAsBb,SAAtB,EAAiCC,YAAjC,EAA+C,eAA/C;AAAiE,SAA/P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,OAArC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,kBAA7J;AAAgL,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5B,gBAAL,CAAsBb,SAAtB,EAAiCC,YAAjC,EAA+C,kBAA/C;AAAoE,SAArQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,OAArC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,aAA7J;AAA2K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5B,gBAAL,CAAsBb,SAAtB,EAAiCC,YAAjC,EAA+C,aAA/C;AAA+D,SAA3P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,OAArC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,gBAA7J;AAA8K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5B,gBAAL,CAAsBb,SAAtB,EAAiCC,YAAjC,EAA+C,gBAA/C;AAAkE,SAAjQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,eASI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,OAArC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,WAA7J;AAAyK,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5B,gBAAL,CAAsBb,SAAtB,EAAiCC,YAAjC,EAA+C,WAA/C;AAA6D,SAAvP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,eAWI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEyC,UAAAA,KAAK,EAAE,SAAT;AAAoBH,UAAAA,eAAe,EAAE,OAArC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,WAAW,EAAE;AAAnF,SAA7B;AAAsH,QAAA,IAAI,EAAC,YAA3H;AAAwI,QAAA,OAAO,EAAC,MAAhJ;AAAuJ,QAAA,KAAK,EAAC,gBAA7J;AAA8K,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5B,gBAAL,CAAsBb,SAAtB,EAAiCC,YAAjC,EAA+C,gBAA/C;AAAkE,SAAjQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CADJ,CAhCS,eAiDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDS,CAAb,CADoB,CAsDpB;;AACA,0BACI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2KAJJ,eAKI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWF,WAA7B;AAA0C,QAAA,MAAM,EAAEiG,MAAlD;AAA0D,QAAA,GAAG,EAAGM,EAAD,IAAQ;AAAE,eAAKlF,EAAL,GAAUkF,EAAV;AAAe,SAAxF;AAA0F,QAAA,KAAK,EAAE;AAAEL,UAAAA,YAAY,EAAE;AAAhB,SAAjG;AAA2H,QAAA,UAAU,EAAE,IAAvI;AAA6I,QAAA,UAAU,EAAE,IAAzJ;AACI,QAAA,QAAQ,EAAC,KADb;AACmB,QAAA,kBAAkB,EAAE,KAAKM,oBAD5C;AACkE,QAAA,aAAa,EAAE,KAAKC,aADtF;AACqG,QAAA,aAAa,EAAE,KAAKC,aADzH;AACwI,QAAA,eAAe,EAAE,KAAKC,eAD9J;AAEI,QAAA,MAAM,EAAE,KAAKzF,gBAAL,CAAsB,KAAKhB,KAAL,CAAWK,cAAjC,CAFZ;AAE8D,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK,cAFpF;AAEoG,QAAA,iBAAiB,EAAE+C,CAAC,IAAI,KAAKvD,QAAL,CAAc;AAAEQ,UAAAA,cAAc,EAAE+C,CAAC,CAAC5C;AAApB,SAAd,CAF5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAC,UAAtB;AAAiC,QAAA,KAAK,EAAE;AAAEkG,UAAAA,KAAK,EAAE;AAAT,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,MAAM,EAAC,IAAhC;AAAqC,QAAA,QAAQ,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAEvD,UAAAA,QAAQ,EAAE;AAAZ,SAA1C;AAA6D,QAAA,QAAQ,MAArE;AAAsE,QAAA,MAAM,MAA5E;AAA6E,QAAA,iBAAiB,EAAC,gBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAMI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,MAAM,EAAC,cAApC;AAAmD,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAA1D;AAA6E,QAAA,QAAQ,EAAE,IAAvF;AAA6F,QAAA,UAAU,EAAE,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,MAAM,EAAC,aAAnC;AAAiD,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAxD;AAA2E,QAAA,QAAQ,EAAE,IAArF;AAA2F,QAAA,UAAU,EAAE,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,eAQI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAA9C;AAAiE,QAAA,QAAQ,EAAE,IAA3E;AAAiF,QAAA,MAAM,MAAvF;AAAwF,QAAA,aAAa,EAAEwC,YAAvG;AAAqH,QAAA,IAAI,EAAE,KAAKd,kBAAhI;AAAoJ,QAAA,UAAU,EAAE,KAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,eASI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAE;AAAEoB,UAAAA,eAAe,EAAE,SAAnB;AAA8BG,UAAAA,KAAK,EAAE,OAArC;AAA8CjD,UAAAA,QAAQ,EAAE;AAAxD,SAA9C;AAA4G,QAAA,QAAQ,EAAE,IAAtH;AAA4H,QAAA,MAAM,EAAE,KAAKlC,aAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,eAUI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,MAAM,EAAC,YAAlC;AAA+C,QAAA,KAAK,EAAE;AAAEgF,UAAAA,eAAe,EAAE,SAAnB;AAA8BG,UAAAA,KAAK,EAAE,OAArC;AAA8CjD,UAAAA,QAAQ,EAAE;AAAxD,SAAtD;AAAoH,QAAA,QAAQ,EAAE,IAA9H;AAAoI,QAAA,UAAU,EAAE,KAAhJ;AAAuJ,QAAA,MAAM,EAAE,KAAKlC,aAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,eAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,MAAM,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAE;AAAEkC,UAAAA,QAAQ,EAAE;AAAZ,SAA5C;AAA+D,QAAA,QAAQ,EAAE,IAAzE;AAA+E,QAAA,KAAK,EAAE;AAAE8C,UAAAA,eAAe,EAAE,SAAnB;AAA8BG,UAAAA,KAAK,EAAE,OAArC;AAA8CjD,UAAAA,QAAQ,EAAE;AAAxD,SAAtF;AAAqJ,QAAA,UAAU,EAAE,KAAjK;AAAwK,QAAA,MAAM,EAAE,KAAKlC,aAArL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,eAYI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,MAAM,EAAC,UAAhC;AAA2C,QAAA,QAAQ,EAAE,IAArD;AAA2D,QAAA,KAAK,EAAE;AAAEgF,UAAAA,eAAe,EAAE,SAAnB;AAA8BG,UAAAA,KAAK,EAAE,OAArC;AAA8CjD,UAAAA,QAAQ,EAAE;AAAxD,SAAlE;AAAgI,QAAA,MAAM,EAAE,KAAKlC,aAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,eAaI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,MAAM,EAAC,aAAnC;AAAiD,QAAA,QAAQ,EAAE,IAA3D;AAAiE,QAAA,KAAK,EAAE;AAAEgF,UAAAA,eAAe,EAAE,SAAnB;AAA8BG,UAAAA,KAAK,EAAE,OAArC;AAA8CjD,UAAAA,QAAQ,EAAE;AAAxD,SAAxE;AAAsI,QAAA,MAAM,EAAE,KAAKlC,aAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,eAcI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,MAAM,EAAC,aAAnC;AAAiD,QAAA,QAAQ,EAAE,IAA3D;AAAiE,QAAA,KAAK,EAAE;AAAEgF,UAAAA,eAAe,EAAE,SAAnB;AAA8BG,UAAAA,KAAK,EAAE,OAArC;AAA8CjD,UAAAA,QAAQ,EAAE;AAAxD,SAAxE;AAAsI,QAAA,MAAM,EAAE,KAAKlC,aAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CALJ,CADJ,CADJ;AA0BA;AACH,KAlFD,MAkFO;AACH,UAAI8E,MAAM,gBAAG;AAAK,QAAA,KAAK,EAAE;AAAEnB,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACT,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEqB,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,WAAW,EAAE,SAA3C;AAAsDC,UAAAA,WAAW,EAAE;AAAnE,SAA7B;AAAsG,QAAA,IAAI,EAAC,qBAA3G;AAAiI,QAAA,OAAO,EAAC,MAAzI;AAAgJ,QAAA,KAAK,EAAC,KAAtJ;AAA4J,QAAA,OAAO,EAAE,KAAKvF,MAA1K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADS,eAGT,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEqF,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,WAAW,EAAE,SAA3C;AAAsDC,UAAAA,WAAW,EAAE;AAAnE,SAA7B;AAAsG,QAAA,IAAI,EAAC,cAA3G;AAA0H,QAAA,OAAO,EAAC,MAAlI;AAAyI,QAAA,KAAK,EAAC,MAA/I;AAAsJ,QAAA,OAAO,EAAE,KAAK1F,IAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHS,CAAb;AAMA,0BAEI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2KAJJ,eAKI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWF,WAA7B;AAA0C,QAAA,MAAM,EAAEiG,MAAlD;AAA0D,QAAA,GAAG,EAAGM,EAAD,IAAQ;AAAE,eAAKlF,EAAL,GAAUkF,EAAV;AAAe,SAAxF;AAA0F,QAAA,KAAK,EAAE;AAAEL,UAAAA,YAAY,EAAE;AAAhB,SAAjG;AAA2H,QAAA,UAAU,EAAE,IAAvI;AAA6I,QAAA,UAAU,EAAE,IAAzJ;AAA+J,QAAA,QAAQ,EAAC,KAAxK;AAA8K,QAAA,kBAAkB,EAAE,KAAKM,oBAAvM;AAA6N,QAAA,aAAa,EAAE,KAAKC,aAAjP;AAAgQ,QAAA,aAAa,EAAE,KAAKC,aAApR;AAAmS,QAAA,eAAe,EAAE,KAAKC,eAAzT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,MAAM,EAAC,IAAhC;AAAqC,QAAA,QAAQ,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAE;AAAEtD,UAAAA,QAAQ,EAAE;AAAZ,SAA1C;AAA6D,QAAA,QAAQ,MAArE;AAAsE,QAAA,MAAM,MAA5E;AAA6E,QAAA,iBAAiB,EAAC,gBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,MAAM,EAAC,cAApC;AAAmD,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAA1D;AAA6E,QAAA,QAAQ,EAAE,IAAvF;AAA6F,QAAA,UAAU,EAAE,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,MAAM,EAAC,aAAnC;AAAiD,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAxD;AAA2E,QAAA,QAAQ,EAAE,IAArF;AAA2F,QAAA,UAAU,EAAE,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,UAA9B;AAAyC,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAhD;AAAmE,QAAA,QAAQ,EAAE,IAA7E;AAAmF,QAAA,MAAM,MAAzF;AAA0F,QAAA,aAAa,EAAEwC,YAAzG;AAAuH,QAAA,IAAI,EAAE,KAAKd,kBAAlI;AAAsJ,QAAA,UAAU,EAAE,KAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAMI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAE;AAAE1B,UAAAA,QAAQ,EAAE;AAAZ,SAA9C;AAAgE,QAAA,QAAQ,EAAE,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,YAAd;AAA2B,QAAA,MAAM,EAAC,YAAlC;AAA+C,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAtD;AAAwE,QAAA,QAAQ,EAAE,IAAlF;AAAwF,QAAA,UAAU,EAAE,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,eAQI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,MAAM,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAA5C;AAA+D,QAAA,QAAQ,EAAE,IAAzE;AAA+E,QAAA,UAAU,EAAE,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,eASI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,MAAM,EAAC,UAAhC;AAA2C,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAlD;AAAoE,QAAA,QAAQ,EAAE,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,eAUI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,MAAM,EAAC,aAAnC;AAAiD,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAxD;AAA0E,QAAA,QAAQ,EAAE,IAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,eAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,aAAd;AAA4B,QAAA,MAAM,EAAC,aAAnC;AAAiD,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAxD;AAA0E,QAAA,QAAQ,EAAE,IAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CALJ,CADJ,CAFJ;AA0BH;AAEJ;;AA/hBuC","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\nimport { SelectButton } from 'primereact/selectbutton';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { p } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class OrderTracker extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            bulk_orders: [],\n            selectedStatus: null,\n            selectedTeamMember: null,\n            selectedToggle: null,\n            editing: false,\n            loading: true,\n            selectedOrders: null,\n            planYesNo: [\n                { label: 'Yes', value: 'Yes' },\n                { label: 'No', value: 'No' }\n            ]\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n        this.onTeamMemberFilterChange = this.onTeamMemberFilterChange.bind(this);\n        this.bagStatusEditor = this.bagStatusEditor.bind(this)\n        this.displaySelection = this.displaySelection.bind(this)\n        this.loadInitialState = this.loadInitialState.bind(this)\n        this.generalEditor = this.generalEditor.bind(this);\n        this.dropdownEditor = this.dropdownEditor.bind(this);\n\n\n\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n    /* --------------- Editing ---------------- */\n    edit() {\n        this.setState({ editing: true });\n    }\n\n    save() {\n        this.setState({ editing: false });\n    }\n\n    async onEditorValueChange(props, value) {\n        console.log('value: ', value, '\\tfield: ', props.field);\n        firebase.database().ref('/bulk_orders/' + props.rowData.order_id + '/' + props.field).set(value)\n        let updatedOrders = this.state.bulk_orders;\n        updatedOrders[props.rowIndex][props.field] = value;\n        const db = firebase.database().ref();\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() + 1;\n        if (currMonth < 10) {\n            currMonth = '0' + currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-' + currDay;\n        var currTime = new Date().toLocaleTimeString('it-IT');\n        db.child('/history/' + currDate + props.rowData.order_id).once(\"value\")\n            .then(snapshot => {\n                if (!snapshot.val()) {\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id).set(0)\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n                    db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n                }\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/date').set(currDate + ' ' + currTime);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/blank').set(props.rowData.blank);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/design').set(props.rowData.design);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/id').set(props.rowData.order_id);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/team_member').set(props.rowData.team_member);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/status').set(props.rowData.status);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/final_total').set(props.rowData.final_total);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/order_quote').set(props.rowData.order_quote);\n                db.child('/history/' + currDate + ' ' + currTime + ' - ' + props.rowData.order_id + '/quantity').set(props.rowData.quantity);\n\n            })\n        firebase.database().ref('/history/' + props.rowData.order_id + '/last_quote_updated').set(currDate + ' ' + currTime)\n\n    }\n\n    inputTextEditor(props, field) {\n        console.log('props.rowData[props.field]: ', props.rowData[props.field]);\n\n        if (field === \"design\" || field === \"tax_exempt\") {\n            return <InputText type=\"text\" value={props.rowData[props.field]} tooltip=\"Yes or No only\" placeholder={props.rowData[props.field]} className=\"p-inputtext-sm p-d-block p-mb-2\" style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.target.value); }} />\n\n        }\n        return <InputText type=\"text\" value={props.rowData[field]} placeholder={props.rowData[field]} className=\"p-inputtext-sm p-d-block p-mb-2\" style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.target.value); }} />\n    }\n\n    dropdownEditor(props, field) {\n        //return <Dropdown value={props.rowData[field]} style={{ width: 20 }} options={this.state.planYesNo} onChange={(e) => { this.onEditorValueChange(props, e.target.value); }} />\n        //return <SelectButton value={this.state.planYesNo[props.rowData[field]]} options={this.state.planYesNo} style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.label); }} />\n        //this.setState({selectedToggle: props.rowData[field]})\n        //return <ToggleButton checked={props.rowData[field]} onChange={(e) => {this.onEditorValueChange(props, e.value); }} onLabel=\"Yes\" offLabel=\"No\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\n        let choice = props.rowData[props.field];\n        return <div className=\"card\">\n            <div className=\"p-field-radiobutton\">\n                <RadioButton inputId=\"choice1\" name=\"yes\" value={choice} onChange={(e) => { choice = e.value; this.onEditorValueChange(props, e.value); }} checked={choice === 'Yes'} />\n                <label >Yes</label>\n            </div>\n            <div className=\"p-field-radiobutton\">\n                <RadioButton inputId=\"choice2\" name=\"no\" value={choice} onChange={(e) => { choice = e.value; this.onEditorValueChange(props, e.value); }} checked={choice === 'No'} />\n                <label >No</label>\n            </div>\n        </div>\n    }\n\n    generalEditor(props, field) {\n        return this.inputTextEditor(props, field);\n    }\n\n    quoteEditor(props) {\n        return this.generalEditor(props, 'order_quote');\n    }\n\n    totalEditor(props) {\n        return this.generalEditor(props, 'final_total');\n    }\n\n    quantityEditor(props) {\n        return this.generalEditor(props, 'quantity');\n    }\n\n\n    bagStatusEditor(allorders, currentorder, newstatus) {\n        let updatedOrders = [...allorders];\n        const db = firebase.database().ref()\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() + 1;\n        if (currMonth < 10) {\n            currMonth = '0' + currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-' + currDay;\n        //var currDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            updatedOrders.map(each => {\n                if (ids.includes(each.order_id)) {\n                    each.status = newstatus;\n                    if (newstatus === 'cancelled') {\n                        each.final_total = 'N/A'\n                        db.child('/bulk_orders/' + each.order_id + '/active').set('False');\n                    }\n                    if (newstatus === 'fulfilled') {\n                        db.child('/bulk_orders/' + each.order_id + '/active').set('False');\n                    }\n                    firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime)\n\n                    db.child('/history/' + currDate + each.order_id).once(\"value\")\n                        .then(snapshot => {\n                            if (!snapshot.val()) { //why is each.id undefined on firebase?\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0)\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n                            }\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n\n                        })\n\n                }\n            })\n            this.setState({ bulk_orders: updatedOrders });\n        }\n        console.log('bagStatusEditor currentorder: ', currentorder);\n        this.dothisfirst(currentorder, newstatus)\n\n    }\n\n\n    dothisfirst(currentorder, newstatus) {\n        console.log('currentorder: ', currentorder);\n        console.log('newstatus: ', newstatus);\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            console.log('ids: ', ids);\n            var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n            query.once(\"value\")\n                .then(function (snapshot) {\n                    snapshot.forEach(function (childSnapshot) {\n                        var key = childSnapshot.key;\n                        console.log('key: ', key);\n                        if (ids.includes(key)) {\n                            var key = childSnapshot.key;\n                            firebase.database().ref('/bulk_orders/' + key + '/' + \"status\").set(newstatus);\n                            console.log('currentorder in forEach: ', currentorder);\n\n                        }\n                    });\n                });\n        }\n        return currentorder\n    }\n\n    teammemberEditor(allorders, currentorder, newteammember) {\n        let updatedOrders = [...allorders];\n        const db = firebase.database().ref()\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() + 1;\n        if (currMonth < 10) {\n            currMonth = '0' + currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-' + currDay;\n        //var currDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            updatedOrders.map(each => {\n                if (ids.includes(each.order_id)) {\n                    each.team_member = newteammember;\n                    firebase.database().ref('/bulk_orders/' + each.order_id + '/last_status_updated').set(currDate + ' ' + currTime)\n\n                    db.child('/history/' + currDate + each.order_id).once(\"value\")\n                        .then(snapshot => {\n                            if (!snapshot.val()) {\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id).set(0)\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/blank').set(each.blank);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                                db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n                            }\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/date').set(currDate + ' ' + currTime);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/design').set(each.design);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/id').set(each.order_id);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/team_member').set(each.team_member);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/status').set(each.status);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/final_total').set(each.final_total);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/order_quote').set(each.order_quote);\n                            db.child('/history/' + currDate + ' ' + currTime + ' - ' + each.order_id + '/quantity').set(each.quantity);\n\n                        })\n\n                }\n            })\n            this.setState({ bulk_orders: updatedOrders });\n        }\n        console.log('bagStatusEditor currentorder: ', currentorder);\n        this.dothisfirst_teammember(currentorder, newteammember)\n\n    }\n\n\n    dothisfirst_teammember(currentorder, newteammember) {\n        console.log('currentorder: ', currentorder);\n        console.log('newteammember: ', newteammember);\n        if (currentorder) {\n            var ids = Object.keys(currentorder).map(function (key) {\n                return currentorder[key].order_id;\n            });\n            console.log('ids: ', ids);\n            var query = firebase.database().ref(\"bulk_orders\").orderByKey();\n            query.once(\"value\")\n                .then(function (snapshot) {\n                    snapshot.forEach(function (childSnapshot) {\n                        var key = childSnapshot.key;\n                        if (ids.includes(key)) {\n                            var key = childSnapshot.key;\n                            firebase.database().ref('/bulk_orders/' + key + '/' + \"team_member\").set(newteammember);\n                            console.log('currentorder in forEach: ', currentorder);\n\n                        }\n                    });\n                });\n        }\n        return currentorder\n    }\n\n\n\n    displaySelection(data) {\n        if (this.state.editing && (!data || data.length === 0)) {\n            return <div style={{ textAlign: 'left' }}>No Selection</div>;\n        }\n    }\n\n\n    /* --------------- Filters ---------------- */\n\n    //dropdown for status\n    statusBodyTemplate(rowData) {\n        var orderStatusDisplay = {\n            'quote': 'quote',\n            'confirmed': 'confirmed',\n            'invoiced': 'invoiced',\n            'in-production': 'in production',\n            'shipped': 'shipped',\n            'fulfilled': 'fulfilled',\n            'cancelled': 'cancelled'\n        }\n        return <span className={rowData.status}>{orderStatusDisplay[rowData.status]}</span>;\n    }\n\n    renderStatusFilter() {\n        var statuses = [\n            { label: 'Confirmed', value: 'confirmed' },\n            { label: 'In Production', value: 'in production' },\n            { label: 'Invoiced', value: 'invoiced' },\n            { label: 'Fulfilled', value: 'fulfilled' },\n            { label: 'Shipped', value: 'Shipped' },\n            { label: 'Quote', value: 'quote' }\n        ];\n\n        return (\n\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n                showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }} />\n        );\n    }\n\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'status', 'equals');\n        this.setState({ selectedStatus: event.value });\n    }\n\n\n    //dropdown for reshall\n\n    teammemberBodyTemplate(rowData) {\n        var teammemberDisplay = {\n            'Caden Gaviria': 'Caden Gaviria',\n            'Philippe Manzone': 'Philippe Manzone',\n            'Alec Aragon': 'Alec Aragon',\n            'Shannon Groves': 'Shannon Groves',\n            'Ali Kilic': 'Ali Kilic'\n        }\n        return <span className={rowData.teammember}>{teammemberDisplay[rowData.teammember]}</span>\n    }\n\n    renderTeamMemberFilter() {\n        var teammembers = [\n            { label: 'Caden Gaviria', value: 'Caden Gaviria' },\n            { label: 'Philippe Manzone', value: 'Philippe Manzone' },\n            { label: 'Alec Aragon', value: 'Alec Aragon' },\n            { label: 'Shannon Groves', value: 'Shannon Groves' },\n            { label: 'Ali Kilic', value: 'Ali Kilic' }\n        ];\n\n        return (\n\n            <Dropdown value={this.state.selectedTeamMember} options={teammembers} onChange={this.onTeamMemberFilterChange}\n                showClear={true} placeholder=\"Select a Team Member\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }} />\n        );\n    }\n\n\n    onTeamMemberFilterChange(event) {\n        this.dt.filter(event.value, 'team_member', 'equals');\n        this.setState({ selectedTeamMember: event.value });\n    }\n\n    loadInitialState = async () => {\n        const customerArray = [];\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                if (childSnapshot.val().active.toLowerCase() === 'yes' || childSnapshot.val().active.toLowerCase() === 'true') {\n                    customerArray.push(childSnapshot.toJSON());\n                }\n\n            });\n            console.log(customerArray)\n            console.log(customerArray[0])\n        });\n        this.setState({ bulk_orders: customerArray });\n        this.setState({ loading: false });\n        console.log('bulk orders in ordertracking: ', customerArray);\n\n    }\n\n    componentWillMount() {\n        this.loadInitialState()\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n        const teammemberFilter = this.renderTeamMemberFilter();\n        const allorders = this.state.bulk_orders;\n        const currentorder = this.state.selectedOrders;\n        const allbulkorders = this.state.bulk_orders;\n        const currentorders = this.state.selectedOrders;\n\n        /* --------------- RETURN ---------------- */\n        /* ---------------- edit mode ------------*/\n        if (this.state.editing) {\n            var header = <div style={{ textAlign: 'left' }}>\n                <div style={{ marginBottom: 10 }}>\n                    <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-save\" iconPos=\"left\" label=\"SAVE\" onClick={this.save}>\n                    </Button>\n                </div>\n                <div style={{ marginBottom: 10 }}>\n                    <p>To edit order status or team member, select the rows you want to edit, and then use the buttons to set fields.</p>\n                    <p>Columns highlighted in purple can be individually edited. Click on the cell you'd like to edit to make changes.</p>\n                </div>\n                <div style={{ marginBottom: 10 }}>\n                    <p>Order Status: &emsp;\n                        <Button type=\"button\" style={{ color: '#694382', backgroundColor: '#ECCFFF', borderColor: '#23547B', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Invoiced\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'invoiced') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#23547B', backgroundColor: '#B3E5FC', borderColor: '#694382', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Quote\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'quote') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#c532a0', backgroundColor: '#f5d4f5', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Confirmed\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'confirmed') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#8A5340', backgroundColor: '#FEEDAF', borderColor: '#256029', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"In Production\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'in-production') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Shipped\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'shipped') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#256029', backgroundColor: '#C8E6C9', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Fulfilled\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'fulfilled') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#C63737', backgroundColor: '#FFCDD2', borderColor: '#C63737', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"Cancelled\" onClick={() => { this.bagStatusEditor(allorders, currentorder, 'cancelled') }}>\n                        </Button>\n                    </p>\n\n\n\n                </div>\n                <div>\n                    <p>Assigned Team Member: &emsp;\n                        <Button type=\"button\" style={{ color: '#343335', backgroundColor: 'white', borderColor: '#343335', marginRight: 10 }} icon=\"pi pi-user\" iconPos=\"left\" label=\"Caden Gaviria\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Caden Gaviria') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#343335', backgroundColor: 'white', borderColor: '#343335', marginRight: 10 }} icon=\"pi pi-user\" iconPos=\"left\" label=\"Philippe Manzone\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Philippe Manzone') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#343335', backgroundColor: 'white', borderColor: '#343335', marginRight: 10 }} icon=\"pi pi-user\" iconPos=\"left\" label=\"Alec Aragon\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Alec Aragon') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#343335', backgroundColor: 'white', borderColor: '#343335', marginRight: 10 }} icon=\"pi pi-user\" iconPos=\"left\" label=\"Shannon Groves\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Shannon Groves') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#343335', backgroundColor: 'white', borderColor: '#343335', marginRight: 10 }} icon=\"pi pi-user\" iconPos=\"left\" label=\"Ali Kilic\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Ali Kilic') }}>\n                        </Button>\n                        <Button type=\"button\" style={{ color: '#343335', backgroundColor: 'white', borderColor: '#343335', marginRight: 10 }} icon=\"pi pi-user\" iconPos=\"left\" label=\"Caroline Lobel\" onClick={() => { this.teammemberEditor(allorders, currentorder, 'Caroline Lobel') }}>\n                        </Button>\n                    </p>\n\n                </div>\n                <div>\n\n                </div>\n            </div>;\n            //loading = {true} loadingIcon = \"pi pi-spinner\"\n            return (\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Ink Tank Bulk Order Tracker</h1>\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <p>NOTE: This page only displays active orders. Orders marked as \"fulfilled\" or \"cancelled\" will not appear here. Please find them on the Order Details page. </p>\n                        <DataTable value={this.state.bulk_orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true}\n                            editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}\n                            footer={this.displaySelection(this.state.selectedOrders)} selection={this.state.selectedOrders} onSelectionChange={e => this.setState({ selectedOrders: e.value })}>\n                            <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                            <Column field=\"order_id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} exportable={false} />\n                            <Column field=\"team_member\" header=\"Team Member\" style={{ maxWidth: 100 }} sortable={true} exportable={false} />\n                            <Column field=\"status\" header=\"Status\" style={{ maxWidth: 120 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate} exportable={false} />\n                            <Column field=\"design\" header=\"Design\" style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 80 }} sortable={true} editor={this.generalEditor} />\n                            <Column field=\"tax_exempt\" header=\"Tax Exempt\" style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 80 }} sortable={true} exportable={false} editor={this.generalEditor} />\n                            <Column field=\"blank\" header=\"Blank\" style={{ maxWidth: 150 }} sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 120 }} exportable={false} editor={this.generalEditor} />\n                            <Column field=\"quantity\" header=\"Quantity\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 80 }} editor={this.generalEditor} />\n                            <Column field=\"order_quote\" header=\"Order Quote\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 80 }} editor={this.generalEditor} />\n                            <Column field=\"final_total\" header=\"Final Total\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 80 }} editor={this.generalEditor} />\n                        </DataTable>\n                    </div>\n                </div>\n            );\n            /* ---------------- NOT edit mode ------------*/\n        } else {\n            var header = <div style={{ textAlign: 'left' }}>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                </Button>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-pencil\" iconPos=\"left\" label=\"EDIT\" onClick={this.edit}>\n                </Button>\n            </div>;\n            return (\n\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Ink Tank Bulk Order Tracker</h1>\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <p>NOTE: This page only displays active orders. Orders marked as \"fulfilled\" or \"cancelled\" will not appear here. Please find them on the Order Details page. </p>\n                        <DataTable value={this.state.bulk_orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                            <Column field=\"order_id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"organization\" header=\"Organization\" style={{ maxWidth: 150 }} sortable={true} exportable={false} />\n                            <Column field=\"team_member\" header=\"Team Member\" style={{ maxWidth: 100 }} sortable={true} exportable={false} />\n                            <Column field=\"status\" header=\" Status \" style={{ maxWidth: 120 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate} exportable={false} />\n                            <Column field=\"design\" header=\"Design\" style={{ maxWidth: 80 }} sortable={true} />\n                            <Column field=\"tax_exempt\" header=\"Tax Exempt\" style={{ maxWidth: 80 }} sortable={true} exportable={false} />\n                            <Column field=\"blank\" header=\"Blank\" style={{ maxWidth: 120 }} sortable={true} exportable={false} />\n                            <Column field=\"quantity\" header=\"Quantity\" style={{ maxWidth: 80 }} sortable={true} />\n                            <Column field=\"order_quote\" header=\"Order Quote\" style={{ maxWidth: 80 }} sortable={true} />\n                            <Column field=\"final_total\" header=\"Final Total\" style={{ maxWidth: 80 }} sortable={true} />\n\n                        </DataTable>\n                    </div>\n                </div>\n            );\n\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}