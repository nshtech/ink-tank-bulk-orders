{"ast":null,"code":"var _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/BagTracker.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class BagTracker extends Component {\n  constructor() {\n    super();\n\n    this.loadInitialState = async () => {\n      const customerArray = [];\n      firebase.database().ref('/customers').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          if (childSnapshot.val().activestatus === 'active') {\n            customerArray.push(childSnapshot.toJSON());\n          }\n        });\n      });\n      this.setState({\n        customers: customerArray\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      customers: [],\n      selectedStatus: null,\n      selectedReshall: null,\n      editing: false,\n      loading: true,\n      selectedCustomers: null\n    };\n    this.edit = this.edit.bind(this);\n    this.save = this.save.bind(this);\n    this.export = this.export.bind(this);\n    this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n    this.onReshallFilterChange = this.onReshallFilterChange.bind(this);\n    this.bagStatusEditor = this.bagStatusEditor.bind(this);\n    this.displaySelection = this.displaySelection.bind(this);\n    this.loadInitialState = this.loadInitialState.bind(this);\n    this.generalEditor = this.generalEditor.bind(this);\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n  /* --------------- Editing ---------------- */\n\n\n  edit() {\n    this.setState({\n      editing: true\n    });\n  }\n\n  save() {\n    this.setState({\n      editing: false\n    });\n  }\n\n  updateWeightStatus(props, value, currDate) {\n    console.log(this.state.customers[props.rowIndex]); // console.log(props.rowIndex)\n    //if (value > props.rowData.maxweight) {\n    //if (value > firebase.database().ref('/customers/'+props.rowData.id+'/maxweight')) {\n\n    console.log('value: ', value);\n    console.log('maxweight comparison: ', parseInt(this.state.customers[props.rowIndex].maxweight));\n\n    if (parseFloat(value) > parseFloat(this.state.customers[props.rowIndex].maxweight)) {\n      let over = parseFloat(value) - parseFloat(this.state.customers[props.rowIndex].maxweight);\n      console.log('marking as overweight.');\n      firebase.database().ref('/customers/' + props.rowData.id + '/' + 'weightstatus').set('overweight');\n      /*let temp = firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages')\n      temp.once('value', (snapshot) => {\n          let total = snapshot.val()+over\n          firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages').set(total)\n      })*/\n\n      let updatedCustomers = this.state.customers;\n      updatedCustomers[props.rowIndex][props.field] = value;\n      updatedCustomers[props.rowIndex]['weightstatus'] = 'overweight'; //updatedCustomers[props.rowIndex]['quarter-overages'] += parseFloat(value);\n      // this.setState({ customers: updatedCustomers });\n\n      return value;\n    } else {\n      console.log('marking as underweight');\n      firebase.database().ref('/customers/' + props.rowData.id + '/' + 'weightstatus').set('underweight');\n      let updatedCustomers = this.state.customers;\n      updatedCustomers[props.rowIndex][props.field] = value;\n      updatedCustomers[props.rowIndex]['weightstatus'] = 'underweight'; // this.setState({ customers: updatedCustomers });\n\n      return value;\n    }\n  }\n\n  async onEditorValueChange(props, value) {\n    firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value);\n    const db = firebase.database().ref();\n    var currWeight = value;\n    var currDay = new Date().getDate();\n    var currMonth = new Date().getMonth() + 1;\n\n    if (currMonth < 10) {\n      currMonth = '0' + currMonth;\n    }\n\n    if (currDay < 10) {\n      currDay = '0' + currDay;\n    }\n\n    var currYear = new Date().getFullYear();\n    var currDate = currYear + '-' + currMonth + '-' + currDay;\n    var fullDate = new Date().toDateString();\n    var currTime = new Date().toLocaleTimeString('it-IT');\n    db.child('/orders/' + currDate + props.rowData.id).once(\"value\").then(snapshot => {\n      if (!snapshot.val()) {\n        db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id).set(0);\n        db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weight').set(currWeight);\n        db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n        db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/id').set(props.rowData.id);\n        db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n        db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n      }\n\n      db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/date').set(currDate + ' ' + currTime);\n      db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weight').set(currWeight);\n      db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n      db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/id').set(props.rowData.id);\n      db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n      db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n    });\n    firebase.database().ref('/customers/' + props.rowData.id + '/last_weight_updated').set(currDate + ' ' + currTime);\n    const curr = await this.updateWeightStatus(props, value, currDate);\n  }\n\n  inputTextEditor(props, field) {\n    return /*#__PURE__*/_jsxDEV(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      style: {\n        maxWidth: 100\n      },\n      onChange: e => {\n        this.onEditorValueChange(props, e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 16\n    }, this);\n  }\n\n  generalEditor(props) {\n    return this.inputTextEditor(props, ' ');\n  } // onRowEditInit(event) {\n  //     this.clonedCars[event.data.vin] = { ...event.data };\n  // }\n  // onRowEditSave(event) {\n  //     if (this.onRowEditorValidator(event.data)) {\n  //         delete this.clonedCars[event.data.vin];\n  //         this.growl.show({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\n  //     }\n  //     else {\n  //         this.growl.show({ severity: 'error', summary: 'Error', detail: 'Brand is required' });\n  //     }\n  // }\n  // onRowEditCancel(event) {\n  //     let cars = [...this.state.cars2];\n  //     cars[event.index] = this.clonedCars[event.data.vin];\n  //     delete this.clonedCars[event.data.vin];\n  //     this.setState({\n  //         cars2: cars\n  //     })\n  // }\n\n\n  bagStatusEditor(allcustomers, currentcustomers, newstatus) {\n    let updatedCustomers = [...allcustomers];\n    const db = firebase.database().ref();\n    var currDay = new Date().getDate();\n    var currMonth = new Date().getMonth() + 1;\n\n    if (currMonth < 10) {\n      currMonth = '0' + currMonth;\n    }\n\n    if (currDay < 10) {\n      currDay = '0' + currDay;\n    }\n\n    var currYear = new Date().getFullYear();\n    var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n    var currTime = new Date().toLocaleTimeString('it-IT');\n\n    if (currentcustomers) {\n      var ids = Object.keys(currentcustomers).map(function (key) {\n        return currentcustomers[key].id;\n      });\n      updatedCustomers.map(each => {\n        if (ids.includes(each.id)) {\n          each.laundrystatus = newstatus;\n\n          if (newstatus == 'out-of-service') {\n            each.weightstatus = 'N/A';\n            each.weekweight = 'N/A';\n            db.child('/customers/' + each.id + '/weekweight').set('N/A');\n            db.child('/customers/' + each.id + '/weightstatus').set('N/A');\n          }\n\n          firebase.database().ref('/customers/' + each.id + '/last_status_updated').set(currDate + ' ' + currTime);\n          db.child('/orders/' + currDate + each.id).once(\"value\").then(snapshot => {\n            if (!snapshot.val()) {\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id).set(0);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weight').set(each.weekweight);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/maxweight').set(each.maxweight);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/id').set(each.id);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/laundrystatus').set(each.laundrystatus);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weightstatus').set(each.weightstatus);\n            }\n\n            db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/date').set(currDate + ' ' + currTime);\n            db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weight').set(each.weekweight);\n            db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/maxweight').set(each.maxweight);\n            db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/id').set(each.id);\n            db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/laundrystatus').set(each.laundrystatus);\n            db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weightstatus').set(each.weightstatus);\n          });\n        }\n      });\n      this.setState({\n        customers: updatedCustomers\n      });\n    }\n\n    console.log('bagStatusEditor currentcustomers: ', currentcustomers);\n    this.dothisfirst(currentcustomers, newstatus);\n  }\n\n  dothisfirst(currentcustomers, newstatus) {\n    console.log('currentcustomers: ', currentcustomers);\n    console.log('newstatus: ', newstatus);\n\n    if (currentcustomers) {\n      var ids = Object.keys(currentcustomers).map(function (key) {\n        return currentcustomers[key].id;\n      });\n      console.log('ids: ', ids);\n      var query = firebase.database().ref(\"customers\").orderByKey();\n      query.once(\"value\").then(function (snapshot) {\n        var counter = 0;\n        snapshot.forEach(function (childSnapshot) {\n          var key = childSnapshot.key;\n\n          if (ids.includes(key)) {\n            var key = childSnapshot.key;\n            firebase.database().ref('/customers/' + key + '/' + \"laundrystatus\").set(newstatus);\n            console.log('currentcustomers in forEach: ', currentcustomers);\n\n            if (newstatus === 'delivered-to-SH' && parseFloat(currentcustomers[counter].weekweight) > parseFloat(currentcustomers[counter].maxweight)) {\n              firebase.database().ref('/customers/' + key + '/' + \"quarter_overages\").transaction(function (currOverages) {\n                //return currOverages+1;\n                return currOverages + parseFloat(currentcustomers[counter].weekweight) - parseFloat(currentcustomers[counter].maxweight);\n              });\n            }\n\n            counter = counter + 1;\n          }\n        });\n      });\n    }\n\n    return currentcustomers;\n  }\n\n  displaySelection(data) {\n    if (this.state.editing && (!data || data.length === 0)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: \"No Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  /* --------------- Filters ---------------- */\n  //dropdown for laundrystats\n\n\n  statusBodyTemplate(rowData) {\n    var laundryStatusDisplay = {\n      'picked-up': 'picked up',\n      'delivered-to-SH': 'delivered to SH',\n      'delivered-to-dorm': 'delivered to dorm',\n      'out-of-service': 'out of service',\n      'bag-missing': 'bag missing',\n      'start-of-quarter': 'start of quarter'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.laundrystatus,\n      children: laundryStatusDisplay[rowData.laundrystatus]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderStatusFilter() {\n    var statuses = [{\n      label: 'Picked Up',\n      value: 'picked-up'\n    }, {\n      label: 'Out of Service',\n      value: 'out-of-service'\n    }, {\n      label: 'Delivered to SH',\n      value: 'delivered-to-SH'\n    }, {\n      label: 'Delivered to Dorm',\n      value: 'delivered-to-dorm'\n    }, {\n      label: 'Bag Missing',\n      value: 'bag-missing'\n    }, {\n      label: 'Start of Quarter',\n      value: 'start-of-quarter'\n    }];\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: this.state.selectedStatus,\n      options: statuses,\n      onChange: this.onStatusFilterChange,\n      showClear: true,\n      placeholder: \"Select a Status\",\n      className: \"p-column-filter\",\n      style: {\n        maxWidth: 200,\n        minWidth: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this);\n  }\n\n  weightBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.weightstatus,\n      children: rowData.weightstatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 16\n    }, this);\n  }\n\n  onStatusFilterChange(event) {\n    this.dt.filter(event.value, 'laundrystatus', 'equals');\n    this.setState({\n      selectedStatus: event.value\n    });\n  } //dropdown for reshall\n\n\n  reshallBodyTemplate(rowData) {\n    var reshallDisplay = {\n      '560 Lincoln': '560 Lincoln',\n      '720 Emerson': '720 Emerson',\n      '1715 Chicago Ave': '1715 Chicago Ave',\n      '1838 Chicago': '1838 Chicago',\n      '1856 Orrington': '1856 Orrington',\n      '2303 Sheridan': '2303 Sheridan',\n      'Ayers': 'Ayers',\n      'Allison': 'Allison',\n      'Bobb': 'Bobb',\n      'Chapin': 'Chapin',\n      'East Fairchild': 'East Fairchild',\n      'Elder': 'Elder',\n      'West Fairchild': 'West Fairchild',\n      'Foster-Walker': 'Foster-Walker',\n      'Goodrich': 'Goodrich',\n      'Hobart': 'Hobart',\n      'Jones': 'Jones',\n      'Kemper': 'Kemper',\n      'McCulloch': 'McCulloch',\n      'PARC': 'PARC (North Mid Quads)',\n      'Rogers House': 'Rogers House',\n      'Sargent': 'Sargent',\n      'SMQ': 'Shepard Residential College (South Mid Quads)',\n      'Shepard': 'Shepard',\n      'Slivka': 'Slivka',\n      'Willard': 'Willard',\n      'Delta Gamma': 'Delta Gamma',\n      'Kappa Kappa Gamma': 'Kappa Kappa Gamma',\n      'Foster-Walker': 'Foster-Walker',\n      'Zeta Beta Tau (ZBT)': 'Zeta Beta Tau (ZBT)'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.reshall,\n      children: reshallDisplay[rowData.reshall]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 18\n    }, this);\n  }\n\n  renderReshallFilter() {\n    var reshalls = [{\n      label: '560 Lincoln',\n      value: '560 Lincoln'\n    }, {\n      label: '720 Emerson',\n      value: '720 Emerson'\n    }, {\n      label: '1715 Chicago',\n      value: '1715 Chicago'\n    }, {\n      label: '1838 Chicago',\n      value: '1838 Chicago'\n    }, {\n      label: '1856 Orrington',\n      value: '1856 Orrington'\n    }, {\n      label: '2303 Sheridan',\n      value: '2303 Sheridan'\n    }, {\n      label: 'Ayers',\n      value: 'Ayers'\n    }, {\n      label: 'Allison',\n      value: 'Allison'\n    }, {\n      label: 'Bobb',\n      value: 'Bobb'\n    }, {\n      label: 'Chapin',\n      value: 'Chapin'\n    }, {\n      label: 'East Fairchild',\n      value: 'East Fairchild'\n    }, {\n      label: 'Elder',\n      value: 'Elder'\n    }, {\n      label: 'West Fairchild',\n      value: 'West Fairchild'\n    }, {\n      label: 'Foster-Walker',\n      value: 'Foster-Walker'\n    }, {\n      label: 'Goodrich',\n      value: 'Goodrich'\n    }, {\n      label: 'Hobart',\n      value: 'Hobart'\n    }, {\n      label: 'Jones',\n      value: 'Jones'\n    }, {\n      label: 'Kemper',\n      value: 'Kemper'\n    }, {\n      label: 'McCulloch',\n      value: 'McCulloch'\n    }, {\n      label: 'PARC (North Mid Quads)',\n      value: 'PARC'\n    }, {\n      label: 'Rogers House',\n      value: 'Rogers House'\n    }, {\n      label: 'Sargent',\n      value: 'Sargent'\n    }, {\n      label: 'Shepard Residential College (South Mid Quads)',\n      value: 'SMQ'\n    }, {\n      label: 'Shepard',\n      value: 'Shepard'\n    }, {\n      label: 'Slivka',\n      value: 'Slivka'\n    }, {\n      label: 'Willard',\n      value: 'Willard'\n    }, {\n      label: 'Delta Gamma',\n      value: 'Delta Gamma'\n    }, {\n      label: 'Kappa Kappa Gamma',\n      value: 'Kappa Kappa Gamma'\n    }, {\n      label: 'Foster-Walker',\n      value: 'Foster-Walker'\n    }, {\n      label: 'Zeta Beta Tau (ZBT)',\n      value: 'Zeta Beta Tau (ZBT)'\n    }];\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: this.state.selectedReshall,\n      options: reshalls,\n      onChange: this.onReshallFilterChange,\n      showClear: true,\n      placeholder: \"Select a Dorm\",\n      className: \"p-column-filter\",\n      style: {\n        maxWidth: 200,\n        minWidth: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this);\n  }\n\n  onReshallFilterChange(event) {\n    this.dt.filter(event.value, 'reshall', 'equals');\n    this.setState({\n      selectedReshall: event.value\n    });\n  }\n\n  componentWillMount() {\n    this.loadInitialState();\n  }\n\n  render() {\n    const statusFilter = this.renderStatusFilter();\n    const reshallFilter = this.renderReshallFilter();\n    const allcustomers = this.state.customers;\n    const currentcustomers = this.state.selectedCustomers;\n    /* --------------- RETURN ---------------- */\n\n    /* ---------------- edit mode ------------*/\n\n    if (this.state.editing) {\n      var header = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              backgroundColor: '#6a09a4',\n              borderColor: '#6a09a4',\n              marginRight: 10\n            },\n            icon: \"pi pi-external-link\",\n            iconPos: \"left\",\n            label: \"CSV\",\n            onClick: this.export\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: 'white',\n              backgroundColor: '#6a09a4',\n              borderColor: '#6a09a4',\n              marginRight: 10\n            },\n            icon: \"pi pi-save\",\n            iconPos: \"left\",\n            label: \"SAVE\",\n            onClick: this.save\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: '#23547B',\n              backgroundColor: '#B3E5FC',\n              borderColor: '#23547B',\n              marginRight: 10\n            },\n            icon: \"pi pi-check\",\n            iconPos: \"left\",\n            label: \"PICKED UP\",\n            onClick: () => {\n              this.bagStatusEditor(allcustomers, currentcustomers, 'picked-up');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: '#694382',\n              backgroundColor: '#ECCFFF',\n              borderColor: '#694382',\n              marginRight: 10\n            },\n            icon: \"pi pi-check\",\n            iconPos: \"left\",\n            label: \"SH\",\n            onClick: () => {\n              this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-SH');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: '#256029',\n              backgroundColor: '#C8E6C9',\n              borderColor: '#256029',\n              marginRight: 10\n            },\n            icon: \"pi pi-check\",\n            iconPos: \"left\",\n            label: \"DORM\",\n            onClick: () => {\n              this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-dorm');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: '#474549',\n              backgroundColor: 'lightgrey',\n              borderColor: '#474549',\n              marginRight: 10\n            },\n            icon: \"pi pi-check\",\n            iconPos: \"left\",\n            label: \"NO SERVICE\",\n            onClick: () => {\n              this.bagStatusEditor(allcustomers, currentcustomers, 'out-of-service');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: '#C63737',\n              backgroundColor: '#FFCDD2',\n              borderColor: '#C63737',\n              marginRight: 10\n            },\n            icon: \"pi pi-check\",\n            iconPos: \"left\",\n            label: \"MISSING\",\n            onClick: () => {\n              this.bagStatusEditor(allcustomers, currentcustomers, 'bag-missing');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            style: {\n              color: '#474549',\n              backgroundColor: 'lightgrey',\n              borderColor: '#474549',\n              marginRight: 10\n            },\n            icon: \"pi pi-check\",\n            iconPos: \"left\",\n            label: \"START\",\n            onClick: () => {\n              this.bagStatusEditor(allcustomers, currentcustomers, 'start-of-quarter');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 26\n      }, this); //loading = {true} loadingIcon = \"pi pi-spinner\"\n\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"elmid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Rez Ops Bag Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The BagTracker is used to update bag statuses, including location, warnings, or overages of bags each the week.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ONLY individuals running operations should be accessing this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n            value: this.state.customers,\n            header: header,\n            ref: el => {\n              this.dt = el;\n            },\n            style: {\n              marginBottom: '20px'\n            },\n            responsive: true,\n            autoLayout: true,\n            editMode: \"row\",\n            rowEditorValidator: this.onRowEditorValidator,\n            onRowEditInit: this.onRowEditInit,\n            onRowEditSave: this.onRowEditSave,\n            onRowEditCancel: this.onRowEditCancel,\n            footer: this.displaySelection(this.state.selectedCustomers),\n            selection: this.state.selectedCustomers,\n            onSelectionChange: e => this.setState({\n              selectedCustomers: e.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              selectionMode: \"multiple\",\n              style: {\n                width: '3em'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"id\",\n              header: \"ID\",\n              sortable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"name\",\n              header: \"Name\",\n              style: {\n                maxWidth: 150\n              },\n              sortable: true,\n              filter: true,\n              filterPlaceholder: \"Search by name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"reshall\",\n              header: \"Residential Hall\",\n              style: {\n                maxWidth: 200\n              },\n              sortable: true,\n              filter: true,\n              filterElement: reshallFilter,\n              body: this.reshallBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"laundrystatus\",\n              header: \"Bag Status\",\n              style: {\n                maxWidth: 150\n              },\n              sortable: true,\n              filter: true,\n              filterElement: statusFilter,\n              body: this.statusBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"weightstatus\",\n              header: \"Weight Status\",\n              style: {\n                maxWidth: 150\n              },\n              sortable: true,\n              body: this.weightBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"weekweight\",\n              header: \"Bag Weight\",\n              sortable: true,\n              style: {\n                backgroundColor: '#6a09a4',\n                color: 'white',\n                maxWidth: 100\n              },\n              editor: this.generalEditor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this);\n      /* ---------------- NOT edit mode ------------*/\n    } else {\n      var header = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-pencil\",\n          iconPos: \"left\",\n          label: \"EDIT\",\n          onClick: this.edit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 26\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"elmid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Rez Ops Bag Tracker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The BagTracker is used to update bag statuses, including location, warnings, or overages of bags each the week.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"ONLY individuals running operations should be accessing this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n            value: this.state.customers,\n            header: header,\n            ref: el => {\n              this.dt = el;\n            },\n            style: {\n              marginBottom: '20px'\n            },\n            responsive: true,\n            autoLayout: true,\n            editMode: \"row\",\n            rowEditorValidator: this.onRowEditorValidator,\n            onRowEditInit: this.onRowEditInit,\n            onRowEditSave: this.onRowEditSave,\n            onRowEditCancel: this.onRowEditCancel,\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              field: \"id\",\n              header: \"ID\",\n              sortable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"name\",\n              header: \"Name\",\n              style: {\n                maxWidth: 150\n              },\n              sortable: true,\n              filter: true,\n              filterPlaceholder: \"Search by name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"reshall\",\n              header: \"Residential Hall\",\n              style: {\n                maxWidth: 200\n              },\n              sortable: true,\n              filter: true,\n              filterElement: reshallFilter,\n              body: this.reshallBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"laundrystatus\",\n              header: \"Bag Status\",\n              style: {\n                maxWidth: 150\n              },\n              sortable: true,\n              filter: true,\n              filterElement: statusFilter,\n              body: this.statusBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"weightstatus\",\n              header: \"Weight Status\",\n              style: {\n                maxWidth: 150\n              },\n              sortable: true,\n              body: this.weightBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"weekweight\",\n              header: \"Bag Weight\",\n              style: {\n                maxWidth: 100\n              },\n              sortable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/BagTracker.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","firebase","validator","customerData","BagTracker","constructor","loadInitialState","customerArray","database","ref","on","snapshot","forEach","childSnapshot","val","activestatus","push","toJSON","setState","customers","loading","state","selectedStatus","selectedReshall","editing","selectedCustomers","edit","bind","save","export","onStatusFilterChange","onReshallFilterChange","bagStatusEditor","displaySelection","generalEditor","dt","exportCSV","updateWeightStatus","props","value","currDate","console","log","rowIndex","parseInt","maxweight","parseFloat","over","rowData","id","set","updatedCustomers","field","onEditorValueChange","db","currWeight","currDay","Date","getDate","currMonth","getMonth","currYear","getFullYear","fullDate","toDateString","currTime","toLocaleTimeString","child","once","then","laundrystatus","weightstatus","curr","inputTextEditor","maxWidth","e","target","allcustomers","currentcustomers","newstatus","ids","Object","keys","map","key","each","includes","weekweight","dothisfirst","query","orderByKey","counter","transaction","currOverages","data","length","textAlign","statusBodyTemplate","laundryStatusDisplay","renderStatusFilter","statuses","label","minWidth","weightBodyTemplate","event","filter","reshallBodyTemplate","reshallDisplay","reshall","renderReshallFilter","reshalls","componentWillMount","render","statusFilter","reshallFilter","header","marginBottom","backgroundColor","borderColor","marginRight","color","el","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class BagTracker extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            selectedStatus: null,\n            selectedReshall: null,\n            editing: false,\n            loading: true,\n            selectedCustomers: null\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n        this.onReshallFilterChange = this.onReshallFilterChange.bind(this);\n        this.bagStatusEditor = this.bagStatusEditor.bind(this)\n        this.displaySelection = this.displaySelection.bind(this)\n        this.loadInitialState = this.loadInitialState.bind(this)\n        this.generalEditor = this.generalEditor.bind(this);\n\n\n\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n    /* --------------- Editing ---------------- */\n    edit() {\n        this.setState({ editing: true });\n    }\n\n    save() {\n        this.setState({ editing: false });\n    }\n\n\n    updateWeightStatus(props,value, currDate) {\n\n        console.log(this.state.customers[props.rowIndex])\n        // console.log(props.rowIndex)\n\n        //if (value > props.rowData.maxweight) {\n        \n        //if (value > firebase.database().ref('/customers/'+props.rowData.id+'/maxweight')) {\n        console.log('value: ',value);\n        console.log('maxweight comparison: ',parseInt(this.state.customers[props.rowIndex].maxweight));\n        if (parseFloat(value) > parseFloat(this.state.customers[props.rowIndex].maxweight)) {\n            let over = parseFloat(value) - parseFloat(this.state.customers[props.rowIndex].maxweight)\n            console.log('marking as overweight.');\n            firebase.database().ref('/customers/' + props.rowData.id + '/'+'weightstatus').set('overweight')\n            /*let temp = firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages')\n            temp.once('value', (snapshot) => {\n                let total = snapshot.val()+over\n                firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages').set(total)\n            })*/\n            let updatedCustomers = this.state.customers;\n            updatedCustomers[props.rowIndex][props.field] = value;\n            updatedCustomers[props.rowIndex]['weightstatus'] = 'overweight';\n            //updatedCustomers[props.rowIndex]['quarter-overages'] += parseFloat(value);\n            // this.setState({ customers: updatedCustomers });\n            return value\n        }\n        else {\n            console.log('marking as underweight');\n            firebase.database().ref('/customers/' + props.rowData.id + '/'+'weightstatus').set('underweight')\n            let updatedCustomers = this.state.customers;\n            updatedCustomers[props.rowIndex][props.field] = value;\n            updatedCustomers[props.rowIndex]['weightstatus'] = 'underweight';\n            // this.setState({ customers: updatedCustomers });\n            return value\n        }\n    }\n\n    async onEditorValueChange(props, value) {\n\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value)\n        const db = firebase.database().ref();\n        var currWeight = value;\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() +1;\n        if (currMonth < 10) {\n            currMonth = '0'+currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-'+currDay;\n        var fullDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n        db.child('/orders/' + currDate + props.rowData.id).once(\"value\")\n            .then(snapshot => {\n                if (!snapshot.val()) {\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id).set(0)\n                    db.child('/orders/' + currDate +' '+currTime+' - '+props.rowData.id + '/weight').set(currWeight);\n                    db.child('/orders/' + currDate+' '+currTime+' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/id').set(props.rowData.id);\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n                }\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/date').set(currDate+' '+ currTime);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weight').set(currWeight);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/id').set(props.rowData.id);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n\n            })\n        firebase.database().ref('/customers/' + props.rowData.id + '/last_weight_updated').set(currDate + ' ' + currTime)\n        const curr = await this.updateWeightStatus(props,value, currDate);\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.target.value);}}/>\n    }\n\n    generalEditor(props) {\n        return this.inputTextEditor(props, ' ');\n    }\n\n    // onRowEditInit(event) {\n    //     this.clonedCars[event.data.vin] = { ...event.data };\n    // }\n\n    // onRowEditSave(event) {\n    //     if (this.onRowEditorValidator(event.data)) {\n    //         delete this.clonedCars[event.data.vin];\n    //         this.growl.show({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\n    //     }\n    //     else {\n    //         this.growl.show({ severity: 'error', summary: 'Error', detail: 'Brand is required' });\n    //     }\n    // }\n\n    // onRowEditCancel(event) {\n    //     let cars = [...this.state.cars2];\n    //     cars[event.index] = this.clonedCars[event.data.vin];\n    //     delete this.clonedCars[event.data.vin];\n    //     this.setState({\n    //         cars2: cars\n    //     })\n    // }\n\n    bagStatusEditor(allcustomers, currentcustomers, newstatus) {\n        let updatedCustomers = [...allcustomers];\n        const db = firebase.database().ref()\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() +1;\n        if (currMonth < 10) {\n            currMonth = '0'+currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-'+currDay;\n        //var currDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n\n        if (currentcustomers) {\n            var ids = Object.keys(currentcustomers).map(function (key) {\n                return currentcustomers[key].id;\n            });\n            updatedCustomers.map(each => {\n                if (ids.includes(each.id)) {\n                    each.laundrystatus = newstatus;\n                    if (newstatus == 'out-of-service') {\n                        each.weightstatus = 'N/A'\n                        each.weekweight = 'N/A'\n                        db.child('/customers/'+each.id+'/weekweight').set('N/A');\n                        db.child('/customers/'+each.id+'/weightstatus').set('N/A');\n                    }\n                    firebase.database().ref('/customers/' + each.id + '/last_status_updated').set(currDate + ' ' + currTime)\n\n                    db.child('/orders/' + currDate + each.id).once(\"value\")\n                        .then(snapshot => {\n                            if (!snapshot.val()) {\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id).set(0)\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weight').set(each.weekweight);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/maxweight').set(each.maxweight);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/id').set(each.id);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/laundrystatus').set(each.laundrystatus);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weightstatus').set(each.weightstatus);\n                            }\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/date').set(currDate+' '+ currTime);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weight').set(each.weekweight);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/maxweight').set(each.maxweight);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/id').set(each.id);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/laundrystatus').set(each.laundrystatus);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weightstatus').set(each.weightstatus);\n\n                        })\n\n                }\n            })\n            this.setState({ customers: updatedCustomers });\n        }\n        console.log('bagStatusEditor currentcustomers: ',currentcustomers);\n        this.dothisfirst(currentcustomers, newstatus)\n\n    }\n\n\n    dothisfirst(currentcustomers, newstatus) {\n        console.log('currentcustomers: ',currentcustomers);\n        console.log('newstatus: ',newstatus);\n        if (currentcustomers) {\n            var ids = Object.keys(currentcustomers).map(function (key) {\n                return currentcustomers[key].id;\n            });\n            console.log('ids: ',ids);\n            var query = firebase.database().ref(\"customers\").orderByKey();\n            query.once(\"value\")\n                .then(function (snapshot) {\n                    var counter=0;\n                    snapshot.forEach(function (childSnapshot) {\n                        var key = childSnapshot.key;\n                        if (ids.includes(key)) {\n                            var key = childSnapshot.key;\n                            firebase.database().ref('/customers/' + key + '/' + \"laundrystatus\").set(newstatus);\n                            console.log('currentcustomers in forEach: ',currentcustomers);\n                            if (newstatus === 'delivered-to-SH' && parseFloat(currentcustomers[counter].weekweight) > parseFloat(currentcustomers[counter].maxweight)) {\n                                firebase.database().ref('/customers/' + key + '/' + \"quarter_overages\").transaction(function(currOverages) {\n                                    //return currOverages+1;\n                                    return currOverages + parseFloat(currentcustomers[counter].weekweight) - parseFloat(currentcustomers[counter].maxweight);\n                                });\n                            }\n                            counter = counter+1;\n\n                        }\n                    });\n                });\n        }\n        return currentcustomers\n    }\n\n\n    displaySelection(data) {\n        if (this.state.editing && (!data || data.length === 0)) {\n            return <div style={{ textAlign: 'left' }}>No Selection</div>;\n        }\n    }\n\n\n    /* --------------- Filters ---------------- */\n\n//dropdown for laundrystats\n    statusBodyTemplate(rowData) {\n        var laundryStatusDisplay = {\n            'picked-up': 'picked up',\n            'delivered-to-SH': 'delivered to SH',\n            'delivered-to-dorm': 'delivered to dorm',\n            'out-of-service': 'out of service',\n            'bag-missing': 'bag missing',\n            'start-of-quarter': 'start of quarter'\n        }\n        return <span className={rowData.laundrystatus}>{laundryStatusDisplay[rowData.laundrystatus]}</span>\n    }\n\n\n    renderStatusFilter() {\n        var statuses = [\n            { label: 'Picked Up', value: 'picked-up' },\n            { label: 'Out of Service', value: 'out-of-service' },\n            { label: 'Delivered to SH', value: 'delivered-to-SH' },\n            { label: 'Delivered to Dorm', value: 'delivered-to-dorm' },\n            { label: 'Bag Missing', value: 'bag-missing' },\n            { label: 'Start of Quarter', value: 'start-of-quarter' }\n        ];\n\n        return (\n\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n             showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{maxWidth: 200, minWidth: 50}} />\n        );\n    }\n\n    weightBodyTemplate(rowData) {\n        return <span className={rowData.weightstatus}>{rowData.weightstatus}</span>;\n    }\n\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'laundrystatus', 'equals');\n        this.setState({ selectedStatus: event.value });\n    }\n\n\n//dropdown for reshall\n\n    reshallBodyTemplate(rowData) {\n        var reshallDisplay = {\n          '560 Lincoln': '560 Lincoln',\n          '720 Emerson': '720 Emerson',\n            '1715 Chicago Ave': '1715 Chicago Ave',\n          '1838 Chicago': '1838 Chicago',\n          '1856 Orrington': '1856 Orrington',\n          '2303 Sheridan': '2303 Sheridan',\n          'Ayers': 'Ayers',\n          'Allison': 'Allison',\n          'Bobb': 'Bobb',\n          'Chapin': 'Chapin',\n          'East Fairchild': 'East Fairchild',\n          'Elder': 'Elder',\n          'West Fairchild': 'West Fairchild',\n          'Foster-Walker': 'Foster-Walker',\n          'Goodrich': 'Goodrich',\n          'Hobart': 'Hobart',\n          'Jones': 'Jones',\n          'Kemper': 'Kemper',\n          'McCulloch': 'McCulloch',\n          'PARC': 'PARC (North Mid Quads)',\n          'Rogers House': 'Rogers House',\n          'Sargent': 'Sargent',\n          'SMQ': 'Shepard Residential College (South Mid Quads)',\n          'Shepard': 'Shepard',\n          'Slivka': 'Slivka',\n          'Willard':  'Willard',\n          'Delta Gamma': 'Delta Gamma',\n          'Kappa Kappa Gamma': 'Kappa Kappa Gamma',\n          'Foster-Walker': 'Foster-Walker',\n            'Zeta Beta Tau (ZBT)': 'Zeta Beta Tau (ZBT)'\n          }\n          return <span className={rowData.reshall}>{reshallDisplay[rowData.reshall]}</span>\n    }\n\n    renderReshallFilter() {\n        var reshalls = [\n            { label: '560 Lincoln', value: '560 Lincoln' },\n            { label: '720 Emerson', value: '720 Emerson'},\n            { label: '1715 Chicago', value: '1715 Chicago'},\n            { label: '1838 Chicago', value: '1838 Chicago'},\n            { label: '1856 Orrington', value: '1856 Orrington'},\n            { label: '2303 Sheridan', value: '2303 Sheridan'},\n            { label: 'Ayers', value: 'Ayers'},\n            { label: 'Allison', value: 'Allison'},\n            { label: 'Bobb', value: 'Bobb' },\n            { label: 'Chapin', value: 'Chapin'},\n            { label: 'East Fairchild', value: 'East Fairchild'},\n            { label: 'Elder', value: 'Elder'},\n            { label: 'West Fairchild', value: 'West Fairchild'},\n            { label: 'Foster-Walker', value: 'Foster-Walker'},\n            { label: 'Goodrich', value: 'Goodrich'},\n            { label: 'Hobart', value: 'Hobart'},\n            { label: 'Jones', value: 'Jones' },\n            { label: 'Kemper', value: 'Kemper'},\n            { label: 'McCulloch', value: 'McCulloch'},\n            { label: 'PARC (North Mid Quads)', value: 'PARC'},\n            { label: 'Rogers House', value: 'Rogers House' },\n            { label: 'Sargent', value: 'Sargent'},\n            { label: 'Shepard Residential College (South Mid Quads)', value: 'SMQ'},\n            { label: 'Shepard', value: 'Shepard'},\n            { label: 'Slivka', value: 'Slivka'},\n            { label: 'Willard', value: 'Willard'},\n            { label: 'Delta Gamma', value: 'Delta Gamma'},\n            { label: 'Kappa Kappa Gamma', value: 'Kappa Kappa Gamma'},\n            { label: 'Foster-Walker', value: 'Foster-Walker'},\n            { label: 'Zeta Beta Tau (ZBT)', value: 'Zeta Beta Tau (ZBT)'}\n    ];\n\n        return (\n\n            <Dropdown value={this.state.selectedReshall} options={reshalls} onChange={this.onReshallFilterChange}\n             showClear={true} placeholder=\"Select a Dorm\" className=\"p-column-filter\" style={{maxWidth: 200, minWidth: 50}} />\n        );\n    }\n\n\n    onReshallFilterChange(event) {\n        this.dt.filter(event.value, 'reshall', 'equals');\n        this.setState({ selectedReshall: event.value });\n    }\n\n\n\n\n\n\n    loadInitialState = async () => {\n        const customerArray = [];\n        firebase.database().ref('/customers').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                if (childSnapshot.val().activestatus === 'active' ) {\n                    customerArray.push(childSnapshot.toJSON());\n                }\n\n            });\n        });\n        this.setState({ customers: customerArray });\n        this.setState({ loading: false });\n\n    }\n\n    componentWillMount() {\n        this.loadInitialState()\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n        const reshallFilter = this.renderReshallFilter();\n        const allcustomers = this.state.customers;\n        const currentcustomers = this.state.selectedCustomers;\n\n        /* --------------- RETURN ---------------- */\n        /* ---------------- edit mode ------------*/\n        if (this.state.editing) {\n            var header = <div style={{ textAlign: 'left' }}>\n                <div style={{ marginBottom: 10 }}>\n                    <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-save\" iconPos=\"left\" label=\"SAVE\" onClick={this.save}>\n                    </Button>\n                </div>\n                <div>\n                    <Button type=\"button\" style={{ color: '#23547B', backgroundColor: '#B3E5FC', borderColor: '#23547B', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"PICKED UP\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'picked-up')}}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#694382', backgroundColor: '#ECCFFF', borderColor: '#694382', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"SH\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-SH') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#256029', backgroundColor: '#C8E6C9', borderColor: '#256029', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"DORM\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-dorm') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"NO SERVICE\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'out-of-service') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#C63737', backgroundColor: '#FFCDD2', borderColor: '#C63737', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"MISSING\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'bag-missing') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"START\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'start-of-quarter') }}>\n                    </Button>\n\n                </div>\n                <div>\n\n                </div>\n            </div>;\n            //loading = {true} loadingIcon = \"pi pi-spinner\"\n            return (\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Rez Ops Bag Tracker</h1>\n                        <p>The BagTracker is used to update bag statuses, including location, warnings, or overages of bags each the week.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <DataTable value={this.state.customers} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true}\n                        editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}\n                        footer={this.displaySelection(this.state.selectedCustomers)} selection={this.state.selectedCustomers} onSelectionChange={e => this.setState({ selectedCustomers: e.value })}>\n                            <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                            <Column field=\"id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"reshall\" header=\"Residential Hall\" style={{ maxWidth: 200 }} sortable={true} filter filterElement={reshallFilter} body={this.reshallBodyTemplate}/>\n                            <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate}/>\n                            <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }} sortable={true} body={this.weightBodyTemplate}/>\n\n                            <Column field=\"weekweight\" header=\"Bag Weight\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} editor={this.generalEditor}/>\n                        </DataTable>\n                    </div>\n                </div>\n            );\n            /* ---------------- NOT edit mode ------------*/\n        } else {\n            var header = <div style={{ textAlign: 'left' }}>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                </Button>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-pencil\" iconPos=\"left\" label=\"EDIT\" onClick={this.edit}>\n                </Button>\n            </div>;\n            return (\n\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Rez Ops Bag Tracker</h1>\n                        <p>The BagTracker is used to update bag statuses, including location, warnings, or overages of bags each the week.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <DataTable value={this.state.customers} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                            <Column field=\"id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"reshall\" header=\"Residential Hall\" style={{ maxWidth: 200 }} sortable={true} filter filterElement={reshallFilter} body={this.reshallBodyTemplate}/>\n                            <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate} />\n                            <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }} sortable={true} body={this.weightBodyTemplate}/>\n                            <Column field=\"weekweight\" header=\"Bag Weight\" style={{ maxWidth: 100 }} sortable={true} />\n\n                        </DataTable>\n                    </div>\n                </div>\n            );\n\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}