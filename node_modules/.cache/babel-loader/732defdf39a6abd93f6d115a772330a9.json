{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\3\\\\Documents\\\\GitHub\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\3\\\\documents\\\\github\\\\ink-tank-bulk-orders\\\\src\\\\components\\\\AddOrders.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var AddOrders = /*#__PURE__*/function (_Component) {\n  _inherits(AddOrders, _Component);\n\n  var _super = _createSuper(AddOrders);\n\n  function AddOrders() {\n    var _this;\n\n    _classCallCheck(this, AddOrders);\n\n    _this = _super.call(this);\n    _this.state = {\n      customers: [],\n      orders: [],\n      bulk_orders: [],\n      selectedCustomer: null,\n      selectedOrders: null,\n      editing: false,\n      idcount: null,\n      newfirstname: null,\n      newlastname: null,\n      newid: null,\n      newplanYear: null,\n      newplanQuarter: null,\n      newmax: null,\n      newreshall: null,\n      newphone: null,\n      newemail: null,\n      newaddress: null,\n      newcity: null,\n      newstate: null,\n      newpostalcode: null,\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planTeamMember: [{\n        label: 'Caden Gaviria',\n        value: 'Caden Gaviria'\n      }, {\n        label: 'Philippe Manzone',\n        value: 'Philippe Manzone'\n      }, {\n        label: 'Alec Aragon',\n        value: 'Alec Aragon'\n      }, {\n        label: 'Shannon Groves',\n        value: 'Shannon Groves'\n      }, {\n        label: 'Ali Kilic',\n        value: 'Ali Kilic'\n      }],\n      planSelectStatus: [{\n        label: 'Confirmed',\n        value: 'confirmed'\n      }, {\n        label: 'In Production',\n        value: 'in production'\n      }, {\n        label: 'Invoiced',\n        value: 'invoiced'\n      }, {\n        label: 'Fulfilled',\n        value: 'fulfilled'\n      }, {\n        label: 'Shipped',\n        value: 'Shipped'\n      }, {\n        label: 'Quote',\n        value: 'quote'\n      }],\n      planYesNo: [{\n        label: 'Yes',\n        value: 'yes'\n      }, {\n        label: 'No',\n        value: 'no'\n      }]\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.onTeamMemberValueChange = _this.onTeamMemberValueChange.bind(_assertThisInitialized(_this)); //this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this)\n    //this.getCustomerHistory = this.getCustomerHistory.bind(this)\n    //this.displayPlanQuarters = this.displayPlanQuarters.bind(this)\n\n    _this.resetNewInfo = _this.resetNewInfo.bind(_assertThisInitialized(_this));\n    _this.addCustomer = _this.addCustomer.bind(_assertThisInitialized(_this));\n    _this.padId = _this.padId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddOrders, [{\n    key: \"padId\",\n    value: function padId(idNum) {\n      var digitLength = idNum.toString().length;\n\n      if (digitLength === 1) {\n        var result = '0000' + idNum;\n      } else if (digitLength === 2) {\n        var result = '000' + idNum;\n      } else if (digitLength === 3) {\n        var result = '00' + idNum;\n      } else if (digitLength === 4) {\n        var result = '0' + idNum;\n      } else if (digitLength === 5) {\n        var result = idNum.toString();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      }); //this.resetNewInfo();\n    }\n  }, {\n    key: \"save\",\n    value: function save(customer) {\n      this.setState({\n        editing: false\n      }); //console.log(this.state.newplan)\n\n      var allcustomers = _toConsumableArray(this.state.customers);\n\n      var newcustomer = _objectSpread({}, this.state.selectedCustomer);\n\n      if (this.state.newplanyear && this.state.newplanquarter) {\n        newcustomer.plan = this.state.newplanyear + this.state.newplanquarter; //console.log('newplanQuarter: ', this.state.newplanQuarter);\n        //console.log('newplanYear', this.state.newplanYear)\n\n        firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n      } else if (this.state.newplanyear) {\n        newcustomer.plan = this.state.newplanyear + customer.plan.substring(9); //console.log('newcustomer.plan: ', newcustomer.plan);\n        //console.log('newplanYear', this.state.newplanYear)\n        //console.log('customer quarter: ', customer.plan.substring(9));\n\n        firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n      } else if (this.state.newplanquarter) {\n        newcustomer.plan = customer.plan.substring(0, 9) + this.state.newplanquarter; //console.log('newcustomer.plan: ', newcustomer.plan);\n        //console.log('customer year', customer.plan.substring(0,9))\n        //console.log('newplanQuarter: ', this.state.newplanQuarter);\n\n        firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n      }\n\n      if (this.state.newmax) {\n        newcustomer.maxweight = this.state.newmax;\n        firebase.database().ref('/customers/' + customer.id + '/maxweight').set(newcustomer.maxweight);\n      }\n\n      if (this.state.newreshall) {\n        newcustomer.reshall = this.state.newreshall;\n        firebase.database().ref('/customers/' + customer.id + '/reshall').set(newcustomer.reshall);\n      }\n\n      if (this.state.newphone) {\n        newcustomer.phone = this.state.newphone;\n        firebase.database().ref('/customers/' + customer.id + '/phone').set(newcustomer.phone);\n      }\n\n      if (this.state.newemail) {\n        newcustomer.email = this.state.newemail;\n        firebase.database().ref('/customers/' + customer.id + '/email').set(newcustomer.email);\n      }\n\n      var count = 0;\n      var individual = null;\n      allcustomers.map(function (each) {\n        if (newcustomer.id == each.id) {\n          individual = _objectSpread({}, allcustomers[count]);\n          individual = newcustomer;\n          allcustomers[count] = individual;\n        }\n\n        count = count + 1;\n      });\n      this.setState({\n        customers: allcustomers\n      });\n      this.setState({\n        selectedCustomer: newcustomer\n      });\n    } //CUSTOMER INFORMATION EDITING\n\n  }, {\n    key: \"onNameValueChange\",\n    value: function onNameValueChange(value) {\n      //console.log('new first name: ', value)\n      this.setState({\n        name: value\n      });\n    }\n  }, {\n    key: \"onTeamMemberValueChange\",\n    value: function onTeamMemberValueChange(value) {\n      //console.log('newPlanYear: ', value)\n      this.setState({\n        team_member: value\n      });\n    }\n  }, {\n    key: \"onBlankValueChange\",\n    value: function onBlankValueChange(value) {\n      //console.log('newPlanQuarter: ', value)\n      this.setState({\n        blank: value\n      });\n    }\n  }, {\n    key: \"onDesignValueChange\",\n    value: function onDesignValueChange(value) {\n      this.setState({\n        design: value\n      });\n    }\n  }, {\n    key: \"onOrganizationValueChange\",\n    value: function onOrganizationValueChange(value) {\n      this.setState({\n        organization: value\n      });\n    }\n  }, {\n    key: \"onTaxExemptValueChange\",\n    value: function onTaxExemptValueChange(value) {\n      this.setState({\n        tax_exempt: value\n      });\n    }\n  }, {\n    key: \"onQuantityValueChange\",\n    value: function onQuantityValueChange(value) {\n      this.setState({\n        quantity: value\n      });\n    }\n  }, {\n    key: \"onOrderQuoteValueChange\",\n    value: function onOrderQuoteValueChange(value) {\n      //try, execept \n      this.setState({\n        order_quote: value\n      });\n    }\n  }, {\n    key: \"onFinalTotalValueChange\",\n    value: function onFinalTotalValueChange(value) {\n      this.setState({\n        final_total: value\n      });\n    }\n  }, {\n    key: \"onPhoneValueChange\",\n    value: function onPhoneValueChange(value) {\n      if (value == \"NA\") {\n        this.setState({\n          phone: \"NA\"\n        });\n      } else {\n        if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n          this.setState({\n            phone: value\n          });\n        }\n      } //this.setState({ newphone: value });\n      // if value == NA: set to NA; conver to uppercase\n      // else; cast as float\n\n    }\n  }, {\n    key: \"onEmailValueChange\",\n    value: function onEmailValueChange(value) {\n      if (value.includes('@') && value.includes('.')) {\n        this.setState({\n          email: value\n        });\n      }\n    }\n  }, {\n    key: \"onAddressValueChange\",\n    value: function onAddressValueChange(value) {\n      this.setState({\n        newaddress: value\n      });\n    }\n  }, {\n    key: \"onCityValueChange\",\n    value: function onCityValueChange(value) {\n      this.setState({\n        newcity: value\n      });\n    }\n  }, {\n    key: \"onStateValueChange\",\n    value: function onStateValueChange(value) {\n      this.setState({\n        newstate: value\n      });\n    }\n  }, {\n    key: \"onPostalCodeValueChange\",\n    value: function onPostalCodeValueChange(value) {\n      this.setState({\n        newpostalcode: value\n      });\n    }\n  }, {\n    key: \"resetNewInfo\",\n    value: function resetNewInfo() {\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        team_member: ''\n      });\n      this.setState({\n        blank: ''\n      });\n      this.setState({\n        design: ''\n      });\n      this.setState({\n        organization: ''\n      });\n      this.setState({\n        tax_exempt: ''\n      });\n      this.setState({\n        quantity: ''\n      });\n      this.setState({\n        quantity: ''\n      });\n      this.setState({\n        order_quote: ''\n      });\n      this.setState({\n        final_total: ''\n      });\n      this.setState({\n        phone: ''\n      });\n      this.setState({\n        email: ''\n      });\n      this.setState({\n        newaddress: ''\n      });\n      this.setState({\n        newstate: ''\n      });\n      this.setState({\n        newcity: ''\n      });\n      this.setState({\n        newpostalcode: ''\n      });\n    }\n  }, {\n    key: \"addCustomer\",\n    value: function addCustomer() {\n      var _this2 = this;\n\n      //console.log('new first name: ', this.state.newfirstname);\n      //console.log('new last name: ', this.state.newlastname);\n      // console.log('new plan year: ', this.state.newplanyear);\n      // console.log('new plan quarter: ', this.state.newplanquarter);\n      // console.log('new max weight: ', this.state.newmax);\n      // console.log('new res hall: ', this.state.newreshall);\n      // console.log('new phone: ', this.state.newphone);\n      // console.log('new email: ', this.state.newemail);\n      //this.setState({idcount: this.state.idcount+1});\n      //console.log('updated id Count', this.state.idcount);\n      if (this.state.name !== '' && this.state.organization !== '' && this.state.email !== '' && this.state.phone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n        var idNum = this.padId(this.state.idcount); // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n\n        var id = this.state.newid; //console.log('NEW ID: ', id);\n\n        this.messages.show({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Customer Added!'\n        });\n        var db = firebase.database().ref(); //updating id count in firebase and then updating state variable\n\n        db.child('/idcount').set(this.state.idcount + 1);\n        db.child('/idcount').once('value').then(function (snapshot) {\n          _this2.setState({\n            idcount: snapshot.val()\n          });\n\n          console.log('state var idcount: ', _this2.state.idcount); //idNum = snapshot.val();\n\n          console.log('id from firebase: ', snapshot.val());\n        });\n        var fullname = this.state.newfirstname + ' ' + this.state.newlastname;\n        var email = this.state.newemail;\n        var phone = this.state.newphone;\n        var reshall = this.state.newreshall;\n        var maxweight = this.state.newmax;\n        var plan = this.state.newplanyear + this.state.newplanquarter;\n        db.child('/customers/' + id).once(\"value\").then(function (snapshot) {\n          if (!snapshot.val()) {\n            db.child('/customers/' + id + '/activestatus').set(\"active\");\n            db.child('/customers/' + id + '/bag-condition').set(\"good\");\n            db.child('/customers/' + id + '/bag-missing').set(\"false\");\n            db.child('/customers/' + id + '/detergent').set('unscented');\n            db.child('/customers/' + id + '/email').set(email);\n            db.child('/customers/' + id + '/fabric_softener').set('No');\n            db.child('/customers/' + id + '/id').set(id);\n            db.child('/customers/' + id + '/last_status_updated').set('N/A');\n            db.child('/customers/' + id + '/last_weight_updated').set('N/A');\n            db.child('/customers/' + id + '/laundrystatus').set('out-of-service');\n            db.child('/customers/' + id + '/maxweight').set(maxweight);\n            db.child('/customers/' + id + '/name').set(fullname);\n            db.child('/customers/' + id + '/phone').set(phone);\n            db.child('/customers/' + id + '/plan').set(plan);\n            db.child('/customers/' + id + '/reshall').set(reshall);\n            db.child('/customers/' + id + '/weekweight').set(\"N/A\");\n            db.child('/customers/' + id + '/weightstatus').set(\"N/A\");\n          }\n        });\n        this.setState({\n          newfirstname: ''\n        });\n        this.setState({\n          newlastname: ''\n        });\n        this.setState({\n          newid: ''\n        });\n        this.setState({\n          newplanyear: ''\n        });\n        this.setState({\n          newplanquarter: ''\n        });\n        this.setState({\n          newmax: ''\n        });\n        this.setState({\n          newreshall: ''\n        });\n        this.setState({\n          newphone: ''\n        });\n        this.setState({\n          newemail: ''\n        }); //const curr  = await this.resetNewInfo();\n        //console.log('reset info: ', this.state.newfirstname);\n        //document.getElementById(\"form\").reset();\n      } else {\n        this.messages.show({\n          severity: \"error\",\n          summary: \"Missing Fields\",\n          detail: \"Please enter all information\"\n        });\n      }\n    } // displayPlanQuarters(customerPlan) {\n    //     if (customerPlan) {\n    //         if (customerPlan === 'F') {\n    //             const result = 'Fall Quarter';\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'W') {\n    //             const result = 'Winter Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'S') {\n    //             const result = 'Spring Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'W-S') {\n    //             const result = 'Winter/Spring Quarter' ;\n    //             return result;\n    //         }\n    //         else if (customerPlan === 'F-W-S') {\n    //             const result = 'Full Year' ;\n    //             return result;\n    //         }\n    //     }\n    // }\n\n    /* --------------- Filters ---------------- */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var customerArray = [];\n      firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          customerArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        customers: customerArray\n      });\n      this.setState({\n        bulk_orders: customerArray\n      });\n      var orderArray = [];\n      firebase.database().ref('/orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          orderArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        orders: orderArray\n      }); //var idNum = 0;\n\n      firebase.database().ref('/idcount').once('value').then(function (snapshot) {\n        _this3.setState({\n          idcount: snapshot.val()\n        });\n\n        console.log('state var idcount: ', _this3.state.idcount); //idNum = snapshot.val();\n\n        console.log('id from firebase: ', snapshot.val());\n      }); //console.log('var idNum: ', idNum);\n      //this.setState({idcount: idNum});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 26\n        }\n      });\n      var customer = this.state.selectedCustomer; //var history = this.getCustomerHistory(customer)\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        id: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, \"Add New Order Inquiry\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 17\n        }\n      }, \"Use this form to enter all information about a new order or order inquiry\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-fluid p-formgrid p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 9\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.name,\n        id: \"firstname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onNameValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }\n      }, \"Organization\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.organization,\n        id: \"lastname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onOrganizationValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }\n      }, \"Blank\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.blank,\n        id: \"blank\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onBlankValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.email,\n        id: \"newemail\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onEmailValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 9\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.phone,\n        id: \"newphone\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPhoneValueChange(e.target.value);\n        },\n        placeholder: \"Type Phone Number or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }\n      }, \"Address\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.address,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onAddressValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.city,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onCityValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.state,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onStateValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }\n      }, \"Postal Code\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.postal_code,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPostalCodeValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 9\n        }\n      }), \"    \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 9\n        }\n      }, \"Tax-Exempt\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.tax_exempt,\n        options: this.state.planYesNo,\n        onChange: function onChange(e) {\n          _this4.onTaxExemptValueChange(e.target.value);\n        },\n        placeholder: \"Select Yes or No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 9\n        }\n      }, \"Design\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.design,\n        options: this.state.planYesNo,\n        onChange: function onChange(e) {\n          _this4.onDesignValueChange(e.target.value);\n        },\n        placeholder: \"Select Yes or No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstnames6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 9\n        }\n      }, \"Assigned Ink Tank Team Member\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.team_member,\n        options: this.state.planTeamMember,\n        onChange: function onChange(e) {\n          _this4.onTeamMemberValueChange(e.target.value);\n        },\n        placeholder: \"Select Team Member\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 9\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.quantity,\n        id: \"quantity\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onQuantityValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 9\n        }\n      }, \"Order Quote\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.order_quote,\n        id: \"order_quote\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onOrderQuoteValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }\n      }, \"Final Total\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.final_total,\n        id: \"final_total\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onFinalTotalValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: 'white',\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginTop: 30\n        },\n        label: \"ADD ORDER\",\n        onClick: function onClick() {\n          _this4.addCustomer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this4.messages = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 5\n        }\n      }))));\n    }\n  }]);\n\n  return AddOrders;\n}(Component);","map":{"version":3,"sources":["C:/Users/3/documents/github/ink-tank-bulk-orders/src/components/AddOrders.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","InputTextarea","Messages","Message","firebase","validator","customerData","AddOrders","state","customers","orders","bulk_orders","selectedCustomer","selectedOrders","editing","idcount","newfirstname","newlastname","newid","newplanYear","newplanQuarter","newmax","newreshall","newphone","newemail","newaddress","newcity","newstate","newpostalcode","planSelectYear","label","value","planTeamMember","planSelectStatus","planYesNo","edit","bind","save","onTeamMemberValueChange","resetNewInfo","addCustomer","padId","idNum","digitLength","toString","length","result","setState","customer","allcustomers","newcustomer","newplanyear","newplanquarter","plan","database","ref","id","set","substring","maxweight","reshall","phone","email","count","individual","map","each","name","team_member","blank","design","organization","tax_exempt","quantity","order_quote","final_total","includes","messages","show","severity","summary","detail","db","child","once","then","snapshot","val","console","log","fullname","customerArray","on","forEach","childSnapshot","push","toJSON","orderArray","header","textAlign","e","onNameValueChange","target","onOrganizationValueChange","onBlankValueChange","onEmailValueChange","onPhoneValueChange","address","onAddressValueChange","city","onCityValueChange","onStateValueChange","postal_code","onPostalCodeValueChange","onTaxExemptValueChange","onDesignValueChange","onQuantityValueChange","onOrderQuoteValueChange","onFinalTotalValueChange","color","backgroundColor","borderColor","marginTop","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column'\r\nimport { Chart } from 'primereact/chart'\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Editor } from 'primereact/editor';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Messages} from 'primereact/messages';\r\nimport {Message} from 'primereact/message';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nimport validator from 'validator'\r\n\r\n\r\nimport customerData from '../customers.json';\r\n// import classNames from 'classnames';\r\n\r\nimport '../Dashboard.css';\r\n//import { arrayToHash } from '@fullcalendar/core/util/object';\r\n\r\n\r\nexport class AddOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: [],\r\n            orders: [],\r\n            bulk_orders: [],\r\n            selectedCustomer: null,\r\n            selectedOrders: null,\r\n            editing: false,\r\n            idcount: null,\r\n            newfirstname: null,\r\n            newlastname: null,\r\n            newid: null,\r\n            newplanYear: null,\r\n            newplanQuarter: null,\r\n            newmax: null,\r\n            newreshall: null,\r\n            newphone: null,\r\n            newemail: null,\r\n            newaddress: null,\r\n            newcity: null,\r\n            newstate: null,\r\n            newpostalcode: null,\r\n            planSelectYear: [\r\n                {label: '2020-2021', value: '2020-2021'},\r\n                {label: '2021-2022', value: '2021-2022'},\r\n                {label: '2022-2023', value: '2022-2023'},\r\n                {label: '2023-2024', value: '2023-2024'}\r\n            ],\r\n            planTeamMember: [\r\n                { label: 'Caden Gaviria', value: 'Caden Gaviria' },\r\n                { label: 'Philippe Manzone', value: 'Philippe Manzone'},\r\n                { label: 'Alec Aragon', value: 'Alec Aragon'},\r\n                { label: 'Shannon Groves', value: 'Shannon Groves'},\r\n                { label: 'Ali Kilic', value: 'Ali Kilic'}\r\n        ],\r\n            planSelectStatus: [\r\n                { label: 'Confirmed', value: 'confirmed' },\r\n                { label: 'In Production', value: 'in production' },\r\n                { label: 'Invoiced', value: 'invoiced' },\r\n                { label: 'Fulfilled', value: 'fulfilled' },\r\n                { label: 'Shipped', value: 'Shipped' },\r\n                { label: 'Quote', value: 'quote' }\r\n            ],\r\n            planYesNo: [\r\n                {label: 'Yes', value: 'yes'},\r\n                {label: 'No', value: 'no'}\r\n            ]\r\n\r\n        };\r\n        this.edit = this.edit.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.onTeamMemberValueChange = this.onTeamMemberValueChange.bind(this)\r\n        //this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this)\r\n        //this.getCustomerHistory = this.getCustomerHistory.bind(this)\r\n        //this.displayPlanQuarters = this.displayPlanQuarters.bind(this)\r\n        this.resetNewInfo = this.resetNewInfo.bind(this)\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n        this.padId = this.padId.bind(this)\r\n    }\r\n\r\n\r\n    padId(idNum) {\r\n        var digitLength = (idNum.toString()).length;\r\n        if (digitLength === 1) {\r\n            var result = '0000'+idNum;\r\n        }\r\n        else if (digitLength === 2) {\r\n            var result = '000'+idNum;\r\n        }\r\n        else if (digitLength === 3) {\r\n            var result = '00'+idNum;\r\n        }\r\n        else if (digitLength === 4) {\r\n            var result = '0'+idNum;\r\n        }\r\n        else if (digitLength === 5) {\r\n            var result = idNum.toString();\r\n        }\r\n        return result;\r\n\r\n    }\r\n    edit() {\r\n        this.setState({ editing: true });\r\n        //this.resetNewInfo();\r\n    }\r\n\r\n    save(customer) {\r\n        this.setState({ editing: false });\r\n        //console.log(this.state.newplan)\r\n        let allcustomers = [...this.state.customers];\r\n        let newcustomer = {...this.state.selectedCustomer};\r\n        if (this.state.newplanyear && this.state.newplanquarter) {\r\n             newcustomer.plan = this.state.newplanyear+this.state.newplanquarter;\r\n             //console.log('newplanQuarter: ', this.state.newplanQuarter);\r\n             //console.log('newplanYear', this.state.newplanYear)\r\n             firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\r\n        }\r\n        else if (this.state.newplanyear) {\r\n            newcustomer.plan = this.state.newplanyear+customer.plan.substring(9);\r\n            //console.log('newcustomer.plan: ', newcustomer.plan);\r\n            //console.log('newplanYear', this.state.newplanYear)\r\n            //console.log('customer quarter: ', customer.plan.substring(9));\r\n            firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\r\n       }\r\n       else if (this.state.newplanquarter) {\r\n            newcustomer.plan = customer.plan.substring(0,9)+this.state.newplanquarter;\r\n            //console.log('newcustomer.plan: ', newcustomer.plan);\r\n            //console.log('customer year', customer.plan.substring(0,9))\r\n            //console.log('newplanQuarter: ', this.state.newplanQuarter);\r\n            firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\r\n   }\r\n        if (this.state.newmax) {\r\n            newcustomer.maxweight = this.state.newmax;\r\n            firebase.database().ref('/customers/' + customer.id + '/maxweight').set(newcustomer.maxweight);\r\n       }\r\n        if (this.state.newreshall) {\r\n            newcustomer.reshall = this.state.newreshall;\r\n            firebase.database().ref('/customers/' + customer.id + '/reshall').set(newcustomer.reshall);\r\n        }\r\n        if (this.state.newphone) {\r\n            newcustomer.phone = this.state.newphone;\r\n            firebase.database().ref('/customers/' + customer.id + '/phone').set(newcustomer.phone);\r\n        }\r\n        if (this.state.newemail) {\r\n            newcustomer.email = this.state.newemail;\r\n            firebase.database().ref('/customers/' + customer.id + '/email').set(newcustomer.email)\r\n        }\r\n        let count = 0;\r\n        let individual=null;\r\n        allcustomers.map(each => {\r\n            if (newcustomer.id == each.id) {\r\n                individual = {...allcustomers[count]};\r\n                individual= newcustomer;\r\n                allcustomers[count] = individual;\r\n            }\r\n            count = count+1\r\n        })\r\n        this.setState({ customers: allcustomers });\r\n        this.setState({selectedCustomer: newcustomer});\r\n        \r\n    }\r\n\r\n    //CUSTOMER INFORMATION EDITING\r\n    onNameValueChange(value) {\r\n        //console.log('new first name: ', value)\r\n        this.setState({name: value});\r\n        \r\n    }\r\n\r\n    onTeamMemberValueChange(value) {\r\n        //console.log('newPlanYear: ', value)\r\n        this.setState({ team_member: value });\r\n    }\r\n    onBlankValueChange(value) {\r\n        //console.log('newPlanQuarter: ', value)\r\n        this.setState({ blank: value });\r\n    }\r\n    onDesignValueChange(value) {\r\n        this.setState({ design: value });\r\n    }\r\n    onOrganizationValueChange(value) {\r\n        this.setState({ organization: value });\r\n    }\r\n    onTaxExemptValueChange(value) {\r\n        this.setState({ tax_exempt: value });\r\n    }\r\n    onQuantityValueChange(value) {\r\n        this.setState({ quantity: value });\r\n    }\r\n    onOrderQuoteValueChange(value) {\r\n        //try, execept \r\n        this.setState({ order_quote: value });\r\n    }\r\n    onFinalTotalValueChange(value) {\r\n        this.setState({ final_total: value });\r\n    }\r\n    onPhoneValueChange(value) {\r\n        if (value == \"NA\") {\r\n            this.setState({ phone: \"NA\"})\r\n        }else{\r\n            if(value[3] ==='-' && value[7]==='-' && value.length===12) {\r\n                this.setState({ phone: value });\r\n            }\r\n        }\r\n        //this.setState({ newphone: value });\r\n        // if value == NA: set to NA; conver to uppercase\r\n        // else; cast as float\r\n        \r\n    }\r\n    onEmailValueChange(value) {\r\n        if (value.includes('@') && value.includes('.')) {\r\n            this.setState({ email: value });\r\n        }\r\n    }\r\n    onAddressValueChange(value) {\r\n        this.setState({newaddress: value});  \r\n    }\r\n    onCityValueChange(value) {\r\n        this.setState({ newcity: value});  \r\n    }\r\n    onStateValueChange(value) {\r\n        this.setState({ newstate: value});  \r\n    }\r\n    onPostalCodeValueChange(value) {\r\n        this.setState({ newpostalcode: value});  \r\n    }\r\n    resetNewInfo() {\r\n        this.setState({name: ''});\r\n        this.setState({ team_member: ''});\r\n        this.setState({ blank: '' });\r\n        this.setState({ design: '' });\r\n        this.setState({ organization: ''});\r\n        this.setState({ tax_exempt: '' });\r\n        this.setState({ quantity: '' });\r\n        this.setState({ quantity: '' });\r\n        this.setState({ order_quote: '' });\r\n        this.setState({ final_total: '' });\r\n        this.setState({ phone: ''});\r\n        this.setState({ email: ''});\r\n        this.setState({ newaddress: ''});\r\n        this.setState({ newstate: ''});\r\n        this.setState({ newcity: ''});\r\n        this.setState({ newpostalcode: ''});\r\n    }\r\n\r\n    addCustomer() {\r\n        //console.log('new first name: ', this.state.newfirstname);\r\n        //console.log('new last name: ', this.state.newlastname);\r\n        // console.log('new plan year: ', this.state.newplanyear);\r\n        // console.log('new plan quarter: ', this.state.newplanquarter);\r\n        // console.log('new max weight: ', this.state.newmax);\r\n        // console.log('new res hall: ', this.state.newreshall);\r\n        // console.log('new phone: ', this.state.newphone);\r\n        // console.log('new email: ', this.state.newemail);\r\n        //this.setState({idcount: this.state.idcount+1});\r\n        //console.log('updated id Count', this.state.idcount);\r\n        if(this.state.name !=='' && this.state.organization !== '' && this.state.email !=='' && this.state.phone !== '' && this.state.blank!=='' && this.state.design!=='' && this.state.team_member!==null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\r\n            \r\n            var idNum = this.padId(this.state.idcount);\r\n            // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\r\n            var id = this.state.newid;\r\n            //console.log('NEW ID: ', id);\r\n            this.messages.show({severity: 'success', summary: 'Success', detail: 'Customer Added!'});\r\n            const db = firebase.database().ref()\r\n            //updating id count in firebase and then updating state variable\r\n            db.child('/idcount').set(this.state.idcount+1);\r\n            db.child('/idcount').once('value')\r\n                .then(snapshot => {\r\n                    this.setState({idcount: snapshot.val()})\r\n                    console.log('state var idcount: ', this.state.idcount);\r\n                    //idNum = snapshot.val();\r\n                    console.log('id from firebase: ', snapshot.val());\r\n                });\r\n\r\n            const fullname = this.state.newfirstname + ' ' + this.state.newlastname;\r\n            const email = this.state.newemail\r\n            const phone = this.state.newphone\r\n            const reshall = this.state.newreshall\r\n            const maxweight = this.state.newmax\r\n            const plan = this.state.newplanyear+this.state.newplanquarter\r\n            db.child('/customers/'+id).once(\"value\")\r\n                .then(snapshot => {\r\n                    if(!snapshot.val()) {\r\n                        db.child('/customers/'+id+'/activestatus').set(\"active\");\r\n                        db.child('/customers/'+id+'/bag-condition').set(\"good\");\r\n                        db.child('/customers/'+id+'/bag-missing').set(\"false\");\r\n                        db.child('/customers/'+id+'/detergent').set('unscented');\r\n                        db.child('/customers/'+id+'/email').set(email);\r\n                        db.child('/customers/'+id+'/fabric_softener').set('No');\r\n                        db.child('/customers/'+id+'/id').set(id);\r\n                        db.child('/customers/'+id+'/last_status_updated').set('N/A');\r\n                        db.child('/customers/'+id+'/last_weight_updated').set('N/A');\r\n                        db.child('/customers/'+id+'/laundrystatus').set('out-of-service');\r\n                        db.child('/customers/'+id+'/maxweight').set(maxweight);\r\n                        db.child('/customers/'+id+'/name').set(fullname);\r\n                        db.child('/customers/'+id+'/phone').set(phone);\r\n                        db.child('/customers/'+id+'/plan').set(plan);\r\n                        db.child('/customers/'+id+'/reshall').set(reshall);\r\n                        db.child('/customers/'+id+'/weekweight').set(\"N/A\");\r\n                        db.child('/customers/'+id+'/weightstatus').set(\"N/A\");\r\n\r\n                    }\r\n                })\r\n\r\n            this.setState({newfirstname: ''});\r\n            this.setState({newlastname: ''});\r\n            this.setState({ newid: '' });\r\n            this.setState({ newplanyear: ''});\r\n            this.setState({ newplanquarter: '' });\r\n            this.setState({ newmax: '' });\r\n            this.setState({ newreshall: '' });\r\n            this.setState({ newphone: '' });\r\n            this.setState({ newemail: '' });\r\n            //const curr  = await this.resetNewInfo();\r\n       \r\n            //console.log('reset info: ', this.state.newfirstname);\r\n            //document.getElementById(\"form\").reset();\r\n        }\r\n        else {\r\n            this.messages.show({severity: \"error\", summary: \"Missing Fields\", detail: \"Please enter all information\"});\r\n        }\r\n\r\n    }\r\n\r\n    // displayPlanQuarters(customerPlan) {\r\n    //     if (customerPlan) {\r\n\r\n    //         if (customerPlan === 'F') {\r\n    //             const result = 'Fall Quarter';\r\n    //             return result;\r\n    //         }\r\n    //         else if (customerPlan === 'W') {\r\n    //             const result = 'Winter Quarter' ;\r\n    //             return result;\r\n    //         }\r\n    //         else if (customerPlan === 'S') {\r\n    //             const result = 'Spring Quarter' ;\r\n    //             return result;\r\n    //         }\r\n    //         else if (customerPlan === 'W-S') {\r\n    //             const result = 'Winter/Spring Quarter' ;\r\n    //             return result;\r\n    //         }\r\n    //         else if (customerPlan === 'F-W-S') {\r\n    //             const result = 'Full Year' ;\r\n    //             return result;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    /* --------------- Filters ---------------- */\r\n    componentDidMount() {\r\n        const customerArray = [];\r\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                customerArray.push(childSnapshot.toJSON());\r\n            });\r\n        });\r\n        this.setState({ customers: customerArray });\r\n        this.setState({ bulk_orders: customerArray });\r\n        const orderArray = [];\r\n        firebase.database().ref('/orders').on('value', function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                orderArray.push(childSnapshot.toJSON());\r\n            });\r\n        });\r\n        this.setState({ orders: orderArray });\r\n        //var idNum = 0;\r\n        firebase.database().ref('/idcount').once('value')\r\n            .then(snapshot => {\r\n                this.setState({idcount: snapshot.val()})\r\n                console.log('state var idcount: ', this.state.idcount);\r\n                //idNum = snapshot.val();\r\n                console.log('id from firebase: ', snapshot.val());\r\n            });\r\n        //console.log('var idNum: ', idNum);\r\n        //this.setState({idcount: idNum});\r\n    }\r\n\r\n    render() {\r\n            var header = <div style={{ textAlign: 'left' }}></div>\r\n            var customer = this.state.selectedCustomer\r\n            //var history = this.getCustomerHistory(customer)\r\n\r\n            return (\r\n            <div className=\"card\" id=\"form\">\r\n                <h1>Add New Order Inquiry</h1>\r\n                <p>Use this form to enter all information about a new order or order inquiry</p>\r\n\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">Name</label>\r\n        <InputText value={this.state.name} id=\"firstname\" type=\"text\" onChange={(e) => { this.onNameValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"lastname6\">Organization</label>\r\n        <InputText value={this.state.organization} id=\"lastname\" type=\"text\" onChange={(e) => { this.onOrganizationValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">Blank</label>\r\n        <InputText value={this.state.blank} id=\"blank\" type=\"text\" onChange={(e) => { this.onBlankValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"firstname6\">Email</label>\r\n        <InputText value={this.state.email} id=\"newemail\" type=\"text\" onChange={(e) => { this.onEmailValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"firstname6\">Phone</label>\r\n        <InputText value={this.state.phone} id=\"newphone\" type=\"text\" onChange={(e) => { this.onPhoneValueChange(e.target.value); }} placeholder='Type Phone Number or \"NA\"'/>\r\n    </div>\r\n\r\n\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"address\">Address</label>\r\n        <InputText value={this.state.address} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onAddressValueChange(e.target.value); }}/>\r\n\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"lastname6\">City</label>\r\n        <InputText value={this.state.city} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onCityValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"city\">State</label>\r\n        <InputText value={this.state.state} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onStateValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"state\">Postal Code</label>\r\n        <InputText value={this.state.postal_code} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onPostalCodeValueChange(e.target.value); }}/>    </div>\r\n\r\n\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">Tax-Exempt</label>\r\n        <Dropdown value={this.state.tax_exempt} options={this.state.planYesNo} onChange={(e) => { this.onTaxExemptValueChange(e.target.value); }} placeholder='Select Yes or No'/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"lastname6\">Design</label>\r\n        <Dropdown value={this.state.design} options={this.state.planYesNo} onChange={(e) => { this.onDesignValueChange(e.target.value); }} placeholder='Select Yes or No'/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstnames6\">Assigned Ink Tank Team Member</label>\r\n        <Dropdown  value={this.state.team_member} options={this.state.planTeamMember} onChange={(e) => {this.onTeamMemberValueChange(e.target.value);}} placeholder='Select Team Member'/>\r\n\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">Quantity</label>\r\n        <InputText value={this.state.quantity} id=\"quantity\" type=\"text\" onChange={(e) => { this.onQuantityValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"lastname6\">Order Quote</label>\r\n        <InputText value={this.state.order_quote} id=\"order_quote\" type=\"text\" onChange={(e) => { this.onOrderQuoteValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">Final Total</label>\r\n        <InputText value={this.state.final_total} id=\"final_total\" type=\"text\" onChange={(e) => { this.onFinalTotalValueChange(e.target.value); }} />\r\n    </div>\r\n    \r\n    \r\n    <div className = \"p-field p-col-12\">\r\n    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} label=\"ADD ORDER\" onClick={() => {this.addCustomer()}} />\r\n    </div>\r\n    <div className = \"p-field p-col-12\">\r\n    <Messages ref={(el) => this.messages = el}></Messages>\r\n    </div>\r\n\r\n\r\n</div>\r\n</div>\r\n            );\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}