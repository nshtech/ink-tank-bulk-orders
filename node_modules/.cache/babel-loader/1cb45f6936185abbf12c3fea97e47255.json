{"ast":null,"code":"var _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderSheet.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Growl } from 'primereact/growl';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class OrderSheet extends Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: [],\n      orders: [],\n      selectedStatus: null,\n      editing: false\n    };\n    this.edit = this.edit.bind(this);\n    this.save = this.save.bind(this);\n    this.export = this.export.bind(this);\n    this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n    this.generalEditor = this.generalEditor.bind(this);\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n  /* --------------- Editing ---------------- */\n\n\n  edit() {\n    this.setState({\n      editing: true\n    });\n    this.growl.show({\n      severity: 'info',\n      summary: 'Editing Enabled',\n      detail: 'Save changes before continuing'\n    });\n  }\n\n  save() {\n    this.setState({\n      editing: false\n    });\n    this.growl.clear();\n  }\n\n  onEditorValueChange(props, value) {\n    firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value);\n    let updatedCustomers = [...props.value];\n    updatedCustomers[props.rowIndex][props.field] = value;\n    this.setState({\n      customers: updatedCustomers\n    });\n    console.log(props);\n  }\n\n  inputTextEditor(props, field) {\n    return /*#__PURE__*/_jsxDEV(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChange(props, e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  generalEditor(props) {\n    return this.inputTextEditor(props, ' ');\n  }\n\n  phoneValidator(props) {\n    let value = props.rowData[props.field];\n    return value[3] === '-' && value.length === 12;\n  }\n\n  emailValidator(props) {\n    let value = props.rowData[props.field];\n    return value && value.length > 0;\n  }\n  /* --------------- Filters ---------------- */\n\n\n  statusBodyTemplate(rowData) {\n    var laundryStatusDisplay = {\n      'picked-up': 'picked up',\n      'delivered-to-SH': 'delivered to SH',\n      'delivered-to-dorm': 'delivered to dorm',\n      'out-of-service': 'out of service',\n      'bag-missing': 'bag missing'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.laundrystatus,\n      children: laundryStatusDisplay[rowData.laundrystatus]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  }\n\n  weightBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.weightstatus,\n      children: rowData.weightstatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderStatusFilter() {\n    var statuses = [{\n      label: 'Picked Up',\n      value: 'picked-up'\n    }, {\n      label: 'Out of Service',\n      value: 'out-of-service'\n    }, {\n      label: 'Delivered to SH',\n      value: 'delivered-to-SH'\n    }, {\n      label: 'Delivered to Dorm',\n      value: 'delivered-to-dorm'\n    }, {\n      label: 'Bag Missing',\n      value: 'bag-missing'\n    }];\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: this.state.selectedStatus,\n      options: statuses,\n      onChange: this.onStatusFilterChange,\n      showClear: true,\n      placeholder: \"Select a Status\",\n      className: \"p-column-filter\",\n      style: {\n        maxWidth: 200,\n        minWidth: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n  onStatusFilterChange(event) {\n    this.dt.filter(event.value, 'laundrystatus', 'equals');\n    this.setState({\n      selectedStatus: event.value\n    });\n  }\n\n  componentDidMount() {\n    const customerArray = [];\n    firebase.database().ref('/customers').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        customerArray.push(childSnapshot.toJSON());\n      });\n    });\n    this.setState({\n      customers: customerArray\n    });\n    const orderArray = [];\n    firebase.database().ref('/orders').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        orderArray.push(childSnapshot.toJSON());\n      });\n    });\n    this.setState({\n      orders: orderArray\n    });\n  }\n\n  render() {\n    const statusFilter = this.renderStatusFilter();\n    /* --------------- RETURN ---------------- */\n\n    /* ---------------- edit mode ------------*/\n\n    var header = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 22\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Growl, {\n        ref: el => this.growl = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Order Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All members of the RezLaundry team should have read and write access to this database.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          value: this.state.orders,\n          header: header,\n          ref: el => {\n            this.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"date\",\n            header: \"Date\",\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search by date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"id\",\n            header: \"ID\",\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search by ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"weight\",\n            header: \"Weight\",\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search by weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"weightstatus\",\n            header: \"Overweight\",\n            sortable: true,\n            body: this.weightBodyTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"laundrystatus\",\n            header: \"Status\",\n            sortable: true,\n            body: this.statusBodyTemplate,\n            filter: true,\n            filterElement: statusFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/OrderSheet.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","Growl","firebase","OrderSheet","constructor","state","customers","orders","selectedStatus","editing","edit","bind","save","export","onStatusFilterChange","generalEditor","dt","exportCSV","setState","growl","show","severity","summary","detail","clear","onEditorValueChange","props","value","database","ref","rowData","id","field","set","updatedCustomers","rowIndex","console","log","inputTextEditor","e","target","phoneValidator","length","emailValidator","statusBodyTemplate","laundryStatusDisplay","laundrystatus","weightBodyTemplate","weightstatus","renderStatusFilter","statuses","label","maxWidth","minWidth","event","filter","componentDidMount","customerArray","on","snapshot","forEach","childSnapshot","push","toJSON","orderArray","render","statusFilter","header","textAlign","el","marginBottom","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\nimport { Growl } from 'primereact/growl';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class OrderSheet extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            orders: [],\n            selectedStatus: null,\n            editing: false\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n\n        this.generalEditor = this.generalEditor.bind(this);\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n    /* --------------- Editing ---------------- */\n    edit() {\n        this.setState({ editing: true });\n        this.growl.show({ severity: 'info', summary: 'Editing Enabled', detail: 'Save changes before continuing' });\n    }\n\n    save() {\n        this.setState({ editing: false });\n        this.growl.clear();\n    }\n\n    onEditorValueChange(props, value) {\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value)\n        let updatedCustomers = [...props.value];\n        updatedCustomers[props.rowIndex][props.field] = value;\n        this.setState({ customers: updatedCustomers });\n        console.log(props)\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    generalEditor(props) {\n        return this.inputTextEditor(props, ' ');\n    }\n\n    phoneValidator(props) {\n        let value = props.rowData[props.field]\n        return value[3] === '-' && value.length === 12;\n    }\n    emailValidator(props) {\n        let value = props.rowData[props.field]\n        return value && value.length > 0;\n    }\n\n    /* --------------- Filters ---------------- */\n    statusBodyTemplate(rowData) {\n        var laundryStatusDisplay = {\n            'picked-up': 'picked up',\n            'delivered-to-SH': 'delivered to SH',\n            'delivered-to-dorm': 'delivered to dorm',\n            'out-of-service': 'out of service',\n            'bag-missing': 'bag missing'\n        }\n        return <span className={rowData.laundrystatus}>{laundryStatusDisplay[rowData.laundrystatus]}</span>\n    }\n\n    weightBodyTemplate(rowData) {\n        return <span className={rowData.weightstatus}>{rowData.weightstatus}</span>;\n    }\n\n    renderStatusFilter() {\n        var statuses = [\n            { label: 'Picked Up', value: 'picked-up' },\n            { label: 'Out of Service', value: 'out-of-service' },\n            { label: 'Delivered to SH', value: 'delivered-to-SH' },\n            { label: 'Delivered to Dorm', value: 'delivered-to-dorm' },\n            { label: 'Bag Missing', value: 'bag-missing' }\n        ];\n        return (\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n                showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }} />\n        );\n    }\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'laundrystatus', 'equals');\n        this.setState({ selectedStatus: event.value });\n    }\n\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/customers').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ customers: customerArray });\n        const orderArray = [];\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                orderArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ orders: orderArray });\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n        /* --------------- RETURN ---------------- */\n        /* ---------------- edit mode ------------*/\n        var header = <div style={{ textAlign: 'left' }}></div>;\n        return (\n            <div>\n                <Growl ref={(el) => this.growl = el} />\n                <div className=\"card\">\n                    <h1>Order Database</h1>\n                    <p>All members of the RezLaundry team should have read and write access to this database.</p>\n                    <DataTable value={this.state.orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                        <Column field=\"date\" header=\"Date\" sortable={true} filter filterPlaceholder=\"Search by date\"/>\n                        <Column field=\"id\" header=\"ID\" sortable={true} filter filterPlaceholder=\"Search by ID\"/>\n                        <Column field=\"weight\" header=\"Weight\" sortable={true} filter filterPlaceholder=\"Search by weight\"/>\n                        <Column field=\"weightstatus\" header=\"Overweight\" sortable={true} body={this.weightBodyTemplate} />\n                        <Column field=\"laundrystatus\" header=\"Status\" sortable={true} body={this.statusBodyTemplate} filter filterElement={statusFilter}/>\n                    </DataTable>\n                </div>\n            </div>\n        )\n\n    }\n}"]},"metadata":{},"sourceType":"module"}