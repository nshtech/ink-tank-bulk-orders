{"ast":null,"code":"import _defineProperty from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/BagTracker.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var BagTracker = /*#__PURE__*/function (_Component) {\n  _inherits(BagTracker, _Component);\n\n  var _super = _createSuper(BagTracker);\n\n  function BagTracker() {\n    var _this;\n\n    _classCallCheck(this, BagTracker);\n\n    _this = _super.call(this);\n    _this.loadInitialState = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var customerArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              customerArray = [];\n              firebase.database().ref('/customers').on('value', function (snapshot) {\n                snapshot.forEach(function (childSnapshot) {\n                  if (childSnapshot.val().activestatus === 'active') {\n                    customerArray.push(childSnapshot.toJSON());\n                  }\n                });\n              });\n\n              _this.setState({\n                customers: customerArray\n              });\n\n              _this.setState({\n                loading: false\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      customers: [],\n      selectedStatus: null,\n      selectedReshall: null,\n      editing: false,\n      loading: true,\n      selectedCustomers: null\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.export = _this.export.bind(_assertThisInitialized(_this));\n    _this.onStatusFilterChange = _this.onStatusFilterChange.bind(_assertThisInitialized(_this));\n    _this.onReshallFilterChange = _this.onReshallFilterChange.bind(_assertThisInitialized(_this));\n    _this.bagStatusEditor = _this.bagStatusEditor.bind(_assertThisInitialized(_this));\n    _this.displaySelection = _this.displaySelection.bind(_assertThisInitialized(_this));\n    _this.loadInitialState = _this.loadInitialState.bind(_assertThisInitialized(_this));\n    _this.generalEditor = _this.generalEditor.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BagTracker, [{\n    key: \"export\",\n    value: function _export() {\n      this.dt.exportCSV();\n    }\n    /* --------------- Editing ---------------- */\n\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this.setState({\n        editing: false\n      });\n    }\n  }, {\n    key: \"updateWeightStatus\",\n    value: function updateWeightStatus(props, value, currDate) {\n      console.log(this.state.customers[props.rowIndex]); // console.log(props.rowIndex)\n      //if (value > props.rowData.maxweight) {\n      //if (value > firebase.database().ref('/customers/'+props.rowData.id+'/maxweight')) {\n\n      console.log('value: ', value);\n      console.log('maxweight comparison: ', parseInt(this.state.customers[props.rowIndex].maxweight));\n\n      if (parseFloat(value) > parseFloat(this.state.customers[props.rowIndex].maxweight)) {\n        var over = parseFloat(value) - parseFloat(this.state.customers[props.rowIndex].maxweight);\n        console.log('marking as overweight.');\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + 'weightstatus').set('overweight');\n        /*let temp = firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages')\n        temp.once('value', (snapshot) => {\n            let total = snapshot.val()+over\n            firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages').set(total)\n        })*/\n\n        var updatedCustomers = this.state.customers;\n        updatedCustomers[props.rowIndex][props.field] = value;\n        updatedCustomers[props.rowIndex]['weightstatus'] = 'overweight'; //updatedCustomers[props.rowIndex]['quarter-overages'] += parseFloat(value);\n        // this.setState({ customers: updatedCustomers });\n\n        return value;\n      } else {\n        console.log('marking as underweight');\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + 'weightstatus').set('underweight');\n        var _updatedCustomers = this.state.customers;\n        _updatedCustomers[props.rowIndex][props.field] = value;\n        _updatedCustomers[props.rowIndex]['weightstatus'] = 'underweight'; // this.setState({ customers: updatedCustomers });\n\n        return value;\n      }\n    }\n  }, {\n    key: \"onEditorValueChange\",\n    value: function () {\n      var _onEditorValueChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props, value) {\n        var db, currWeight, currDay, currMonth, currYear, currDate, fullDate, currTime, curr;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value);\n                db = firebase.database().ref();\n                currWeight = value;\n                currDay = new Date().getDate();\n                currMonth = new Date().getMonth() + 1;\n\n                if (currMonth < 10) {\n                  currMonth = '0' + currMonth;\n                }\n\n                if (currDay < 10) {\n                  currDay = '0' + currDay;\n                }\n\n                currYear = new Date().getFullYear();\n                currDate = currYear + '-' + currMonth + '-' + currDay;\n                fullDate = new Date().toDateString();\n                currTime = new Date().toLocaleTimeString('it-IT');\n                db.child('/orders/' + currDate + props.rowData.id).once(\"value\").then(function (snapshot) {\n                  if (!snapshot.val()) {\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id).set(0);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weight').set(currWeight);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/id').set(props.rowData.id);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                    db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n                  }\n\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/date').set(currDate + ' ' + currTime);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weight').set(currWeight);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/id').set(props.rowData.id);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                  db.child('/orders/' + currDate + ' ' + currTime + ' - ' + props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n                });\n                firebase.database().ref('/customers/' + props.rowData.id + '/last_weight_updated').set(currDate + ' ' + currTime);\n                _context2.next = 15;\n                return this.updateWeightStatus(props, value, currDate);\n\n              case 15:\n                curr = _context2.sent;\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function onEditorValueChange(_x, _x2) {\n        return _onEditorValueChange.apply(this, arguments);\n      }\n\n      return onEditorValueChange;\n    }()\n  }, {\n    key: \"inputTextEditor\",\n    value: function inputTextEditor(props, field) {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(InputText, {\n        type: \"text\",\n        value: props.rowData[field],\n        style: {\n          maxWidth: 100\n        },\n        onChange: function onChange(e) {\n          _this2.onEditorValueChange(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"generalEditor\",\n    value: function generalEditor(props) {\n      return this.inputTextEditor(props, ' ');\n    } // onRowEditInit(event) {\n    //     this.clonedCars[event.data.vin] = { ...event.data };\n    // }\n    // onRowEditSave(event) {\n    //     if (this.onRowEditorValidator(event.data)) {\n    //         delete this.clonedCars[event.data.vin];\n    //         this.growl.show({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\n    //     }\n    //     else {\n    //         this.growl.show({ severity: 'error', summary: 'Error', detail: 'Brand is required' });\n    //     }\n    // }\n    // onRowEditCancel(event) {\n    //     let cars = [...this.state.cars2];\n    //     cars[event.index] = this.clonedCars[event.data.vin];\n    //     delete this.clonedCars[event.data.vin];\n    //     this.setState({\n    //         cars2: cars\n    //     })\n    // }\n\n  }, {\n    key: \"bagStatusEditor\",\n    value: function bagStatusEditor(allcustomers, currentcustomers, newstatus) {\n      var updatedCustomers = _toConsumableArray(allcustomers);\n\n      var db = firebase.database().ref();\n      var currDay = new Date().getDate();\n      var currMonth = new Date().getMonth() + 1;\n\n      if (currMonth < 10) {\n        currMonth = '0' + currMonth;\n      }\n\n      if (currDay < 10) {\n        currDay = '0' + currDay;\n      }\n\n      var currYear = new Date().getFullYear();\n      var currDate = currYear + '-' + currMonth + '-' + currDay; //var currDate = new Date().toDateString();\n\n      var currTime = new Date().toLocaleTimeString('it-IT');\n\n      if (currentcustomers) {\n        var ids = Object.keys(currentcustomers).map(function (key) {\n          return currentcustomers[key].id;\n        });\n        updatedCustomers.map(function (each) {\n          if (ids.includes(each.id)) {\n            each.laundrystatus = newstatus;\n\n            if (newstatus == 'out-of-service') {\n              each.weightstatus = 'N/A';\n              each.weekweight = 'N/A';\n              db.child('/customers/' + each.id + '/weekweight').set('N/A');\n              db.child('/customers/' + each.id + '/weightstatus').set('N/A');\n            }\n\n            firebase.database().ref('/customers/' + each.id + '/last_status_updated').set(currDate + ' ' + currTime);\n            db.child('/orders/' + currDate + each.id).once(\"value\").then(function (snapshot) {\n              if (!snapshot.val()) {\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id).set(0);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weight').set(each.weekweight);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/maxweight').set(each.maxweight);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/id').set(each.id);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/laundrystatus').set(each.laundrystatus);\n                db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weightstatus').set(each.weightstatus);\n              }\n\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/date').set(currDate + ' ' + currTime);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weight').set(each.weekweight);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/maxweight').set(each.maxweight);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/id').set(each.id);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/laundrystatus').set(each.laundrystatus);\n              db.child('/orders/' + currDate + ' ' + currTime + ' - ' + each.id + '/weightstatus').set(each.weightstatus);\n            });\n          }\n        });\n        this.setState({\n          customers: updatedCustomers\n        });\n      }\n\n      console.log('bagStatusEditor currentcustomers: ', currentcustomers);\n      this.dothisfirst(currentcustomers, newstatus);\n    }\n  }, {\n    key: \"dothisfirst\",\n    value: function dothisfirst(currentcustomers, newstatus) {\n      console.log('currentcustomers: ', currentcustomers);\n      console.log('newstatus: ', newstatus);\n\n      if (currentcustomers) {\n        var ids = Object.keys(currentcustomers).map(function (key) {\n          return currentcustomers[key].id;\n        });\n        console.log('ids: ', ids);\n        var query = firebase.database().ref(\"customers\").orderByKey();\n        query.once(\"value\").then(function (snapshot) {\n          var counter = 0;\n          snapshot.forEach(function (childSnapshot) {\n            var key = childSnapshot.key;\n\n            if (ids.includes(key)) {\n              var key = childSnapshot.key;\n              firebase.database().ref('/customers/' + key + '/' + \"laundrystatus\").set(newstatus);\n              console.log('currentcustomers in forEach: ', currentcustomers);\n\n              if (newstatus === 'delivered-to-SH' && parseFloat(currentcustomers[counter].weekweight) > parseFloat(currentcustomers[counter].maxweight)) {\n                firebase.database().ref('/customers/' + key + '/' + \"quarter_overages\").transaction(function (currOverages) {\n                  //return currOverages+1;\n                  return currOverages + parseFloat(currentcustomers[counter].weekweight) - parseFloat(currentcustomers[counter].maxweight);\n                });\n              }\n\n              counter = counter + 1;\n            }\n          });\n        });\n      }\n\n      return currentcustomers;\n    }\n  }, {\n    key: \"displaySelection\",\n    value: function displaySelection(data) {\n      if (this.state.editing && (!data || data.length === 0)) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 20\n          }\n        }, \"No Selection\");\n      }\n    }\n    /* --------------- Filters ---------------- */\n    //dropdown for laundrystats\n\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      var laundryStatusDisplay = {\n        'picked-up': 'picked up',\n        'delivered-to-SH': 'delivered to SH',\n        'delivered-to-dorm': 'delivered to dorm',\n        'out-of-service': 'out of service',\n        'bag-missing': 'bag missing',\n        'start-of-quarter': 'start of quarter'\n      };\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.laundrystatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 16\n        }\n      }, laundryStatusDisplay[rowData.laundrystatus]);\n    }\n  }, {\n    key: \"renderStatusFilter\",\n    value: function renderStatusFilter() {\n      var statuses = [{\n        label: 'Picked Up',\n        value: 'picked-up'\n      }, {\n        label: 'Out of Service',\n        value: 'out-of-service'\n      }, {\n        label: 'Delivered to SH',\n        value: 'delivered-to-SH'\n      }, {\n        label: 'Delivered to Dorm',\n        value: 'delivered-to-dorm'\n      }, {\n        label: 'Bag Missing',\n        value: 'bag-missing'\n      }, {\n        label: 'Start of Quarter',\n        value: 'start-of-quarter'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedStatus,\n        options: statuses,\n        onChange: this.onStatusFilterChange,\n        showClear: true,\n        placeholder: \"Select a Status\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"weightBodyTemplate\",\n    value: function weightBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.weightstatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 16\n        }\n      }, rowData.weightstatus);\n    }\n  }, {\n    key: \"onStatusFilterChange\",\n    value: function onStatusFilterChange(event) {\n      this.dt.filter(event.value, 'laundrystatus', 'equals');\n      this.setState({\n        selectedStatus: event.value\n      });\n    } //dropdown for reshall\n\n  }, {\n    key: \"reshallBodyTemplate\",\n    value: function reshallBodyTemplate(rowData) {\n      var _reshallDisplay;\n\n      var reshallDisplay = (_reshallDisplay = {\n        '560 Lincoln': '560 Lincoln',\n        '720 Emerson': '720 Emerson',\n        '1715 Chicago Ave': '1715 Chicago Ave',\n        '1838 Chicago': '1838 Chicago',\n        '1856 Orrington': '1856 Orrington',\n        '2303 Sheridan': '2303 Sheridan',\n        'Ayers': 'Ayers',\n        'Allison': 'Allison',\n        'Bobb': 'Bobb',\n        'Chapin': 'Chapin',\n        'East Fairchild': 'East Fairchild',\n        'Elder': 'Elder',\n        'West Fairchild': 'West Fairchild',\n        'Foster-Walker': 'Foster-Walker',\n        'Goodrich': 'Goodrich',\n        'Hobart': 'Hobart',\n        'Jones': 'Jones',\n        'Kemper': 'Kemper',\n        'McCulloch': 'McCulloch',\n        'PARC': 'PARC (North Mid Quads)',\n        'Rogers House': 'Rogers House',\n        'Sargent': 'Sargent',\n        'SMQ': 'Shepard Residential College (South Mid Quads)',\n        'Shepard': 'Shepard',\n        'Slivka': 'Slivka',\n        'Willard': 'Willard',\n        'Delta Gamma': 'Delta Gamma',\n        'Kappa Kappa Gamma': 'Kappa Kappa Gamma'\n      }, _defineProperty(_reshallDisplay, \"Foster-Walker\", 'Foster-Walker'), _defineProperty(_reshallDisplay, 'Zeta Beta Tau (ZBT)', 'Zeta Beta Tau (ZBT)'), _reshallDisplay);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.reshall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 18\n        }\n      }, reshallDisplay[rowData.reshall]);\n    }\n  }, {\n    key: \"renderReshallFilter\",\n    value: function renderReshallFilter() {\n      var reshalls = [{\n        label: '560 Lincoln',\n        value: '560 Lincoln'\n      }, {\n        label: '720 Emerson',\n        value: '720 Emerson'\n      }, {\n        label: '1715 Chicago',\n        value: '1715 Chicago'\n      }, {\n        label: '1838 Chicago',\n        value: '1838 Chicago'\n      }, {\n        label: '1856 Orrington',\n        value: '1856 Orrington'\n      }, {\n        label: '2303 Sheridan',\n        value: '2303 Sheridan'\n      }, {\n        label: 'Ayers',\n        value: 'Ayers'\n      }, {\n        label: 'Allison',\n        value: 'Allison'\n      }, {\n        label: 'Bobb',\n        value: 'Bobb'\n      }, {\n        label: 'Chapin',\n        value: 'Chapin'\n      }, {\n        label: 'East Fairchild',\n        value: 'East Fairchild'\n      }, {\n        label: 'Elder',\n        value: 'Elder'\n      }, {\n        label: 'West Fairchild',\n        value: 'West Fairchild'\n      }, {\n        label: 'Foster-Walker',\n        value: 'Foster-Walker'\n      }, {\n        label: 'Goodrich',\n        value: 'Goodrich'\n      }, {\n        label: 'Hobart',\n        value: 'Hobart'\n      }, {\n        label: 'Jones',\n        value: 'Jones'\n      }, {\n        label: 'Kemper',\n        value: 'Kemper'\n      }, {\n        label: 'McCulloch',\n        value: 'McCulloch'\n      }, {\n        label: 'PARC (North Mid Quads)',\n        value: 'PARC'\n      }, {\n        label: 'Rogers House',\n        value: 'Rogers House'\n      }, {\n        label: 'Sargent',\n        value: 'Sargent'\n      }, {\n        label: 'Shepard Residential College (South Mid Quads)',\n        value: 'SMQ'\n      }, {\n        label: 'Shepard',\n        value: 'Shepard'\n      }, {\n        label: 'Slivka',\n        value: 'Slivka'\n      }, {\n        label: 'Willard',\n        value: 'Willard'\n      }, {\n        label: 'Delta Gamma',\n        value: 'Delta Gamma'\n      }, {\n        label: 'Kappa Kappa Gamma',\n        value: 'Kappa Kappa Gamma'\n      }, {\n        label: 'Foster-Walker',\n        value: 'Foster-Walker'\n      }, {\n        label: 'Zeta Beta Tau (ZBT)',\n        value: 'Zeta Beta Tau (ZBT)'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedReshall,\n        options: reshalls,\n        onChange: this.onReshallFilterChange,\n        showClear: true,\n        placeholder: \"Select a Dorm\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"onReshallFilterChange\",\n    value: function onReshallFilterChange(event) {\n      this.dt.filter(event.value, 'reshall', 'equals');\n      this.setState({\n        selectedReshall: event.value\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadInitialState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var statusFilter = this.renderStatusFilter();\n      var reshallFilter = this.renderReshallFilter();\n      var allcustomers = this.state.customers;\n      var currentcustomers = this.state.selectedCustomers;\n      /* --------------- RETURN ---------------- */\n\n      /* ---------------- edit mode ------------*/\n\n      if (this.state.editing) {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            marginBottom: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: 'white',\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-save\",\n          iconPos: \"left\",\n          label: \"SAVE\",\n          onClick: this.save,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#23547B',\n            backgroundColor: '#B3E5FC',\n            borderColor: '#23547B',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"PICKED UP\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'picked-up');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#694382',\n            backgroundColor: '#ECCFFF',\n            borderColor: '#694382',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"SH\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-SH');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#256029',\n            backgroundColor: '#C8E6C9',\n            borderColor: '#256029',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"DORM\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-dorm');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"NO SERVICE\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'out-of-service');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#C63737',\n            backgroundColor: '#FFCDD2',\n            borderColor: '#C63737',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"MISSING\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'bag-missing');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            color: '#474549',\n            backgroundColor: 'lightgrey',\n            borderColor: '#474549',\n            marginRight: 10\n          },\n          icon: \"pi pi-check\",\n          iconPos: \"left\",\n          label: \"START\",\n          onClick: function onClick() {\n            _this3.bagStatusEditor(allcustomers, currentcustomers, 'start-of-quarter');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }\n        })); //loading = {true} loadingIcon = \"pi pi-spinner\"\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"elmid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }\n        }, \"Ink Tank Bulk Order Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }\n        }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }\n        }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.customers,\n          header: header,\n          ref: function ref(el) {\n            _this3.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          footer: this.displaySelection(this.state.selectedCustomers),\n          selection: this.state.selectedCustomers,\n          onSelectionChange: function onSelectionChange(e) {\n            return _this3.setState({\n              selectedCustomers: e.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          selectionMode: \"multiple\",\n          style: {\n            width: '3em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"id\",\n          header: \"ID\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"reshall\",\n          header: \"Residential Hall\",\n          style: {\n            maxWidth: 200\n          },\n          sortable: true,\n          filter: true,\n          filterElement: reshallFilter,\n          body: this.reshallBodyTemplate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"laundrystatus\",\n          header: \"Bag Status\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterElement: statusFilter,\n          body: this.statusBodyTemplate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"weightstatus\",\n          header: \"Weight Status\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          body: this.weightBodyTemplate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"weekweight\",\n          header: \"Bag Weight\",\n          sortable: true,\n          style: {\n            backgroundColor: '#6a09a4',\n            color: 'white',\n            maxWidth: 100\n          },\n          editor: this.generalEditor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 29\n          }\n        }))));\n        /* ---------------- NOT edit mode ------------*/\n      } else {\n        var header = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-external-link\",\n          iconPos: \"left\",\n          label: \"CSV\",\n          onClick: this.export,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          style: {\n            backgroundColor: '#6a09a4',\n            borderColor: '#6a09a4',\n            marginRight: 10\n          },\n          icon: \"pi pi-pencil\",\n          iconPos: \"left\",\n          label: \"EDIT\",\n          onClick: this.edit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }\n        }));\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: \"elmid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }\n        }, \"Rez Ops Bag Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }\n        }, \"This page will be where sales/finance team members can update the status of an order or the team member assigned to it.\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 25\n          }\n        }, \"ONLY individuals running operations should be accessing this page.\"), /*#__PURE__*/React.createElement(DataTable, {\n          value: this.state.customers,\n          header: header,\n          ref: function ref(el) {\n            _this3.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"id\",\n          header: \"ID\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          header: \"Name\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterPlaceholder: \"Search by name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"reshall\",\n          header: \"Residential Hall\",\n          style: {\n            maxWidth: 200\n          },\n          sortable: true,\n          filter: true,\n          filterElement: reshallFilter,\n          body: this.reshallBodyTemplate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"laundrystatus\",\n          header: \"Bag Status\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          filter: true,\n          filterElement: statusFilter,\n          body: this.statusBodyTemplate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"weightstatus\",\n          header: \"Weight Status\",\n          style: {\n            maxWidth: 150\n          },\n          sortable: true,\n          body: this.weightBodyTemplate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"weekweight\",\n          header: \"Bag Weight\",\n          style: {\n            maxWidth: 100\n          },\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return BagTracker;\n}(Component);","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/BagTracker.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","firebase","validator","customerData","BagTracker","loadInitialState","customerArray","database","ref","on","snapshot","forEach","childSnapshot","val","activestatus","push","toJSON","setState","customers","loading","state","selectedStatus","selectedReshall","editing","selectedCustomers","edit","bind","save","export","onStatusFilterChange","onReshallFilterChange","bagStatusEditor","displaySelection","generalEditor","dt","exportCSV","props","value","currDate","console","log","rowIndex","parseInt","maxweight","parseFloat","over","rowData","id","set","updatedCustomers","field","db","currWeight","currDay","Date","getDate","currMonth","getMonth","currYear","getFullYear","fullDate","toDateString","currTime","toLocaleTimeString","child","once","then","laundrystatus","weightstatus","updateWeightStatus","curr","maxWidth","e","onEditorValueChange","target","inputTextEditor","allcustomers","currentcustomers","newstatus","ids","Object","keys","map","key","each","includes","weekweight","dothisfirst","query","orderByKey","counter","transaction","currOverages","data","length","textAlign","laundryStatusDisplay","statuses","label","minWidth","event","filter","reshallDisplay","reshall","reshalls","statusFilter","renderStatusFilter","reshallFilter","renderReshallFilter","header","marginBottom","backgroundColor","borderColor","marginRight","color","el","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","width","reshallBodyTemplate","statusBodyTemplate","weightBodyTemplate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class BagTracker extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            selectedStatus: null,\n            selectedReshall: null,\n            editing: false,\n            loading: true,\n            selectedCustomers: null\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n        this.onReshallFilterChange = this.onReshallFilterChange.bind(this);\n        this.bagStatusEditor = this.bagStatusEditor.bind(this)\n        this.displaySelection = this.displaySelection.bind(this)\n        this.loadInitialState = this.loadInitialState.bind(this)\n        this.generalEditor = this.generalEditor.bind(this);\n\n\n\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n    /* --------------- Editing ---------------- */\n    edit() {\n        this.setState({ editing: true });\n    }\n\n    save() {\n        this.setState({ editing: false });\n    }\n\n\n    updateWeightStatus(props,value, currDate) {\n\n        console.log(this.state.customers[props.rowIndex])\n        // console.log(props.rowIndex)\n\n        //if (value > props.rowData.maxweight) {\n        \n        //if (value > firebase.database().ref('/customers/'+props.rowData.id+'/maxweight')) {\n        console.log('value: ',value);\n        console.log('maxweight comparison: ',parseInt(this.state.customers[props.rowIndex].maxweight));\n        if (parseFloat(value) > parseFloat(this.state.customers[props.rowIndex].maxweight)) {\n            let over = parseFloat(value) - parseFloat(this.state.customers[props.rowIndex].maxweight)\n            console.log('marking as overweight.');\n            firebase.database().ref('/customers/' + props.rowData.id + '/'+'weightstatus').set('overweight')\n            /*let temp = firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages')\n            temp.once('value', (snapshot) => {\n                let total = snapshot.val()+over\n                firebase.database().ref('/customers/' + props.rowData.id + '/' + 'quarter-overages').set(total)\n            })*/\n            let updatedCustomers = this.state.customers;\n            updatedCustomers[props.rowIndex][props.field] = value;\n            updatedCustomers[props.rowIndex]['weightstatus'] = 'overweight';\n            //updatedCustomers[props.rowIndex]['quarter-overages'] += parseFloat(value);\n            // this.setState({ customers: updatedCustomers });\n            return value\n        }\n        else {\n            console.log('marking as underweight');\n            firebase.database().ref('/customers/' + props.rowData.id + '/'+'weightstatus').set('underweight')\n            let updatedCustomers = this.state.customers;\n            updatedCustomers[props.rowIndex][props.field] = value;\n            updatedCustomers[props.rowIndex]['weightstatus'] = 'underweight';\n            // this.setState({ customers: updatedCustomers });\n            return value\n        }\n    }\n\n    async onEditorValueChange(props, value) {\n\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value)\n        const db = firebase.database().ref();\n        var currWeight = value;\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() +1;\n        if (currMonth < 10) {\n            currMonth = '0'+currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-'+currDay;\n        var fullDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n        db.child('/orders/' + currDate + props.rowData.id).once(\"value\")\n            .then(snapshot => {\n                if (!snapshot.val()) {\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id).set(0)\n                    db.child('/orders/' + currDate +' '+currTime+' - '+props.rowData.id + '/weight').set(currWeight);\n                    db.child('/orders/' + currDate+' '+currTime+' - ' + props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/id').set(props.rowData.id);\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                    db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n                }\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/date').set(currDate+' '+ currTime);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weight').set(currWeight);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/maxweight').set(props.rowData.maxweight);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/id').set(props.rowData.id);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/laundrystatus').set(props.rowData.laundrystatus);\n                db.child('/orders/' + currDate +' '+currTime+' - '+ props.rowData.id + '/weightstatus').set(props.rowData.weightstatus);\n\n            })\n        firebase.database().ref('/customers/' + props.rowData.id + '/last_weight_updated').set(currDate + ' ' + currTime)\n        const curr = await this.updateWeightStatus(props,value, currDate);\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} style={{ maxWidth: 100 }} onChange={(e) => { this.onEditorValueChange(props, e.target.value);}}/>\n    }\n\n    generalEditor(props) {\n        return this.inputTextEditor(props, ' ');\n    }\n\n    // onRowEditInit(event) {\n    //     this.clonedCars[event.data.vin] = { ...event.data };\n    // }\n\n    // onRowEditSave(event) {\n    //     if (this.onRowEditorValidator(event.data)) {\n    //         delete this.clonedCars[event.data.vin];\n    //         this.growl.show({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\n    //     }\n    //     else {\n    //         this.growl.show({ severity: 'error', summary: 'Error', detail: 'Brand is required' });\n    //     }\n    // }\n\n    // onRowEditCancel(event) {\n    //     let cars = [...this.state.cars2];\n    //     cars[event.index] = this.clonedCars[event.data.vin];\n    //     delete this.clonedCars[event.data.vin];\n    //     this.setState({\n    //         cars2: cars\n    //     })\n    // }\n\n    bagStatusEditor(allcustomers, currentcustomers, newstatus) {\n        let updatedCustomers = [...allcustomers];\n        const db = firebase.database().ref()\n        var currDay = new Date().getDate();\n        var currMonth = new Date().getMonth() +1;\n        if (currMonth < 10) {\n            currMonth = '0'+currMonth\n        }\n        if (currDay < 10) {\n            currDay = '0' + currDay\n        }\n        var currYear = new Date().getFullYear();\n        var currDate = currYear + '-' + currMonth + '-'+currDay;\n        //var currDate = new Date().toDateString();\n        var currTime = new Date().toLocaleTimeString('it-IT');\n\n        if (currentcustomers) {\n            var ids = Object.keys(currentcustomers).map(function (key) {\n                return currentcustomers[key].id;\n            });\n            updatedCustomers.map(each => {\n                if (ids.includes(each.id)) {\n                    each.laundrystatus = newstatus;\n                    if (newstatus == 'out-of-service') {\n                        each.weightstatus = 'N/A'\n                        each.weekweight = 'N/A'\n                        db.child('/customers/'+each.id+'/weekweight').set('N/A');\n                        db.child('/customers/'+each.id+'/weightstatus').set('N/A');\n                    }\n                    firebase.database().ref('/customers/' + each.id + '/last_status_updated').set(currDate + ' ' + currTime)\n\n                    db.child('/orders/' + currDate + each.id).once(\"value\")\n                        .then(snapshot => {\n                            if (!snapshot.val()) {\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id).set(0)\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weight').set(each.weekweight);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/maxweight').set(each.maxweight);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/id').set(each.id);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/laundrystatus').set(each.laundrystatus);\n                                db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weightstatus').set(each.weightstatus);\n                            }\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/date').set(currDate+' '+ currTime);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weight').set(each.weekweight);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/maxweight').set(each.maxweight);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/id').set(each.id);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/laundrystatus').set(each.laundrystatus);\n                            db.child('/orders/' + currDate +' '+currTime+' - '+ each.id + '/weightstatus').set(each.weightstatus);\n\n                        })\n\n                }\n            })\n            this.setState({ customers: updatedCustomers });\n        }\n        console.log('bagStatusEditor currentcustomers: ',currentcustomers);\n        this.dothisfirst(currentcustomers, newstatus)\n\n    }\n\n\n    dothisfirst(currentcustomers, newstatus) {\n        console.log('currentcustomers: ',currentcustomers);\n        console.log('newstatus: ',newstatus);\n        if (currentcustomers) {\n            var ids = Object.keys(currentcustomers).map(function (key) {\n                return currentcustomers[key].id;\n            });\n            console.log('ids: ',ids);\n            var query = firebase.database().ref(\"customers\").orderByKey();\n            query.once(\"value\")\n                .then(function (snapshot) {\n                    var counter=0;\n                    snapshot.forEach(function (childSnapshot) {\n                        var key = childSnapshot.key;\n                        if (ids.includes(key)) {\n                            var key = childSnapshot.key;\n                            firebase.database().ref('/customers/' + key + '/' + \"laundrystatus\").set(newstatus);\n                            console.log('currentcustomers in forEach: ',currentcustomers);\n                            if (newstatus === 'delivered-to-SH' && parseFloat(currentcustomers[counter].weekweight) > parseFloat(currentcustomers[counter].maxweight)) {\n                                firebase.database().ref('/customers/' + key + '/' + \"quarter_overages\").transaction(function(currOverages) {\n                                    //return currOverages+1;\n                                    return currOverages + parseFloat(currentcustomers[counter].weekweight) - parseFloat(currentcustomers[counter].maxweight);\n                                });\n                            }\n                            counter = counter+1;\n\n                        }\n                    });\n                });\n        }\n        return currentcustomers\n    }\n\n\n    displaySelection(data) {\n        if (this.state.editing && (!data || data.length === 0)) {\n            return <div style={{ textAlign: 'left' }}>No Selection</div>;\n        }\n    }\n\n\n    /* --------------- Filters ---------------- */\n\n//dropdown for laundrystats\n    statusBodyTemplate(rowData) {\n        var laundryStatusDisplay = {\n            'picked-up': 'picked up',\n            'delivered-to-SH': 'delivered to SH',\n            'delivered-to-dorm': 'delivered to dorm',\n            'out-of-service': 'out of service',\n            'bag-missing': 'bag missing',\n            'start-of-quarter': 'start of quarter'\n        }\n        return <span className={rowData.laundrystatus}>{laundryStatusDisplay[rowData.laundrystatus]}</span>\n    }\n\n\n    renderStatusFilter() {\n        var statuses = [\n            { label: 'Picked Up', value: 'picked-up' },\n            { label: 'Out of Service', value: 'out-of-service' },\n            { label: 'Delivered to SH', value: 'delivered-to-SH' },\n            { label: 'Delivered to Dorm', value: 'delivered-to-dorm' },\n            { label: 'Bag Missing', value: 'bag-missing' },\n            { label: 'Start of Quarter', value: 'start-of-quarter' }\n        ];\n\n        return (\n\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n             showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{maxWidth: 200, minWidth: 50}} />\n        );\n    }\n\n    weightBodyTemplate(rowData) {\n        return <span className={rowData.weightstatus}>{rowData.weightstatus}</span>;\n    }\n\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'laundrystatus', 'equals');\n        this.setState({ selectedStatus: event.value });\n    }\n\n\n//dropdown for reshall\n\n    reshallBodyTemplate(rowData) {\n        var reshallDisplay = {\n          '560 Lincoln': '560 Lincoln',\n          '720 Emerson': '720 Emerson',\n            '1715 Chicago Ave': '1715 Chicago Ave',\n          '1838 Chicago': '1838 Chicago',\n          '1856 Orrington': '1856 Orrington',\n          '2303 Sheridan': '2303 Sheridan',\n          'Ayers': 'Ayers',\n          'Allison': 'Allison',\n          'Bobb': 'Bobb',\n          'Chapin': 'Chapin',\n          'East Fairchild': 'East Fairchild',\n          'Elder': 'Elder',\n          'West Fairchild': 'West Fairchild',\n          'Foster-Walker': 'Foster-Walker',\n          'Goodrich': 'Goodrich',\n          'Hobart': 'Hobart',\n          'Jones': 'Jones',\n          'Kemper': 'Kemper',\n          'McCulloch': 'McCulloch',\n          'PARC': 'PARC (North Mid Quads)',\n          'Rogers House': 'Rogers House',\n          'Sargent': 'Sargent',\n          'SMQ': 'Shepard Residential College (South Mid Quads)',\n          'Shepard': 'Shepard',\n          'Slivka': 'Slivka',\n          'Willard':  'Willard',\n          'Delta Gamma': 'Delta Gamma',\n          'Kappa Kappa Gamma': 'Kappa Kappa Gamma',\n          'Foster-Walker': 'Foster-Walker',\n            'Zeta Beta Tau (ZBT)': 'Zeta Beta Tau (ZBT)'\n          }\n          return <span className={rowData.reshall}>{reshallDisplay[rowData.reshall]}</span>\n    }\n\n    renderReshallFilter() {\n        var reshalls = [\n            { label: '560 Lincoln', value: '560 Lincoln' },\n            { label: '720 Emerson', value: '720 Emerson'},\n            { label: '1715 Chicago', value: '1715 Chicago'},\n            { label: '1838 Chicago', value: '1838 Chicago'},\n            { label: '1856 Orrington', value: '1856 Orrington'},\n            { label: '2303 Sheridan', value: '2303 Sheridan'},\n            { label: 'Ayers', value: 'Ayers'},\n            { label: 'Allison', value: 'Allison'},\n            { label: 'Bobb', value: 'Bobb' },\n            { label: 'Chapin', value: 'Chapin'},\n            { label: 'East Fairchild', value: 'East Fairchild'},\n            { label: 'Elder', value: 'Elder'},\n            { label: 'West Fairchild', value: 'West Fairchild'},\n            { label: 'Foster-Walker', value: 'Foster-Walker'},\n            { label: 'Goodrich', value: 'Goodrich'},\n            { label: 'Hobart', value: 'Hobart'},\n            { label: 'Jones', value: 'Jones' },\n            { label: 'Kemper', value: 'Kemper'},\n            { label: 'McCulloch', value: 'McCulloch'},\n            { label: 'PARC (North Mid Quads)', value: 'PARC'},\n            { label: 'Rogers House', value: 'Rogers House' },\n            { label: 'Sargent', value: 'Sargent'},\n            { label: 'Shepard Residential College (South Mid Quads)', value: 'SMQ'},\n            { label: 'Shepard', value: 'Shepard'},\n            { label: 'Slivka', value: 'Slivka'},\n            { label: 'Willard', value: 'Willard'},\n            { label: 'Delta Gamma', value: 'Delta Gamma'},\n            { label: 'Kappa Kappa Gamma', value: 'Kappa Kappa Gamma'},\n            { label: 'Foster-Walker', value: 'Foster-Walker'},\n            { label: 'Zeta Beta Tau (ZBT)', value: 'Zeta Beta Tau (ZBT)'}\n    ];\n\n        return (\n\n            <Dropdown value={this.state.selectedReshall} options={reshalls} onChange={this.onReshallFilterChange}\n             showClear={true} placeholder=\"Select a Dorm\" className=\"p-column-filter\" style={{maxWidth: 200, minWidth: 50}} />\n        );\n    }\n\n\n    onReshallFilterChange(event) {\n        this.dt.filter(event.value, 'reshall', 'equals');\n        this.setState({ selectedReshall: event.value });\n    }\n\n\n\n\n\n\n    loadInitialState = async () => {\n        const customerArray = [];\n        firebase.database().ref('/customers').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                if (childSnapshot.val().activestatus === 'active' ) {\n                    customerArray.push(childSnapshot.toJSON());\n                }\n\n            });\n        });\n        this.setState({ customers: customerArray });\n        this.setState({ loading: false });\n\n    }\n\n    componentWillMount() {\n        this.loadInitialState()\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n        const reshallFilter = this.renderReshallFilter();\n        const allcustomers = this.state.customers;\n        const currentcustomers = this.state.selectedCustomers;\n\n        /* --------------- RETURN ---------------- */\n        /* ---------------- edit mode ------------*/\n        if (this.state.editing) {\n            var header = <div style={{ textAlign: 'left' }}>\n                <div style={{ marginBottom: 10 }}>\n                    <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-save\" iconPos=\"left\" label=\"SAVE\" onClick={this.save}>\n                    </Button>\n                </div>\n                <div>\n                    <Button type=\"button\" style={{ color: '#23547B', backgroundColor: '#B3E5FC', borderColor: '#23547B', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"PICKED UP\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'picked-up')}}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#694382', backgroundColor: '#ECCFFF', borderColor: '#694382', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"SH\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-SH') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#256029', backgroundColor: '#C8E6C9', borderColor: '#256029', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"DORM\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'delivered-to-dorm') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"NO SERVICE\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'out-of-service') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#C63737', backgroundColor: '#FFCDD2', borderColor: '#C63737', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"MISSING\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'bag-missing') }}>\n                    </Button>\n                    <Button type=\"button\" style={{ color: '#474549', backgroundColor: 'lightgrey', borderColor: '#474549', marginRight: 10 }} icon=\"pi pi-check\" iconPos=\"left\" label=\"START\" onClick={() => { this.bagStatusEditor(allcustomers, currentcustomers, 'start-of-quarter') }}>\n                    </Button>\n\n                </div>\n                <div>\n\n                </div>\n            </div>;\n            //loading = {true} loadingIcon = \"pi pi-spinner\"\n            return (\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Ink Tank Bulk Order Tracker</h1>\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <DataTable value={this.state.customers} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true}\n                        editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}\n                        footer={this.displaySelection(this.state.selectedCustomers)} selection={this.state.selectedCustomers} onSelectionChange={e => this.setState({ selectedCustomers: e.value })}>\n                            <Column selectionMode=\"multiple\" style={{ width: '3em' }} />\n                            <Column field=\"id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"reshall\" header=\"Residential Hall\" style={{ maxWidth: 200 }} sortable={true} filter filterElement={reshallFilter} body={this.reshallBodyTemplate}/>\n                            <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate}/>\n                            <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }} sortable={true} body={this.weightBodyTemplate}/>\n\n                            <Column field=\"weekweight\" header=\"Bag Weight\" sortable={true} style={{ backgroundColor: '#6a09a4', color: 'white', maxWidth: 100 }} editor={this.generalEditor}/>\n                        </DataTable>\n                    </div>\n                </div>\n            );\n            /* ---------------- NOT edit mode ------------*/\n        } else {\n            var header = <div style={{ textAlign: 'left' }}>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n                </Button>\n                <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-pencil\" iconPos=\"left\" label=\"EDIT\" onClick={this.edit}>\n                </Button>\n            </div>;\n            return (\n\n                <div id=\"elmid\">\n                    <div className=\"card\">\n                        <h1>Rez Ops Bag Tracker</h1>\n                        <p>This page will be where sales/finance team members can update the status of an order or the team member assigned to it.</p>\n                        <p>ONLY individuals running operations should be accessing this page.</p>\n                        <DataTable value={this.state.customers} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                            <Column field=\"id\" header=\"ID\" sortable={true} />\n                            <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search by name\" />\n                            <Column field=\"reshall\" header=\"Residential Hall\" style={{ maxWidth: 200 }} sortable={true} filter filterElement={reshallFilter} body={this.reshallBodyTemplate}/>\n                            <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate} />\n                            <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }} sortable={true} body={this.weightBodyTemplate}/>\n                            <Column field=\"weekweight\" header=\"Bag Weight\" style={{ maxWidth: 100 }} sortable={true} />\n\n                        </DataTable>\n                    </div>\n                </div>\n            );\n\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}