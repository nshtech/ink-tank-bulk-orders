{"ast":null,"code":"import _toConsumableArray from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/src/components/OrderSheet.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Growl } from 'primereact/growl';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var OrderSheet = /*#__PURE__*/function (_Component) {\n  _inherits(OrderSheet, _Component);\n\n  var _super = _createSuper(OrderSheet);\n\n  function OrderSheet() {\n    var _this;\n\n    _classCallCheck(this, OrderSheet);\n\n    _this = _super.call(this);\n    _this.state = {\n      customers: [],\n      orders: [],\n      selectedStatus: null,\n      editing: false\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.export = _this.export.bind(_assertThisInitialized(_this));\n    _this.onStatusFilterChange = _this.onStatusFilterChange.bind(_assertThisInitialized(_this));\n    _this.generalEditor = _this.generalEditor.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(OrderSheet, [{\n    key: \"export\",\n    value: function _export() {\n      this.dt.exportCSV();\n    }\n    /* --------------- Editing ---------------- */\n\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      });\n      this.growl.show({\n        severity: 'info',\n        summary: 'Editing Enabled',\n        detail: 'Save changes before continuing'\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this.setState({\n        editing: false\n      });\n      this.growl.clear();\n    }\n  }, {\n    key: \"onEditorValueChange\",\n    value: function onEditorValueChange(props, value) {\n      firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value);\n\n      var updatedCustomers = _toConsumableArray(props.value);\n\n      updatedCustomers[props.rowIndex][props.field] = value;\n      this.setState({\n        customers: updatedCustomers\n      });\n      console.log(props);\n    }\n  }, {\n    key: \"inputTextEditor\",\n    value: function inputTextEditor(props, field) {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(InputText, {\n        type: \"text\",\n        value: props.rowData[field],\n        onChange: function onChange(e) {\n          return _this2.onEditorValueChange(props, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"generalEditor\",\n    value: function generalEditor(props) {\n      return this.inputTextEditor(props, ' ');\n    }\n  }, {\n    key: \"phoneValidator\",\n    value: function phoneValidator(props) {\n      var value = props.rowData[props.field];\n      return value[3] === '-' && value.length === 12;\n    }\n  }, {\n    key: \"emailValidator\",\n    value: function emailValidator(props) {\n      var value = props.rowData[props.field];\n      return value && value.length > 0;\n    }\n    /* --------------- Filters ---------------- */\n\n  }, {\n    key: \"statusBodyTemplate\",\n    value: function statusBodyTemplate(rowData) {\n      var laundryStatusDisplay = {\n        'picked-up': 'picked up',\n        'delivered-to-SH': 'delivered to SH',\n        'delivered-to-dorm': 'delivered to dorm',\n        'out-of-service': 'out of service',\n        'bag-missing': 'bag missing'\n      };\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.laundrystatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }\n      }, laundryStatusDisplay[rowData.laundrystatus]);\n    }\n  }, {\n    key: \"weightBodyTemplate\",\n    value: function weightBodyTemplate(rowData) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: rowData.weightstatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }\n      }, rowData.weightstatus);\n    }\n  }, {\n    key: \"renderStatusFilter\",\n    value: function renderStatusFilter() {\n      var statuses = [{\n        label: 'Picked Up',\n        value: 'picked-up'\n      }, {\n        label: 'Out of Service',\n        value: 'out-of-service'\n      }, {\n        label: 'Delivered to SH',\n        value: 'delivered-to-SH'\n      }, {\n        label: 'Delivered to Dorm',\n        value: 'delivered-to-dorm'\n      }, {\n        label: 'Bag Missing',\n        value: 'bag-missing'\n      }];\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.selectedStatus,\n        options: statuses,\n        onChange: this.onStatusFilterChange,\n        showClear: true,\n        placeholder: \"Select a Status\",\n        className: \"p-column-filter\",\n        style: {\n          maxWidth: 200,\n          minWidth: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"onStatusFilterChange\",\n    value: function onStatusFilterChange(event) {\n      this.dt.filter(event.value, 'laundrystatus', 'equals');\n      this.setState({\n        selectedStatus: event.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var customerArray = [];\n      firebase.database().ref('/customers').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          customerArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        customers: customerArray\n      });\n      var orderArray = [];\n      firebase.database().ref('/orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          orderArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        orders: orderArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var statusFilter = this.renderStatusFilter();\n      /* --------------- RETURN ---------------- */\n\n      /* ---------------- edit mode ------------*/\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 22\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Growl, {\n        ref: function ref(el) {\n          return _this3.growl = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, \"Order Database\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"This will show all updates to orders and who was assigned to the order at that time. This will create accountability if an order goes wrong and will help pinpoint issues in orders if they arise.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, \"All members of the InkTank team should have read and write access to this database.\"), /*#__PURE__*/React.createElement(DataTable, {\n        value: this.state.orders,\n        header: header,\n        ref: function ref(el) {\n          _this3.dt = el;\n        },\n        style: {\n          marginBottom: '20px'\n        },\n        responsive: true,\n        autoLayout: true,\n        editMode: \"row\",\n        rowEditorValidator: this.onRowEditorValidator,\n        onRowEditInit: this.onRowEditInit,\n        onRowEditSave: this.onRowEditSave,\n        onRowEditCancel: this.onRowEditCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"date\",\n        header: \"Date\",\n        sortable: true,\n        filter: true,\n        filterPlaceholder: \"Search by date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"id\",\n        header: \"ID\",\n        sortable: true,\n        filter: true,\n        filterPlaceholder: \"Search by ID\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"weight\",\n        header: \"Weight\",\n        sortable: true,\n        filter: true,\n        filterPlaceholder: \"Search by weight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"weightstatus\",\n        header: \"Overweight\",\n        sortable: true,\n        body: this.weightBodyTemplate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"laundrystatus\",\n        header: \"Status\",\n        sortable: true,\n        body: this.statusBodyTemplate,\n        filter: true,\n        filterElement: statusFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return OrderSheet;\n}(Component);","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/src/components/OrderSheet.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","Growl","firebase","OrderSheet","state","customers","orders","selectedStatus","editing","edit","bind","save","export","onStatusFilterChange","generalEditor","dt","exportCSV","setState","growl","show","severity","summary","detail","clear","props","value","database","ref","rowData","id","field","set","updatedCustomers","rowIndex","console","log","e","onEditorValueChange","target","inputTextEditor","length","laundryStatusDisplay","laundrystatus","weightstatus","statuses","label","maxWidth","minWidth","event","filter","customerArray","on","snapshot","forEach","childSnapshot","push","toJSON","orderArray","statusFilter","renderStatusFilter","header","textAlign","el","marginBottom","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel","weightBodyTemplate","statusBodyTemplate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\nimport { Growl } from 'primereact/growl';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class OrderSheet extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            orders: [],\n            selectedStatus: null,\n            editing: false\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n\n        this.generalEditor = this.generalEditor.bind(this);\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n    /* --------------- Editing ---------------- */\n    edit() {\n        this.setState({ editing: true });\n        this.growl.show({ severity: 'info', summary: 'Editing Enabled', detail: 'Save changes before continuing' });\n    }\n\n    save() {\n        this.setState({ editing: false });\n        this.growl.clear();\n    }\n\n    onEditorValueChange(props, value) {\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value)\n        let updatedCustomers = [...props.value];\n        updatedCustomers[props.rowIndex][props.field] = value;\n        this.setState({ customers: updatedCustomers });\n        console.log(props)\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    generalEditor(props) {\n        return this.inputTextEditor(props, ' ');\n    }\n\n    phoneValidator(props) {\n        let value = props.rowData[props.field]\n        return value[3] === '-' && value.length === 12;\n    }\n    emailValidator(props) {\n        let value = props.rowData[props.field]\n        return value && value.length > 0;\n    }\n\n    /* --------------- Filters ---------------- */\n    statusBodyTemplate(rowData) {\n        var laundryStatusDisplay = {\n            'picked-up': 'picked up',\n            'delivered-to-SH': 'delivered to SH',\n            'delivered-to-dorm': 'delivered to dorm',\n            'out-of-service': 'out of service',\n            'bag-missing': 'bag missing'\n        }\n        return <span className={rowData.laundrystatus}>{laundryStatusDisplay[rowData.laundrystatus]}</span>\n    }\n\n    weightBodyTemplate(rowData) {\n        return <span className={rowData.weightstatus}>{rowData.weightstatus}</span>;\n    }\n\n    renderStatusFilter() {\n        var statuses = [\n            { label: 'Picked Up', value: 'picked-up' },\n            { label: 'Out of Service', value: 'out-of-service' },\n            { label: 'Delivered to SH', value: 'delivered-to-SH' },\n            { label: 'Delivered to Dorm', value: 'delivered-to-dorm' },\n            { label: 'Bag Missing', value: 'bag-missing' }\n        ];\n        return (\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n                showClear={true} placeholder=\"Select a Status\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }} />\n        );\n    }\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'laundrystatus', 'equals');\n        this.setState({ selectedStatus: event.value });\n    }\n\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/customers').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ customers: customerArray });\n        const orderArray = [];\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                orderArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ orders: orderArray });\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n        /* --------------- RETURN ---------------- */\n        /* ---------------- edit mode ------------*/\n        var header = <div style={{ textAlign: 'left' }}></div>;\n        return (\n            <div>\n                <Growl ref={(el) => this.growl = el} />\n                <div className=\"card\">\n                    <h1>Order Database</h1>\n                    <p>This will show all updates to orders and who was assigned to the order at that time. This will create accountability if an order goes wrong and will help pinpoint issues in orders if they arise.</p>\n                    <p>All members of the InkTank team should have read and write access to this database.</p>\n                    <DataTable value={this.state.orders} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                        <Column field=\"date\" header=\"Date\" sortable={true} filter filterPlaceholder=\"Search by date\"/>\n                        <Column field=\"id\" header=\"ID\" sortable={true} filter filterPlaceholder=\"Search by ID\"/>\n                        <Column field=\"weight\" header=\"Weight\" sortable={true} filter filterPlaceholder=\"Search by weight\"/>\n                        <Column field=\"weightstatus\" header=\"Overweight\" sortable={true} body={this.weightBodyTemplate} />\n                        <Column field=\"laundrystatus\" header=\"Status\" sortable={true} body={this.statusBodyTemplate} filter filterElement={statusFilter}/>\n                    </DataTable>\n                </div>\n            </div>\n        )\n\n    }\n}"]},"metadata":{},"sourceType":"module"}