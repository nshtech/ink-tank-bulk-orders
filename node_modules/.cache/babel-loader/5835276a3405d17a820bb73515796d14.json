{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Slider = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _DomHandler = _interopRequireDefault(require(\"../utils/DomHandler\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n    _this.onBarClick = _this.onBarClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDragListeners();\n      this.unbindTouchListeners();\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event, index) {\n      if (this.disabled) {\n        return;\n      }\n\n      this.dragging = true;\n      this.updateDomData();\n      this.sliderHandleClick = true;\n      this.handleIndex = index;\n      event.preventDefault();\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event, index) {\n      this.bindDragListeners();\n      this.onDragStart(event, index);\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event, index) {\n      this.bindTouchListeners();\n      this.onDragStart(event, index);\n    }\n  }, {\n    key: \"onBarClick\",\n    value: function onBarClick(event) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (!this.sliderHandleClick) {\n        this.updateDomData();\n        this.setValue(event);\n      }\n\n      this.sliderHandleClick = false;\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(event) {\n      if (this.dragging) {\n        this.setValue(event);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(event) {\n      if (this.dragging) {\n        this.dragging = false;\n\n        if (this.props.onSlideEnd) {\n          if (this.props.range) this.props.onSlideEnd({\n            originalEvent: event,\n            values: this.props.value\n          });else this.props.onSlideEnd({\n            originalEvent: event,\n            value: this.props.value\n          });\n        }\n\n        this.unbindDragListeners();\n        this.unbindTouchListeners();\n      }\n    }\n  }, {\n    key: \"bindDragListeners\",\n    value: function bindDragListeners() {\n      if (!this.dragListener) {\n        this.dragListener = this.onDrag.bind(this);\n        document.addEventListener('mousemove', this.dragListener);\n      }\n\n      if (!this.dragEndListener) {\n        this.dragEndListener = this.onDragEnd.bind(this);\n        document.addEventListener('mouseup', this.dragEndListener);\n      }\n    }\n  }, {\n    key: \"unbindDragListeners\",\n    value: function unbindDragListeners() {\n      if (this.dragListener) {\n        document.removeEventListener('mousemove', this.dragListener);\n        this.dragListener = null;\n      }\n\n      if (this.dragEndListener) {\n        document.removeEventListener('mouseup', this.dragEndListener);\n        this.dragEndListener = null;\n      }\n    }\n  }, {\n    key: \"bindTouchListeners\",\n    value: function bindTouchListeners() {\n      if (!this.dragListener) {\n        this.dragListener = this.onDrag.bind(this);\n        document.addEventListener('touchmove', this.dragListener);\n      }\n\n      if (!this.dragEndListener) {\n        this.dragEndListener = this.onDragEnd.bind(this);\n        document.addEventListener('touchend', this.dragEndListener);\n      }\n    }\n  }, {\n    key: \"unbindTouchListeners\",\n    value: function unbindTouchListeners() {\n      if (this.dragListener) {\n        document.removeEventListener('touchmove', this.dragListener);\n        this.dragListener = null;\n      }\n\n      if (this.dragEndListener) {\n        document.removeEventListener('touchend', this.dragEndListener);\n        this.dragEndListener = null;\n      }\n    }\n  }, {\n    key: \"updateDomData\",\n    value: function updateDomData() {\n      var rect = this.el.getBoundingClientRect();\n      this.initX = rect.left + _DomHandler.default.getWindowScrollLeft();\n      this.initY = rect.top + _DomHandler.default.getWindowScrollTop();\n      this.barWidth = this.el.offsetWidth;\n      this.barHeight = this.el.offsetHeight;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(event) {\n      var handleValue;\n      var pageX = event.touches ? event.touches[0].pageX : event.pageX;\n      if (this.props.orientation === 'horizontal') handleValue = (pageX - this.initX) * 100 / this.barWidth;else handleValue = (this.initY + this.barHeight - event.pageY) * 100 / this.barHeight;\n      var newValue = (this.props.max - this.props.min) * (handleValue / 100) + this.props.min;\n\n      if (this.props.step) {\n        var oldValue = this.props.range ? this.props.value[this.handleIndex] : this.props.value;\n        var diff = newValue - oldValue;\n        if (diff < 0) newValue = oldValue + Math.ceil(newValue / this.props.step - oldValue / this.props.step) * this.props.step;else if (diff > 0) newValue = oldValue + Math.floor(newValue / this.props.step - oldValue / this.props.step) * this.props.step;\n      }\n\n      this.updateValue(event, newValue);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(event, value) {\n      if (this.props.range) {\n        var newValue = value;\n\n        if (this.handleIndex === 0) {\n          if (newValue < this.props.min) newValue = this.props.min;else if (newValue > this.props.value[1]) newValue = this.props.value[1];\n        } else {\n          if (newValue > this.props.max) newValue = this.props.max;else if (newValue < this.props.value[0]) newValue = this.props.value[0];\n        }\n\n        var newValues = _toConsumableArray(this.props.value);\n\n        newValues[this.handleIndex] = Math.floor(newValue);\n\n        if (this.props.onChange) {\n          this.props.onChange({\n            originalEvent: event,\n            value: newValues\n          });\n        }\n      } else {\n        var _newValue = value;\n        if (_newValue < this.props.min) _newValue = this.props.min;else if (_newValue > this.props.max) _newValue = this.props.max;\n\n        if (this.props.onChange) {\n          this.props.onChange({\n            originalEvent: event,\n            value: Math.floor(_newValue)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"renderHandle\",\n    value: function renderHandle(leftValue, bottomValue, index) {\n      var _this2 = this;\n\n      return _react.default.createElement(\"span\", {\n        onMouseDown: function onMouseDown(event) {\n          return _this2.onMouseDown(event, index);\n        },\n        onTouchStart: function onTouchStart(event) {\n          return _this2.onTouchStart(event, index);\n        },\n        tabIndex: this.props.tabIndex,\n        className: \"p-slider-handle\",\n        style: {\n          transition: this.dragging ? 'none' : null,\n          left: leftValue + '%',\n          bottom: bottomValue + '%'\n        }\n      });\n    }\n  }, {\n    key: \"renderRangeSlider\",\n    value: function renderRangeSlider() {\n      var values = this.props.value || [0, 0];\n      var horizontal = this.props.orientation === 'horizontal';\n      var handleValueStart = (values[0] < this.props.min ? 0 : values[0] - this.props.min) * 100 / (this.props.max - this.props.min);\n      var handleValueEnd = (values[1] > this.props.max ? 100 : values[1] - this.props.min) * 100 / (this.props.max - this.props.min);\n      var rangeStartHandle = horizontal ? this.renderHandle(handleValueStart, 'auto', 0) : this.renderHandle('auto', handleValueStart, 0);\n      var rangeEndHandle = horizontal ? this.renderHandle(handleValueEnd, 'auto', 1) : this.renderHandle('auto', handleValueEnd, 1);\n      var rangeStyle = horizontal ? {\n        left: handleValueStart + '%',\n        width: handleValueEnd - handleValueStart + '%'\n      } : {\n        bottom: handleValueStart + '%',\n        height: handleValueEnd - handleValueStart + '%'\n      };\n      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"span\", {\n        className: \"p-slider-range\",\n        style: rangeStyle\n      }), rangeStartHandle, rangeEndHandle);\n    }\n  }, {\n    key: \"renderSingleSlider\",\n    value: function renderSingleSlider() {\n      var value = this.props.value || 0;\n      var handleValue;\n      if (value < this.props.min) handleValue = 0;else if (value > this.props.max) handleValue = 100;else handleValue = (value - this.props.min) * 100 / (this.props.max - this.props.min);\n      var rangeStyle = this.props.orientation === 'horizontal' ? {\n        width: handleValue + '%'\n      } : {\n        height: handleValue + '%'\n      };\n      var handle = this.props.orientation === 'horizontal' ? this.renderHandle(handleValue, 'auto', null) : this.renderHandle('auto', handleValue, null);\n      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"span\", {\n        className: \"p-slider-range p-slider-range-min ui-widget-header ui-corner-all\",\n        style: rangeStyle\n      }), handle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var className = (0, _classnames.default)('p-slider p-component', this.props.className, {\n        'p-disabled': this.props.disabled,\n        'p-slider-horizontal': this.props.orientation === 'horizontal',\n        'p-slider-vertical': this.props.orientation === 'vertical'\n      });\n      var content = this.props.range ? this.renderRangeSlider() : this.renderSingleSlider();\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        ref: function ref(el) {\n          return _this3.el = el;\n        },\n        style: this.props.style,\n        className: className,\n        onClick: this.onBarClick\n      }, content);\n    }\n  }]);\n\n  return Slider;\n}(_react.Component);\n\nexports.Slider = Slider;\n\n_defineProperty(Slider, \"defaultProps\", {\n  id: null,\n  value: null,\n  min: 0,\n  max: 100,\n  orientation: \"horizontal\",\n  step: null,\n  range: false,\n  style: null,\n  className: null,\n  disabled: false,\n  tabIndex: '0',\n  onChange: null,\n  onSlideEnd: null\n});\n\n_defineProperty(Slider, \"propTypes\", {\n  id: _propTypes.default.string,\n  value: _propTypes.default.any,\n  min: _propTypes.default.number,\n  max: _propTypes.default.number,\n  orientation: _propTypes.default.string,\n  step: _propTypes.default.number,\n  range: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  disabled: _propTypes.default.bool,\n  tabIndex: _propTypes.default.string,\n  onChange: _propTypes.default.func,\n  onSlideEnd: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}