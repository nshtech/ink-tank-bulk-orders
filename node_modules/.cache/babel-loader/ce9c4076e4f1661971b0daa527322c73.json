{"ast":null,"code":"import _objectSpread from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/AddOrders.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var AddOrders = /*#__PURE__*/function (_Component) {\n  _inherits(AddOrders, _Component);\n\n  var _super = _createSuper(AddOrders);\n\n  function AddOrders() {\n    var _this;\n\n    _classCallCheck(this, AddOrders);\n\n    _this = _super.call(this);\n    _this.state = {\n      customers: [],\n      orders: [],\n      bulk_orders: [],\n      selectedCustomer: null,\n      selectedOrders: null,\n      editing: false,\n      idcount: null,\n      newfirstname: null,\n      newlastname: null,\n      newid: null,\n      newplanYear: null,\n      newplanQuarter: null,\n      newmax: null,\n      newreshall: null,\n      newphone: null,\n      newemail: null,\n      newaddress: null,\n      newcity: null,\n      newstate: null,\n      newpostalcode: null,\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planTeamMember: [{\n        label: 'Caden Gaviria',\n        value: 'Caden Gaviria'\n      }, {\n        label: 'Philippe Manzone',\n        value: 'Philippe Manzone'\n      }, {\n        label: 'Alec Aragon',\n        value: 'Alec Aragon'\n      }, {\n        label: 'Shannon Groves',\n        value: 'Shannon Groves'\n      }, {\n        label: 'Ali Kilic',\n        value: 'Ali Kilic'\n      }],\n      planSelectStatus: [{\n        label: 'Confirmed',\n        value: 'confirmed'\n      }, {\n        label: 'In Production',\n        value: 'in production'\n      }, {\n        label: 'Invoiced',\n        value: 'invoiced'\n      }, {\n        label: 'Fulfilled',\n        value: 'fulfilled'\n      }, {\n        label: 'Shipped',\n        value: 'Shipped'\n      }, {\n        label: 'Quote',\n        value: 'quote'\n      }],\n      planYesNo: [{\n        label: 'Yes',\n        value: 'Yes'\n      }, {\n        label: 'No',\n        value: 'No'\n      }]\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.onTeamMemberValueChange = _this.onTeamMemberValueChange.bind(_assertThisInitialized(_this));\n    _this.resetNewInfo = _this.resetNewInfo.bind(_assertThisInitialized(_this));\n    _this.addBulkOrder = _this.addBulkOrder.bind(_assertThisInitialized(_this));\n    _this.padId = _this.padId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddOrders, [{\n    key: \"padId\",\n    value: function padId(idNum) {\n      var digitLength = idNum.toString().length;\n\n      if (digitLength === 1) {\n        var result = '0000' + idNum;\n      } else if (digitLength === 2) {\n        var result = '000' + idNum;\n      } else if (digitLength === 3) {\n        var result = '00' + idNum;\n      } else if (digitLength === 4) {\n        var result = '0' + idNum;\n      } else if (digitLength === 5) {\n        var result = idNum.toString();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      }); //this.resetNewInfo();\n    }\n  }, {\n    key: \"save\",\n    value: function save(bulk_order) {\n      this.setState({\n        editing: false\n      }); //console.log(this.state.newplan)\n\n      var allbulkorders = _toConsumableArray(this.state.bulk_orders);\n\n      var newbulkorder = _objectSpread({}, this.state.selectedOrders);\n\n      if (this.state.newaddress && this.state.newcity && this.state.newstate && this.state.newpostalcode) {\n        newbulkorder.ship_address = this.state.newaddress + this.state.newcity + this.state.newstate + this.state.newpostalcode;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/ship_address').set(newbulkorder.ship_address);\n      }\n\n      if (this.state.blank) {\n        newbulkorder.blank = this.state.blank;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/blank').set(newbulkorder.blank);\n      }\n\n      if (this.state.quantity) {\n        newbulkorder.quantity = this.state.quantity;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/quantity').set(newbulkorder.quantity);\n      }\n\n      if (this.state.phone) {\n        newbulkorder.phone = this.state.phone;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/phone').set(newbulkorder.phone);\n      }\n\n      if (this.state.email) {\n        newbulkorder.email = this.state.email;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/email').set(newbulkorder.email);\n      }\n\n      if (this.state.organization) {\n        newbulkorder.organization = this.state.organization;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/organization').set(newbulkorder.organization);\n      }\n\n      if (this.state.order_quote) {\n        newbulkorder.order_quote = this.state.order_quote;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/order_quote').set(newbulkorder.order_quote);\n      }\n\n      if (this.state.final_total) {\n        newbulkorder.final_total = this.state.final_total;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/final_total').set(newbulkorder.final_total);\n      }\n\n      if (this.state.tax_exempt) {\n        newbulkorder.tax_exempt = this.state.tax_exempt;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/tax_exempt').set(newbulkorder.tax_exempt);\n      }\n\n      if (this.state.team_member) {\n        newbulkorder.order_quote = this.state.team_member;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/team_member').set(newbulkorder.team_member);\n      }\n\n      if (this.state.design) {\n        newbulkorder.design = this.state.design;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/design').set(newbulkorder.design);\n      }\n\n      if (this.state.name) {\n        newbulkorder.name = this.state.name;\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/name').set(newbulkorder.name);\n        firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/status').set('invoiced');\n      }\n\n      var count = 0;\n      var individual = null;\n      allbulkorders.map(function (each) {\n        if (newbulkorder.order_id == each.order_id) {\n          individual = _objectSpread({}, allbulkorders[count]);\n          individual = newbulkorder;\n          allbulkorders[count] = individual;\n        }\n\n        count = count + 1;\n      });\n      this.setState({\n        bulk_orders: allbulkorders\n      });\n      this.setState({\n        selectedOrders: newbulkorder\n      });\n    } //CUSTOMER INFORMATION EDITING\n\n  }, {\n    key: \"onNameValueChange\",\n    value: function onNameValueChange(value) {\n      //console.log('new first name: ', value)\n      this.setState({\n        name: value\n      });\n    }\n  }, {\n    key: \"onTeamMemberValueChange\",\n    value: function onTeamMemberValueChange(value) {\n      //console.log('newPlanYear: ', value)\n      this.setState({\n        team_member: value\n      });\n    }\n  }, {\n    key: \"onBlankValueChange\",\n    value: function onBlankValueChange(value) {\n      //console.log('newPlanQuarter: ', value)\n      this.setState({\n        blank: value\n      });\n    }\n  }, {\n    key: \"onDesignValueChange\",\n    value: function onDesignValueChange(value) {\n      this.setState({\n        design: value\n      });\n    }\n  }, {\n    key: \"onOrganizationValueChange\",\n    value: function onOrganizationValueChange(value) {\n      this.setState({\n        organization: value\n      });\n    }\n  }, {\n    key: \"onTaxExemptValueChange\",\n    value: function onTaxExemptValueChange(value) {\n      this.setState({\n        tax_exempt: value\n      });\n    }\n  }, {\n    key: \"onQuantityValueChange\",\n    value: function onQuantityValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          quantity: \"NA\"\n        });\n      } else {\n        this.setState({\n          quantity: value\n        });\n      }\n    }\n  }, {\n    key: \"onOrderQuoteValueChange\",\n    value: function onOrderQuoteValueChange(value) {\n      //try, execept \n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          order_quote: \"NA\"\n        });\n      } else {\n        this.setState({\n          order_quote: value\n        });\n      }\n    }\n  }, {\n    key: \"onFinalTotalValueChange\",\n    value: function onFinalTotalValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          final_total: \"NA\"\n        });\n      } else {\n        this.setState({\n          final_total: value\n        });\n      }\n    }\n  }, {\n    key: \"onPhoneValueChange\",\n    value: function onPhoneValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          phone: \"NA\"\n        });\n      } else {\n        if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n          this.setState({\n            phone: value\n          });\n        }\n      } //this.setState({ phone: value });\n      // if value == NA: set to NA; conver to uppercase\n      // else; cast as float\n\n    }\n  }, {\n    key: \"onEmailValueChange\",\n    value: function onEmailValueChange(value) {\n      if (value.includes('@') && value.includes('.')) {\n        this.setState({\n          email: value\n        });\n      }\n    }\n  }, {\n    key: \"onAddressValueChange\",\n    value: function onAddressValueChange(value) {\n      this.setState({\n        newaddress: value\n      });\n    }\n  }, {\n    key: \"onCityValueChange\",\n    value: function onCityValueChange(value) {\n      this.setState({\n        newcity: value\n      });\n    }\n  }, {\n    key: \"onStateValueChange\",\n    value: function onStateValueChange(value) {\n      this.setState({\n        newstate: value\n      });\n    }\n  }, {\n    key: \"onPostalCodeValueChange\",\n    value: function onPostalCodeValueChange(value) {\n      this.setState({\n        newpostalcode: value\n      });\n    }\n  }, {\n    key: \"resetNewInfo\",\n    value: function resetNewInfo() {\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        team_member: ''\n      });\n      this.setState({\n        blank: ''\n      });\n      this.setState({\n        design: ''\n      });\n      this.setState({\n        organization: ''\n      });\n      this.setState({\n        tax_exempt: ''\n      });\n      this.setState({\n        quantity: ''\n      });\n      this.setState({\n        quantity: ''\n      });\n      this.setState({\n        order_quote: ''\n      });\n      this.setState({\n        final_total: ''\n      });\n      this.setState({\n        phone: ''\n      });\n      this.setState({\n        email: ''\n      });\n      this.setState({\n        newaddress: ''\n      });\n      this.setState({\n        newstate: ''\n      });\n      this.setState({\n        newcity: ''\n      });\n      this.setState({\n        newpostalcode: ''\n      });\n    }\n  }, {\n    key: \"addBulkOrder\",\n    value: function addBulkOrder() {\n      var _this2 = this;\n\n      //console.log('new first name: ', this.state.newfirstname);\n      //console.log('new last name: ', this.state.newlastname);\n      // console.log('new plan year: ', this.state.newplanyear);\n      // console.log('new plan quarter: ', this.state.newplanquarter);\n      // console.log('new max weight: ', this.state.newmax);\n      // console.log('new res hall: ', this.state.newreshall);\n      // console.log('new phone: ', this.state.newphone);\n      // console.log('new email: ', this.state.newemail);\n      //this.setState({idcount: this.state.idcount+1});\n      //console.log('updated id Count', this.state.idcount);\n      if (this.state.name !== '' && this.state.organization !== '' && this.state.email !== '' && this.state.phone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n        var idNum = this.padId(this.state.idcount); // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n\n        var order_id = this.state.idcount; //console.log('NEW ID: ', order_id);\n\n        this.messages.show({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Order Added!'\n        });\n        var db = firebase.database().ref(); //updating order_id count in firebase and then updating state variable\n\n        db.child('/idcount').set(this.state.idcount + 1);\n        db.child('/idcount').once('value').then(function (snapshot) {\n          _this2.setState({\n            idcount: snapshot.val()\n          });\n\n          console.log('state var idcount: ', _this2.state.idcount); //idNum = snapshot.val();\n\n          console.log('id from firebase: ', snapshot.val());\n        });\n        var name = this.state.name;\n        var email = this.state.email;\n        var phone = this.state.phone;\n        var organization = this.state.organization;\n        var design = this.state.design;\n        var blank = this.state.blank;\n        var quantity = this.state.quantity;\n        var ship_address = this.state.newaddress + ' ' + this.state.newcity + ' ' + this.state.newstate + ' ' + this.state.newpostalcode;\n        var final_total = this.state.final_total;\n        var order_quote = this.state.order_quote;\n        var team_member = this.state.team_member;\n        var tax_exempt = this.state.tax_exempt;\n        db.child('/bulk_orders/' + order_id).once(\"value\").then(function (snapshot) {\n          if (!snapshot.val()) {\n            db.child('/bulk_orders/' + order_id + '/active').set(\"Yes\");\n            db.child('/bulk_orders/' + order_id + '/status').set(\"Quote\");\n            db.child('/bulk_orders/' + order_id + '/email').set(email);\n            db.child('/bulk_orders/' + order_id + '/order_id').set(order_id.toString());\n            db.child('/bulk_orders/' + order_id + '/last_status_updated').set('N/A');\n            db.child('/bulk_orders/' + order_id + '/name').set(name);\n            db.child('/bulk_orders/' + order_id + '/phone').set(phone);\n            db.child('/bulk_orders/' + order_id + '/organization').set(organization);\n            db.child('/bulk_orders/' + order_id + '/design').set(design);\n            db.child('/bulk_orders/' + order_id + '/blank').set(blank);\n            db.child('/bulk_orders/' + order_id + '/ship_address').set(ship_address);\n            db.child('/bulk_orders/' + order_id + '/final_total').set(final_total);\n            db.child('/bulk_orders/' + order_id + '/order_quote').set(order_quote);\n            db.child('/bulk_orders/' + order_id + '/team_member').set(team_member);\n            db.child('/bulk_orders/' + order_id + '/quantity').set(quantity);\n            db.child('/bulk_orders/' + order_id + '/tax_exempt').set(tax_exempt);\n          }\n        });\n        this.setState({\n          email: ''\n        });\n        this.setState({\n          phone: ''\n        });\n        this.setState({\n          organization: ''\n        });\n        this.setState({\n          design: ''\n        });\n        this.setState({\n          blank: ''\n        });\n        this.setState({\n          ship_address: ''\n        });\n        this.setState({\n          final_total: ''\n        });\n        this.setState({\n          order_quote: ''\n        });\n        this.setState({\n          team_member: ''\n        });\n        this.setState({\n          quantity: ''\n        });\n        this.setState({\n          tax_exempt: ''\n        }); //const curr  = await this.resetNewInfo();\n        //console.log('reset info: ', this.state.newfirstname);\n        //document.getElementById(\"form\").reset();\n      } else {\n        this.messages.show({\n          severity: \"error\",\n          summary: \"Missing Fields\",\n          detail: \"Please enter all information\"\n        });\n      }\n    }\n    /* --------------- Filters ---------------- */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var customerArray = [];\n      firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          customerArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        customers: customerArray\n      });\n      this.setState({\n        bulk_orders: customerArray\n      });\n      var orderArray = [];\n      firebase.database().ref('/orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          orderArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        orders: orderArray\n      });\n      var idNum = 0;\n      firebase.database().ref('/idcount').once('value').then(function (snapshot) {\n        _this3.setState({\n          idcount: snapshot.val()\n        });\n\n        console.log('state var idcount: ', _this3.state.idcount);\n        idNum = snapshot.val();\n        console.log('id from firebase: ', snapshot.val());\n      }); //console.log('var idNum: ', idNum);\n\n      this.setState({\n        idcount: idNum\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 22\n        }\n      });\n      var bulk_order = this.state.selectedOrders; //var history = this.getCustomerHistory(customer)\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        id: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }\n      }, \"Add New Order Inquiry\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }\n      }, \"Use this form to enter all information about a new order or order inquiry\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-fluid p-formgrid p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 25\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.name,\n        id: \"firstname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onNameValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }\n      }, \"Organization\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.organization,\n        id: \"lastname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onOrganizationValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 25\n        }\n      }, \"Blank\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.blank,\n        id: \"blank\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onBlankValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.email,\n        id: \"newemail\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onEmailValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 25\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.phone,\n        id: \"newphone\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPhoneValueChange(e.target.value);\n        },\n        placeholder: \"Type Phone Number or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }\n      }, \"Address\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.address,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onAddressValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 25\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.city,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onCityValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.state,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onStateValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }\n      }, \"Postal Code\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.postal_code,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPostalCodeValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }\n      }), \"    \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }\n      }, \"Tax-Exempt\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.tax_exempt,\n        options: this.state.planYesNo,\n        onChange: function onChange(e) {\n          _this4.onTaxExemptValueChange(e.target.value);\n        },\n        placeholder: \"Select Yes or No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }\n      }, \"Design\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.design,\n        options: this.state.planYesNo,\n        onChange: function onChange(e) {\n          _this4.onDesignValueChange(e.target.value);\n        },\n        placeholder: \"Select Yes or No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstnames6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }\n      }, \"Assigned Ink Tank Team Member\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.team_member,\n        options: this.state.planTeamMember,\n        onChange: function onChange(e) {\n          _this4.onTeamMemberValueChange(e.target.value);\n        },\n        placeholder: \"Select Team Member\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.quantity,\n        id: \"quantity\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onQuantityValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, \"Order Quote\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.order_quote,\n        id: \"order_quote\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onOrderQuoteValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, \"Final Total\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.final_total,\n        id: \"final_total\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onFinalTotalValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: 'white',\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginTop: 30\n        },\n        label: \"ADD ORDER\",\n        onClick: function onClick() {\n          _this4.addBulkOrder();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this4.messages = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return AddOrders;\n}(Component);","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/AddOrders.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","InputTextarea","Messages","Message","firebase","validator","customerData","AddOrders","state","customers","orders","bulk_orders","selectedCustomer","selectedOrders","editing","idcount","newfirstname","newlastname","newid","newplanYear","newplanQuarter","newmax","newreshall","newphone","newemail","newaddress","newcity","newstate","newpostalcode","planSelectYear","label","value","planTeamMember","planSelectStatus","planYesNo","edit","bind","save","onTeamMemberValueChange","resetNewInfo","addBulkOrder","padId","idNum","digitLength","toString","length","result","setState","bulk_order","allbulkorders","newbulkorder","ship_address","database","ref","order_id","set","blank","quantity","phone","email","organization","order_quote","final_total","tax_exempt","team_member","design","name","count","individual","map","each","toUpperCase","includes","messages","show","severity","summary","detail","db","child","once","then","snapshot","val","console","log","customerArray","on","forEach","childSnapshot","push","toJSON","orderArray","header","textAlign","e","onNameValueChange","target","onOrganizationValueChange","onBlankValueChange","onEmailValueChange","onPhoneValueChange","address","onAddressValueChange","city","onCityValueChange","onStateValueChange","postal_code","onPostalCodeValueChange","onTaxExemptValueChange","onDesignValueChange","onQuantityValueChange","onOrderQuoteValueChange","onFinalTotalValueChange","color","backgroundColor","borderColor","marginTop","el"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AAGA,OAAOC,YAAP,MAAyB,mBAAzB,C,CACA;;AAEA,OAAO,kBAAP,C,CACA;;AAGA,WAAaC,SAAb;AAAA;;AAAA;;AAEI,uBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,gBAAgB,EAAE,IAJT;AAKTC,MAAAA,cAAc,EAAE,IALP;AAMTC,MAAAA,OAAO,EAAE,KANA;AAOTC,MAAAA,OAAO,EAAE,IAPA;AAQTC,MAAAA,YAAY,EAAE,IARL;AASTC,MAAAA,WAAW,EAAE,IATJ;AAUTC,MAAAA,KAAK,EAAE,IAVE;AAWTC,MAAAA,WAAW,EAAE,IAXJ;AAYTC,MAAAA,cAAc,EAAE,IAZP;AAaTC,MAAAA,MAAM,EAAE,IAbC;AAcTC,MAAAA,UAAU,EAAE,IAdH;AAeTC,MAAAA,QAAQ,EAAE,IAfD;AAgBTC,MAAAA,QAAQ,EAAE,IAhBD;AAiBTC,MAAAA,UAAU,EAAE,IAjBH;AAkBTC,MAAAA,OAAO,EAAE,IAlBA;AAmBTC,MAAAA,QAAQ,EAAE,IAnBD;AAoBTC,MAAAA,aAAa,EAAE,IApBN;AAqBTC,MAAAA,cAAc,EAAE,CACZ;AAAEC,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OADY,EAEZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAFY,EAGZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAHY,EAIZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAJY,CArBP;AA2BTC,MAAAA,cAAc,EAAE,CACZ;AAAEF,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OADY,EAEZ;AAAED,QAAAA,KAAK,EAAE,kBAAT;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAFY,EAGZ;AAAED,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAHY,EAIZ;AAAED,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAJY,EAKZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OALY,CA3BP;AAkCTE,MAAAA,gBAAgB,EAAE,CACd;AAAEH,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OADc,EAEd;AAAED,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAFc,EAGd;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAHc,EAId;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAJc,EAKd;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OALc,EAMd;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OANc,CAlCT;AA0CTG,MAAAA,SAAS,EAAE,CACP;AAAEJ,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAFO;AA1CF,KAAb;AAgDA,UAAKI,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,+BAAZ;AACA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUD,IAAV,+BAAZ;AACA,UAAKE,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BF,IAA7B,+BAA/B;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,+BAApB;AACA,UAAKI,YAAL,GAAoB,MAAKA,YAAL,CAAkBJ,IAAlB,+BAApB;AACA,UAAKK,KAAL,GAAa,MAAKA,KAAL,CAAWL,IAAX,+BAAb;AAvDU;AAwDb;;AA1DL;AAAA;AAAA,WA6DI,eAAMM,KAAN,EAAa;AACT,UAAIC,WAAW,GAAID,KAAK,CAACE,QAAN,EAAD,CAAmBC,MAArC;;AACA,UAAIF,WAAW,KAAK,CAApB,EAAuB;AACnB,YAAIG,MAAM,GAAG,SAASJ,KAAtB;AACH,OAFD,MAGK,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,YAAIG,MAAM,GAAG,QAAQJ,KAArB;AACH,OAFI,MAGA,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,YAAIG,MAAM,GAAG,OAAOJ,KAApB;AACH,OAFI,MAGA,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,YAAIG,MAAM,GAAG,MAAMJ,KAAnB;AACH,OAFI,MAGA,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,YAAIG,MAAM,GAAGJ,KAAK,CAACE,QAAN,EAAb;AACH;;AACD,aAAOE,MAAP;AAEH;AAhFL;AAAA;AAAA,WAiFI,gBAAO;AACH,WAAKC,QAAL,CAAc;AAAEjC,QAAAA,OAAO,EAAE;AAAX,OAAd,EADG,CAEH;AACH;AApFL;AAAA;AAAA,WAsFI,cAAKkC,UAAL,EAAiB;AACb,WAAKD,QAAL,CAAc;AAAEjC,QAAAA,OAAO,EAAE;AAAX,OAAd,EADa,CAEb;;AACA,UAAImC,aAAa,sBAAO,KAAKzC,KAAL,CAAWG,WAAlB,CAAjB;;AACA,UAAIuC,YAAY,qBAAQ,KAAK1C,KAAL,CAAWK,cAAnB,CAAhB;;AAEA,UAAI,KAAKL,KAAL,CAAWiB,UAAX,IAAyB,KAAKjB,KAAL,CAAWkB,OAApC,IAA+C,KAAKlB,KAAL,CAAWmB,QAA1D,IAAsE,KAAKnB,KAAL,CAAWoB,aAArF,EAAoG;AAChGsB,QAAAA,YAAY,CAACC,YAAb,GAA4B,KAAK3C,KAAL,CAAWiB,UAAX,GAAwB,KAAKjB,KAAL,CAAWkB,OAAnC,GAA6C,KAAKlB,KAAL,CAAWmB,QAAxD,GAAmE,KAAKnB,KAAL,CAAWoB,aAA1G;AACAxB,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,eAAhE,EAAiFC,GAAjF,CAAqFL,YAAY,CAACC,YAAlG;AACH;;AAED,UAAI,KAAK3C,KAAL,CAAWgD,KAAf,EAAsB;AAClBN,QAAAA,YAAY,CAACM,KAAb,GAAqB,KAAKhD,KAAL,CAAWgD,KAAhC;AACApD,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,QAAhE,EAA0EC,GAA1E,CAA8EL,YAAY,CAACM,KAA3F;AACH;;AACD,UAAI,KAAKhD,KAAL,CAAWiD,QAAf,EAAyB;AACrBP,QAAAA,YAAY,CAACO,QAAb,GAAwB,KAAKjD,KAAL,CAAWiD,QAAnC;AACArD,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,WAAhE,EAA6EC,GAA7E,CAAiFL,YAAY,CAACO,QAA9F;AACH;;AACD,UAAI,KAAKjD,KAAL,CAAWkD,KAAf,EAAsB;AAClBR,QAAAA,YAAY,CAACQ,KAAb,GAAqB,KAAKlD,KAAL,CAAWkD,KAAhC;AACAtD,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,QAAhE,EAA0EC,GAA1E,CAA8EL,YAAY,CAACQ,KAA3F;AACH;;AACD,UAAI,KAAKlD,KAAL,CAAWmD,KAAf,EAAsB;AAClBT,QAAAA,YAAY,CAACS,KAAb,GAAqB,KAAKnD,KAAL,CAAWmD,KAAhC;AACAvD,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,QAAhE,EAA0EC,GAA1E,CAA8EL,YAAY,CAACS,KAA3F;AACH;;AACD,UAAI,KAAKnD,KAAL,CAAWoD,YAAf,EAA6B;AACzBV,QAAAA,YAAY,CAACU,YAAb,GAA4B,KAAKpD,KAAL,CAAWoD,YAAvC;AACAxD,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,eAAhE,EAAiFC,GAAjF,CAAqFL,YAAY,CAACU,YAAlG;AACH;;AACD,UAAI,KAAKpD,KAAL,CAAWqD,WAAf,EAA4B;AACxBX,QAAAA,YAAY,CAACW,WAAb,GAA2B,KAAKrD,KAAL,CAAWqD,WAAtC;AACAzD,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,cAAhE,EAAgFC,GAAhF,CAAoFL,YAAY,CAACW,WAAjG;AACH;;AACD,UAAI,KAAKrD,KAAL,CAAWsD,WAAf,EAA4B;AACxBZ,QAAAA,YAAY,CAACY,WAAb,GAA2B,KAAKtD,KAAL,CAAWsD,WAAtC;AACA1D,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,cAAhE,EAAgFC,GAAhF,CAAoFL,YAAY,CAACY,WAAjG;AACH;;AACD,UAAI,KAAKtD,KAAL,CAAWuD,UAAf,EAA2B;AACvBb,QAAAA,YAAY,CAACa,UAAb,GAA0B,KAAKvD,KAAL,CAAWuD,UAArC;AACA3D,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,aAAhE,EAA+EC,GAA/E,CAAmFL,YAAY,CAACa,UAAhG;AACH;;AACD,UAAI,KAAKvD,KAAL,CAAWwD,WAAf,EAA4B;AACxBd,QAAAA,YAAY,CAACW,WAAb,GAA2B,KAAKrD,KAAL,CAAWwD,WAAtC;AACA5D,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,cAAhE,EAAgFC,GAAhF,CAAoFL,YAAY,CAACc,WAAjG;AACH;;AACD,UAAI,KAAKxD,KAAL,CAAWyD,MAAf,EAAuB;AACnBf,QAAAA,YAAY,CAACe,MAAb,GAAsB,KAAKzD,KAAL,CAAWyD,MAAjC;AACA7D,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,SAAhE,EAA2EC,GAA3E,CAA+EL,YAAY,CAACe,MAA5F;AACH;;AACD,UAAI,KAAKzD,KAAL,CAAW0D,IAAf,EAAqB;AACjBhB,QAAAA,YAAY,CAACgB,IAAb,GAAoB,KAAK1D,KAAL,CAAW0D,IAA/B;AACA9D,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,OAAhE,EAAyEC,GAAzE,CAA6EL,YAAY,CAACgB,IAA1F;AACA9D,QAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,kBAAkBL,UAAU,CAACM,QAA7B,GAAwC,SAAhE,EAA2EC,GAA3E,CAA+E,UAA/E;AACH;;AAED,UAAIY,KAAK,GAAG,CAAZ;AACA,UAAIC,UAAU,GAAG,IAAjB;AACAnB,MAAAA,aAAa,CAACoB,GAAd,CAAkB,UAAAC,IAAI,EAAI;AACtB,YAAIpB,YAAY,CAACI,QAAb,IAAyBgB,IAAI,CAAChB,QAAlC,EAA4C;AACxCc,UAAAA,UAAU,qBAAQnB,aAAa,CAACkB,KAAD,CAArB,CAAV;AACAC,UAAAA,UAAU,GAAGlB,YAAb;AACAD,UAAAA,aAAa,CAACkB,KAAD,CAAb,GAAuBC,UAAvB;AACH;;AACDD,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;AACH,OAPD;AAQA,WAAKpB,QAAL,CAAc;AAAEpC,QAAAA,WAAW,EAAEsC;AAAf,OAAd;AACA,WAAKF,QAAL,CAAc;AAAElC,QAAAA,cAAc,EAAEqC;AAAlB,OAAd;AAEH,KA5JL,CA8JI;;AA9JJ;AAAA;AAAA,WA+JI,2BAAkBnB,KAAlB,EAAyB;AACrB;AACA,WAAKgB,QAAL,CAAc;AAAEmB,QAAAA,IAAI,EAAEnC;AAAR,OAAd;AAEH;AAnKL;AAAA;AAAA,WAqKI,iCAAwBA,KAAxB,EAA+B;AAC3B;AACA,WAAKgB,QAAL,CAAc;AAAEiB,QAAAA,WAAW,EAAEjC;AAAf,OAAd;AACH;AAxKL;AAAA;AAAA,WAyKI,4BAAmBA,KAAnB,EAA0B;AACtB;AACA,WAAKgB,QAAL,CAAc;AAAES,QAAAA,KAAK,EAAEzB;AAAT,OAAd;AACH;AA5KL;AAAA;AAAA,WA6KI,6BAAoBA,KAApB,EAA2B;AACvB,WAAKgB,QAAL,CAAc;AAAEkB,QAAAA,MAAM,EAAElC;AAAV,OAAd;AACH;AA/KL;AAAA;AAAA,WAgLI,mCAA0BA,KAA1B,EAAiC;AAC7B,WAAKgB,QAAL,CAAc;AAAEa,QAAAA,YAAY,EAAE7B;AAAhB,OAAd;AACH;AAlLL;AAAA;AAAA,WAmLI,gCAAuBA,KAAvB,EAA8B;AAC1B,WAAKgB,QAAL,CAAc;AAAEgB,QAAAA,UAAU,EAAEhC;AAAd,OAAd;AACH;AArLL;AAAA;AAAA,WAsLI,+BAAsBA,KAAtB,EAA6B;AACzB,UAAIA,KAAK,CAACwC,WAAN,OAAwB,IAAxB,IAAgCxC,KAAK,CAACwC,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,aAAKxB,QAAL,CAAc;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACH,OAFD,MAGK;AACD,aAAKV,QAAL,CAAc;AAAEU,UAAAA,QAAQ,EAAE1B;AAAZ,SAAd;AACH;AACJ;AA7LL;AAAA;AAAA,WA8LI,iCAAwBA,KAAxB,EAA+B;AAC3B;AACA,UAAIA,KAAK,CAACwC,WAAN,OAAwB,IAAxB,IAAgCxC,KAAK,CAACwC,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,aAAKxB,QAAL,CAAc;AAAEc,UAAAA,WAAW,EAAE;AAAf,SAAd;AACH,OAFD,MAGK;AACD,aAAKd,QAAL,CAAc;AAAEc,UAAAA,WAAW,EAAE9B;AAAf,SAAd;AACH;AACJ;AAtML;AAAA;AAAA,WAuMI,iCAAwBA,KAAxB,EAA+B;AAC3B,UAAIA,KAAK,CAACwC,WAAN,OAAwB,IAAxB,IAAgCxC,KAAK,CAACwC,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,aAAKxB,QAAL,CAAc;AAAEe,UAAAA,WAAW,EAAE;AAAf,SAAd;AACH,OAFD,MAGK;AACD,aAAKf,QAAL,CAAc;AAAEe,UAAAA,WAAW,EAAE/B;AAAf,SAAd;AACH;AACJ;AA9ML;AAAA;AAAA,WA+MI,4BAAmBA,KAAnB,EAA0B;AACtB,UAAIA,KAAK,CAACwC,WAAN,OAAwB,IAAxB,IAAgCxC,KAAK,CAACwC,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,aAAKxB,QAAL,CAAc;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAEO;AACH,YAAI3B,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjC,IAAwCA,KAAK,CAACc,MAAN,KAAiB,EAA7D,EAAiE;AAC7D,eAAKE,QAAL,CAAc;AAAEW,YAAAA,KAAK,EAAE3B;AAAT,WAAd;AACH;AACJ,OAPqB,CAQtB;AACA;AACA;;AAEH;AA3NL;AAAA;AAAA,WA4NI,4BAAmBA,KAAnB,EAA0B;AACtB,UAAIA,KAAK,CAACyC,QAAN,CAAe,GAAf,KAAuBzC,KAAK,CAACyC,QAAN,CAAe,GAAf,CAA3B,EAAgD;AAC5C,aAAKzB,QAAL,CAAc;AAAEY,UAAAA,KAAK,EAAE5B;AAAT,SAAd;AACH;AACJ;AAhOL;AAAA;AAAA,WAiOI,8BAAqBA,KAArB,EAA4B;AACxB,WAAKgB,QAAL,CAAc;AAAEtB,QAAAA,UAAU,EAAEM;AAAd,OAAd;AACH;AAnOL;AAAA;AAAA,WAoOI,2BAAkBA,KAAlB,EAAyB;AACrB,WAAKgB,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAEK;AAAX,OAAd;AACH;AAtOL;AAAA;AAAA,WAuOI,4BAAmBA,KAAnB,EAA0B;AACtB,WAAKgB,QAAL,CAAc;AAAEpB,QAAAA,QAAQ,EAAEI;AAAZ,OAAd;AACH;AAzOL;AAAA;AAAA,WA0OI,iCAAwBA,KAAxB,EAA+B;AAC3B,WAAKgB,QAAL,CAAc;AAAEnB,QAAAA,aAAa,EAAEG;AAAjB,OAAd;AACH;AA5OL;AAAA;AAAA,WA6OI,wBAAe;AACX,WAAKgB,QAAL,CAAc;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKnB,QAAL,CAAc;AAAEiB,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKjB,QAAL,CAAc;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAKT,QAAL,CAAc;AAAEkB,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,WAAKlB,QAAL,CAAc;AAAEa,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,WAAKb,QAAL,CAAc;AAAEgB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKhB,QAAL,CAAc;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKV,QAAL,CAAc;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKV,QAAL,CAAc;AAAEc,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKd,QAAL,CAAc;AAAEe,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKf,QAAL,CAAc;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAKX,QAAL,CAAc;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAKZ,QAAL,CAAc;AAAEtB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKsB,QAAL,CAAc;AAAEpB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKoB,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKqB,QAAL,CAAc;AAAEnB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH;AA9PL;AAAA;AAAA,WAgQI,wBAAe;AAAA;;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,KAAKpB,KAAL,CAAW0D,IAAX,KAAoB,EAApB,IAA0B,KAAK1D,KAAL,CAAWoD,YAAX,KAA4B,EAAtD,IAA4D,KAAKpD,KAAL,CAAWmD,KAAX,KAAqB,EAAjF,IAAuF,KAAKnD,KAAL,CAAWkD,KAAX,KAAqB,EAA5G,IAAkH,KAAKlD,KAAL,CAAWgD,KAAX,KAAqB,EAAvI,IAA6I,KAAKhD,KAAL,CAAWyD,MAAX,KAAsB,EAAnK,IAAyK,KAAKzD,KAAL,CAAWwD,WAAX,KAA2B,IAApM,IAA4M,KAAKxD,KAAL,CAAWuD,UAAX,KAA0B,IAAtO,IAA8O,KAAKvD,KAAL,CAAWiD,QAAX,KAAwB,IAAtQ,IAA8Q,KAAKjD,KAAL,CAAWqD,WAAX,KAA2B,IAAzS,IAAiT,KAAKrD,KAAL,CAAWsD,WAAX,KAA2B,IAAhV,EAAsV;AAElV,YAAIpB,KAAK,GAAG,KAAKD,KAAL,CAAW,KAAKjC,KAAL,CAAWO,OAAtB,CAAZ,CAFkV,CAGlV;;AACA,YAAIuC,QAAQ,GAAG,KAAK9C,KAAL,CAAWO,OAA1B,CAJkV,CAKlV;;AACA,aAAK0D,QAAL,CAAcC,IAAd,CAAmB;AAAEC,UAAAA,QAAQ,EAAE,SAAZ;AAAuBC,UAAAA,OAAO,EAAE,SAAhC;AAA2CC,UAAAA,MAAM,EAAE;AAAnD,SAAnB;AACA,YAAMC,EAAE,GAAG1E,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,EAAX,CAPkV,CAQlV;;AACAyB,QAAAA,EAAE,CAACC,KAAH,CAAS,UAAT,EAAqBxB,GAArB,CAAyB,KAAK/C,KAAL,CAAWO,OAAX,GAAqB,CAA9C;AACA+D,QAAAA,EAAE,CAACC,KAAH,CAAS,UAAT,EAAqBC,IAArB,CAA0B,OAA1B,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,UAAA,MAAI,CAACnC,QAAL,CAAc;AAAEhC,YAAAA,OAAO,EAAEmE,QAAQ,CAACC,GAAT;AAAX,WAAd;;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,MAAI,CAAC7E,KAAL,CAAWO,OAA9C,EAFc,CAGd;;AACAqE,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAQ,CAACC,GAAT,EAAlC;AACH,SANL;AAQA,YAAMjB,IAAI,GAAG,KAAK1D,KAAL,CAAW0D,IAAxB;AACA,YAAMP,KAAK,GAAG,KAAKnD,KAAL,CAAWmD,KAAzB;AACA,YAAMD,KAAK,GAAG,KAAKlD,KAAL,CAAWkD,KAAzB;AACA,YAAME,YAAY,GAAG,KAAKpD,KAAL,CAAWoD,YAAhC;AACA,YAAMK,MAAM,GAAG,KAAKzD,KAAL,CAAWyD,MAA1B;AACA,YAAMT,KAAK,GAAG,KAAKhD,KAAL,CAAWgD,KAAzB;AACA,YAAMC,QAAQ,GAAG,KAAKjD,KAAL,CAAWiD,QAA5B;AACA,YAAMN,YAAY,GAAG,KAAK3C,KAAL,CAAWiB,UAAX,GAAwB,GAAxB,GAA8B,KAAKjB,KAAL,CAAWkB,OAAzC,GAAmD,GAAnD,GAAyD,KAAKlB,KAAL,CAAWmB,QAApE,GAA+E,GAA/E,GAAqF,KAAKnB,KAAL,CAAWoB,aAArH;AACA,YAAMkC,WAAW,GAAG,KAAKtD,KAAL,CAAWsD,WAA/B;AACA,YAAMD,WAAW,GAAG,KAAKrD,KAAL,CAAWqD,WAA/B;AACA,YAAMG,WAAW,GAAG,KAAKxD,KAAL,CAAWwD,WAA/B;AACA,YAAMD,UAAU,GAAG,KAAKvD,KAAL,CAAWuD,UAA9B;AACAe,QAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAA3B,EAAqC0B,IAArC,CAA0C,OAA1C,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,cAAI,CAACA,QAAQ,CAACC,GAAT,EAAL,EAAqB;AACjBL,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,SAAtC,EAAiDC,GAAjD,CAAqD,KAArD;AACAuB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,SAAtC,EAAiDC,GAAjD,CAAqD,OAArD;AACAuB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,QAAtC,EAAgDC,GAAhD,CAAoDI,KAApD;AACAmB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,WAAtC,EAAmDC,GAAnD,CAAuDD,QAAQ,CAACV,QAAT,EAAvD;AACAkC,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,sBAAtC,EAA8DC,GAA9D,CAAkE,KAAlE;AACAuB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,OAAtC,EAA+CC,GAA/C,CAAmDW,IAAnD;AACAY,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,QAAtC,EAAgDC,GAAhD,CAAoDG,KAApD;AACAoB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,eAAtC,EAAuDC,GAAvD,CAA2DK,YAA3D;AACAkB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,SAAtC,EAAiDC,GAAjD,CAAqDU,MAArD;AACAa,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,QAAtC,EAAgDC,GAAhD,CAAoDC,KAApD;AACAsB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,eAAtC,EAAuDC,GAAvD,CAA2DJ,YAA3D;AACA2B,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,cAAtC,EAAsDC,GAAtD,CAA0DO,WAA1D;AACAgB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,cAAtC,EAAsDC,GAAtD,CAA0DM,WAA1D;AACAiB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,cAAtC,EAAsDC,GAAtD,CAA0DS,WAA1D;AACAc,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,WAAtC,EAAmDC,GAAnD,CAAuDE,QAAvD;AACAqB,YAAAA,EAAE,CAACC,KAAH,CAAS,kBAAkBzB,QAAlB,GAA6B,aAAtC,EAAqDC,GAArD,CAAyDQ,UAAzD;AAEH;AACJ,SArBL;AAuBA,aAAKhB,QAAL,CAAc;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,aAAKZ,QAAL,CAAc;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,aAAKX,QAAL,CAAc;AAAEa,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA,aAAKb,QAAL,CAAc;AAAEkB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,aAAKlB,QAAL,CAAc;AAAES,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,aAAKT,QAAL,CAAc;AAAEI,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA,aAAKJ,QAAL,CAAc;AAAEe,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA,aAAKf,QAAL,CAAc;AAAEc,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA,aAAKd,QAAL,CAAc;AAAEiB,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA,aAAKjB,QAAL,CAAc;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACA,aAAKV,QAAL,CAAc;AAAEgB,UAAAA,UAAU,EAAE;AAAd,SAAd,EA/DkV,CAgElV;AAEA;AACA;AACH,OApED,MAqEK;AACD,aAAKU,QAAL,CAAcC,IAAd,CAAmB;AAAEC,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,OAAO,EAAE,gBAA9B;AAAgDC,UAAAA,MAAM,EAAE;AAAxD,SAAnB;AACH;AAEJ;AAED;;AAtVJ;AAAA;AAAA,WAuVI,6BAAoB;AAAA;;AAChB,UAAMS,aAAa,GAAG,EAAtB;AACAlF,MAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,cAAxB,EAAwCkC,EAAxC,CAA2C,OAA3C,EAAoD,UAAUL,QAAV,EAAoB;AACpEA,QAAAA,QAAQ,CAACM,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtCH,UAAAA,aAAa,CAACI,IAAd,CAAmBD,aAAa,CAACE,MAAd,EAAnB;AACH,SAFD;AAGH,OAJD;AAKA,WAAK5C,QAAL,CAAc;AAAEtC,QAAAA,SAAS,EAAE6E;AAAb,OAAd;AACA,WAAKvC,QAAL,CAAc;AAAEpC,QAAAA,WAAW,EAAE2E;AAAf,OAAd;AACA,UAAMM,UAAU,GAAG,EAAnB;AACAxF,MAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,EAAmCkC,EAAnC,CAAsC,OAAtC,EAA+C,UAAUL,QAAV,EAAoB;AAC/DA,QAAAA,QAAQ,CAACM,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtCG,UAAAA,UAAU,CAACF,IAAX,CAAgBD,aAAa,CAACE,MAAd,EAAhB;AACH,SAFD;AAGH,OAJD;AAKA,WAAK5C,QAAL,CAAc;AAAErC,QAAAA,MAAM,EAAEkF;AAAV,OAAd;AACA,UAAIlD,KAAK,GAAG,CAAZ;AACAtC,MAAAA,QAAQ,CAACgD,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,EAAoC2B,IAApC,CAAyC,OAAzC,EACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,QAAA,MAAI,CAACnC,QAAL,CAAc;AAAEhC,UAAAA,OAAO,EAAEmE,QAAQ,CAACC,GAAT;AAAX,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,MAAI,CAAC7E,KAAL,CAAWO,OAA9C;AACA2B,QAAAA,KAAK,GAAGwC,QAAQ,CAACC,GAAT,EAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAQ,CAACC,GAAT,EAAlC;AACH,OANL,EAjBgB,CAwBhB;;AACA,WAAKpC,QAAL,CAAc;AAAEhC,QAAAA,OAAO,EAAE2B;AAAX,OAAd;AACH;AAjXL;AAAA;AAAA,WAmXI,kBAAS;AAAA;;AACL,UAAImD,MAAM,gBAAG;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACA,UAAI9C,UAAU,GAAG,KAAKxC,KAAL,CAAWK,cAA5B,CAFK,CAGL;;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAFJ,eAII;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAW0D,IAA7B;AAAmC,QAAA,EAAE,EAAC,WAAtC;AAAkD,QAAA,IAAI,EAAC,MAAvD;AAA8D,QAAA,QAAQ,EAAE,kBAAC6B,CAAD,EAAO;AAAE,UAAA,MAAI,CAACC,iBAAL,CAAuBD,CAAC,CAACE,MAAF,CAASlE,KAAhC;AAAyC,SAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,eAKI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWoD,YAA7B;AAA2C,QAAA,EAAE,EAAC,UAA9C;AAAyD,QAAA,IAAI,EAAC,MAA9D;AAAqE,QAAA,QAAQ,EAAE,kBAACmC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACG,yBAAL,CAA+BH,CAAC,CAACE,MAAF,CAASlE,KAAxC;AAAiD,SAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALJ,eASI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWgD,KAA7B;AAAoC,QAAA,EAAE,EAAC,OAAvC;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,QAAQ,EAAE,kBAACuC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACI,kBAAL,CAAwBJ,CAAC,CAACE,MAAF,CAASlE,KAAjC;AAA0C,SAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CATJ,eAaI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWmD,KAA7B;AAAoC,QAAA,EAAE,EAAC,UAAvC;AAAkD,QAAA,IAAI,EAAC,MAAvD;AAA8D,QAAA,QAAQ,EAAE,kBAACoC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACK,kBAAL,CAAwBL,CAAC,CAACE,MAAF,CAASlE,KAAjC;AAA0C,SAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAbJ,eAiBI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWkD,KAA7B;AAAoC,QAAA,EAAE,EAAC,UAAvC;AAAkD,QAAA,IAAI,EAAC,MAAvD;AAA8D,QAAA,QAAQ,EAAE,kBAACqC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACM,kBAAL,CAAwBN,CAAC,CAACE,MAAF,CAASlE,KAAjC;AAA0C,SAA3H;AAA6H,QAAA,WAAW,EAAC,6BAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAjBJ,eAuBI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAW8F,OAA7B;AAAsC,QAAA,EAAE,EAAC,YAAzC;AAAsD,QAAA,IAAI,EAAC,MAA3D;AAAkE,QAAA,QAAQ,EAAE,kBAACP,CAAD,EAAO;AAAE,UAAA,MAAI,CAACQ,oBAAL,CAA0BR,CAAC,CAACE,MAAF,CAASlE,KAAnC;AAA4C,SAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAvBJ,eA4BI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWgG,IAA7B;AAAmC,QAAA,EAAE,EAAC,YAAtC;AAAmD,QAAA,IAAI,EAAC,MAAxD;AAA+D,QAAA,QAAQ,EAAE,kBAACT,CAAD,EAAO;AAAE,UAAA,MAAI,CAACU,iBAAL,CAAuBV,CAAC,CAACE,MAAF,CAASlE,KAAhC;AAAyC,SAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5BJ,eAgCI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWA,KAA7B;AAAoC,QAAA,EAAE,EAAC,YAAvC;AAAoD,QAAA,IAAI,EAAC,MAAzD;AAAgE,QAAA,QAAQ,EAAE,kBAACuF,CAAD,EAAO;AAAE,UAAA,MAAI,CAACW,kBAAL,CAAwBX,CAAC,CAACE,MAAF,CAASlE,KAAjC;AAA0C,SAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhCJ,eAoCI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWmG,WAA7B;AAA0C,QAAA,EAAE,EAAC,YAA7C;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,QAAQ,EAAE,kBAACZ,CAAD,EAAO;AAAE,UAAA,MAAI,CAACa,uBAAL,CAA6Bb,CAAC,CAACE,MAAF,CAASlE,KAAtC;AAA+C,SAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,SApCJ,eAyCI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWuD,UAA5B;AAAwC,QAAA,OAAO,EAAE,KAAKvD,KAAL,CAAW0B,SAA5D;AAAuE,QAAA,QAAQ,EAAE,kBAAC6D,CAAD,EAAO;AAAE,UAAA,MAAI,CAACc,sBAAL,CAA4Bd,CAAC,CAACE,MAAF,CAASlE,KAArC;AAA8C,SAAxI;AAA0I,QAAA,WAAW,EAAC,kBAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAzCJ,eA6CI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWyD,MAA5B;AAAoC,QAAA,OAAO,EAAE,KAAKzD,KAAL,CAAW0B,SAAxD;AAAmE,QAAA,QAAQ,EAAE,kBAAC6D,CAAD,EAAO;AAAE,UAAA,MAAI,CAACe,mBAAL,CAAyBf,CAAC,CAACE,MAAF,CAASlE,KAAlC;AAA2C,SAAjI;AAAmI,QAAA,WAAW,EAAC,kBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA7CJ,eAiDI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAEI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwD,WAA5B;AAAyC,QAAA,OAAO,EAAE,KAAKxD,KAAL,CAAWwB,cAA7D;AAA6E,QAAA,QAAQ,EAAE,kBAAC+D,CAAD,EAAO;AAAE,UAAA,MAAI,CAACzD,uBAAL,CAA6ByD,CAAC,CAACE,MAAF,CAASlE,KAAtC;AAA+C,SAA/I;AAAiJ,QAAA,WAAW,EAAC,oBAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAjDJ,eAsDI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWiD,QAA7B;AAAuC,QAAA,EAAE,EAAC,UAA1C;AAAqD,QAAA,IAAI,EAAC,MAA1D;AAAiE,QAAA,QAAQ,EAAE,kBAACsC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACgB,qBAAL,CAA2BhB,CAAC,CAACE,MAAF,CAASlE,KAApC;AAA6C,SAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAtDJ,eA0DI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWqD,WAA7B;AAA0C,QAAA,EAAE,EAAC,aAA7C;AAA2D,QAAA,IAAI,EAAC,MAAhE;AAAuE,QAAA,QAAQ,EAAE,kBAACkC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACiB,uBAAL,CAA6BjB,CAAC,CAACE,MAAF,CAASlE,KAAtC;AAA+C,SAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA1DJ,eA8DI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWsD,WAA7B;AAA0C,QAAA,EAAE,EAAC,aAA7C;AAA2D,QAAA,IAAI,EAAC,MAAhE;AAAuE,QAAA,QAAQ,EAAE,kBAACiC,CAAD,EAAO;AAAE,UAAA,MAAI,CAACkB,uBAAL,CAA6BlB,CAAC,CAACE,MAAF,CAASlE,KAAtC;AAA+C,SAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA9DJ,eAoEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEmF,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,eAAe,EAAE,SAAnC;AAA8CC,UAAAA,WAAW,EAAE,SAA3D;AAAsEC,UAAAA,SAAS,EAAE;AAAjF,SAA7B;AAAoH,QAAA,KAAK,EAAC,WAA1H;AAAsI,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAAC7E,YAAL;AAAqB,SAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CApEJ,eAuEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,aAAC8E,EAAD;AAAA,iBAAQ,MAAI,CAAC7C,QAAL,GAAgB6C,EAAxB;AAAA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAvEJ,CAJJ,CADJ;AAwFH;AAhdL;;AAAA;AAAA,EAA+B7H,SAA/B","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { Chart } from 'primereact/chart'\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class AddOrders extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            orders: [],\n            bulk_orders: [],\n            selectedCustomer: null,\n            selectedOrders: null,\n            editing: false,\n            idcount: null,\n            newfirstname: null,\n            newlastname: null,\n            newid: null,\n            newplanYear: null,\n            newplanQuarter: null,\n            newmax: null,\n            newreshall: null,\n            newphone: null,\n            newemail: null,\n            newaddress: null,\n            newcity: null,\n            newstate: null,\n            newpostalcode: null,\n            planSelectYear: [\n                { label: '2020-2021', value: '2020-2021' },\n                { label: '2021-2022', value: '2021-2022' },\n                { label: '2022-2023', value: '2022-2023' },\n                { label: '2023-2024', value: '2023-2024' }\n            ],\n            planTeamMember: [\n                { label: 'Caden Gaviria', value: 'Caden Gaviria' },\n                { label: 'Philippe Manzone', value: 'Philippe Manzone' },\n                { label: 'Alec Aragon', value: 'Alec Aragon' },\n                { label: 'Shannon Groves', value: 'Shannon Groves' },\n                { label: 'Ali Kilic', value: 'Ali Kilic' }\n            ],\n            planSelectStatus: [\n                { label: 'Confirmed', value: 'confirmed' },\n                { label: 'In Production', value: 'in production' },\n                { label: 'Invoiced', value: 'invoiced' },\n                { label: 'Fulfilled', value: 'fulfilled' },\n                { label: 'Shipped', value: 'Shipped' },\n                { label: 'Quote', value: 'quote' }\n            ],\n            planYesNo: [\n                { label: 'Yes', value: 'Yes' },\n                { label: 'No', value: 'No' }\n            ]\n\n        };\n        this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.onTeamMemberValueChange = this.onTeamMemberValueChange.bind(this)\n        this.resetNewInfo = this.resetNewInfo.bind(this)\n        this.addBulkOrder = this.addBulkOrder.bind(this)\n        this.padId = this.padId.bind(this)\n    }\n\n\n    padId(idNum) {\n        var digitLength = (idNum.toString()).length;\n        if (digitLength === 1) {\n            var result = '0000' + idNum;\n        }\n        else if (digitLength === 2) {\n            var result = '000' + idNum;\n        }\n        else if (digitLength === 3) {\n            var result = '00' + idNum;\n        }\n        else if (digitLength === 4) {\n            var result = '0' + idNum;\n        }\n        else if (digitLength === 5) {\n            var result = idNum.toString();\n        }\n        return result;\n\n    }\n    edit() {\n        this.setState({ editing: true });\n        //this.resetNewInfo();\n    }\n\n    save(bulk_order) {\n        this.setState({ editing: false });\n        //console.log(this.state.newplan)\n        let allbulkorders = [...this.state.bulk_orders];\n        let newbulkorder = { ...this.state.selectedOrders };\n\n        if (this.state.newaddress && this.state.newcity && this.state.newstate && this.state.newpostalcode) {\n            newbulkorder.ship_address = this.state.newaddress + this.state.newcity + this.state.newstate + this.state.newpostalcode;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/ship_address').set(newbulkorder.ship_address);\n        }\n\n        if (this.state.blank) {\n            newbulkorder.blank = this.state.blank;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/blank').set(newbulkorder.blank);\n        }\n        if (this.state.quantity) {\n            newbulkorder.quantity = this.state.quantity;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/quantity').set(newbulkorder.quantity);\n        }\n        if (this.state.phone) {\n            newbulkorder.phone = this.state.phone;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/phone').set(newbulkorder.phone);\n        }\n        if (this.state.email) {\n            newbulkorder.email = this.state.email;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/email').set(newbulkorder.email)\n        }\n        if (this.state.organization) {\n            newbulkorder.organization = this.state.organization;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/organization').set(newbulkorder.organization)\n        }\n        if (this.state.order_quote) {\n            newbulkorder.order_quote = this.state.order_quote;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/order_quote').set(newbulkorder.order_quote)\n        }\n        if (this.state.final_total) {\n            newbulkorder.final_total = this.state.final_total;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/final_total').set(newbulkorder.final_total)\n        }\n        if (this.state.tax_exempt) {\n            newbulkorder.tax_exempt = this.state.tax_exempt;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/tax_exempt').set(newbulkorder.tax_exempt)\n        }\n        if (this.state.team_member) {\n            newbulkorder.order_quote = this.state.team_member;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/team_member').set(newbulkorder.team_member)\n        }\n        if (this.state.design) {\n            newbulkorder.design = this.state.design;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/design').set(newbulkorder.design)\n        }\n        if (this.state.name) {\n            newbulkorder.name = this.state.name;\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/name').set(newbulkorder.name)\n            firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/status').set('invoiced')\n        }\n\n        let count = 0;\n        let individual = null;\n        allbulkorders.map(each => {\n            if (newbulkorder.order_id == each.order_id) {\n                individual = { ...allbulkorders[count] };\n                individual = newbulkorder;\n                allbulkorders[count] = individual;\n            }\n            count = count + 1\n        })\n        this.setState({ bulk_orders: allbulkorders });\n        this.setState({ selectedOrders: newbulkorder });\n\n    }\n\n    //CUSTOMER INFORMATION EDITING\n    onNameValueChange(value) {\n        //console.log('new first name: ', value)\n        this.setState({ name: value });\n\n    }\n\n    onTeamMemberValueChange(value) {\n        //console.log('newPlanYear: ', value)\n        this.setState({ team_member: value });\n    }\n    onBlankValueChange(value) {\n        //console.log('newPlanQuarter: ', value)\n        this.setState({ blank: value });\n    }\n    onDesignValueChange(value) {\n        this.setState({ design: value });\n    }\n    onOrganizationValueChange(value) {\n        this.setState({ organization: value });\n    }\n    onTaxExemptValueChange(value) {\n        this.setState({ tax_exempt: value });\n    }\n    onQuantityValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ quantity: \"NA\" })\n        }\n        else {\n            this.setState({ quantity: value });\n        }\n    }\n    onOrderQuoteValueChange(value) {\n        //try, execept \n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ order_quote: \"NA\" })\n        }\n        else {\n            this.setState({ order_quote: value });\n        }\n    }\n    onFinalTotalValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ final_total: \"NA\" })\n        }\n        else {\n            this.setState({ final_total: value });\n        }\n    }\n    onPhoneValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ phone: \"NA\" })\n        } else {\n            if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n                this.setState({ phone: value });\n            }\n        }\n        //this.setState({ phone: value });\n        // if value == NA: set to NA; conver to uppercase\n        // else; cast as float\n\n    }\n    onEmailValueChange(value) {\n        if (value.includes('@') && value.includes('.')) {\n            this.setState({ email: value });\n        }\n    }\n    onAddressValueChange(value) {\n        this.setState({ newaddress: value });\n    }\n    onCityValueChange(value) {\n        this.setState({ newcity: value });\n    }\n    onStateValueChange(value) {\n        this.setState({ newstate: value });\n    }\n    onPostalCodeValueChange(value) {\n        this.setState({ newpostalcode: value });\n    }\n    resetNewInfo() {\n        this.setState({ name: '' });\n        this.setState({ team_member: '' });\n        this.setState({ blank: '' });\n        this.setState({ design: '' });\n        this.setState({ organization: '' });\n        this.setState({ tax_exempt: '' });\n        this.setState({ quantity: '' });\n        this.setState({ quantity: '' });\n        this.setState({ order_quote: '' });\n        this.setState({ final_total: '' });\n        this.setState({ phone: '' });\n        this.setState({ email: '' });\n        this.setState({ newaddress: '' });\n        this.setState({ newstate: '' });\n        this.setState({ newcity: '' });\n        this.setState({ newpostalcode: '' });\n    }\n\n    addBulkOrder() {\n        //console.log('new first name: ', this.state.newfirstname);\n        //console.log('new last name: ', this.state.newlastname);\n        // console.log('new plan year: ', this.state.newplanyear);\n        // console.log('new plan quarter: ', this.state.newplanquarter);\n        // console.log('new max weight: ', this.state.newmax);\n        // console.log('new res hall: ', this.state.newreshall);\n        // console.log('new phone: ', this.state.newphone);\n        // console.log('new email: ', this.state.newemail);\n        //this.setState({idcount: this.state.idcount+1});\n        //console.log('updated id Count', this.state.idcount);\n        if (this.state.name !== '' && this.state.organization !== '' && this.state.email !== '' && this.state.phone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n\n            var idNum = this.padId(this.state.idcount);\n            // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n            var order_id = this.state.idcount;\n            //console.log('NEW ID: ', order_id);\n            this.messages.show({ severity: 'success', summary: 'Success', detail: 'Order Added!' });\n            const db = firebase.database().ref()\n            //updating order_id count in firebase and then updating state variable\n            db.child('/idcount').set(this.state.idcount + 1);\n            db.child('/idcount').once('value')\n                .then(snapshot => {\n                    this.setState({ idcount: snapshot.val() })\n                    console.log('state var idcount: ', this.state.idcount);\n                    //idNum = snapshot.val();\n                    console.log('id from firebase: ', snapshot.val());\n                });\n\n            const name = this.state.name;\n            const email = this.state.email\n            const phone = this.state.phone\n            const organization = this.state.organization\n            const design = this.state.design\n            const blank = this.state.blank\n            const quantity = this.state.quantity\n            const ship_address = this.state.newaddress + ' ' + this.state.newcity + ' ' + this.state.newstate + ' ' + this.state.newpostalcode\n            const final_total = this.state.final_total\n            const order_quote = this.state.order_quote\n            const team_member = this.state.team_member\n            const tax_exempt = this.state.tax_exempt\n            db.child('/bulk_orders/' + order_id).once(\"value\")\n                .then(snapshot => {\n                    if (!snapshot.val()) {\n                        db.child('/bulk_orders/' + order_id + '/active').set(\"Yes\");\n                        db.child('/bulk_orders/' + order_id + '/status').set(\"Quote\");\n                        db.child('/bulk_orders/' + order_id + '/email').set(email);\n                        db.child('/bulk_orders/' + order_id + '/order_id').set(order_id.toString());\n                        db.child('/bulk_orders/' + order_id + '/last_status_updated').set('N/A');\n                        db.child('/bulk_orders/' + order_id + '/name').set(name);\n                        db.child('/bulk_orders/' + order_id + '/phone').set(phone);\n                        db.child('/bulk_orders/' + order_id + '/organization').set(organization);\n                        db.child('/bulk_orders/' + order_id + '/design').set(design);\n                        db.child('/bulk_orders/' + order_id + '/blank').set(blank);\n                        db.child('/bulk_orders/' + order_id + '/ship_address').set(ship_address);\n                        db.child('/bulk_orders/' + order_id + '/final_total').set(final_total);\n                        db.child('/bulk_orders/' + order_id + '/order_quote').set(order_quote);\n                        db.child('/bulk_orders/' + order_id + '/team_member').set(team_member);\n                        db.child('/bulk_orders/' + order_id + '/quantity').set(quantity);\n                        db.child('/bulk_orders/' + order_id + '/tax_exempt').set(tax_exempt);\n\n                    }\n                })\n\n            this.setState({ email: '' });\n            this.setState({ phone: '' });\n            this.setState({ organization: '' });\n            this.setState({ design: '' });\n            this.setState({ blank: '' });\n            this.setState({ ship_address: '' });\n            this.setState({ final_total: '' });\n            this.setState({ order_quote: '' });\n            this.setState({ team_member: '' });\n            this.setState({ quantity: '' });\n            this.setState({ tax_exempt: '' });\n            //const curr  = await this.resetNewInfo();\n\n            //console.log('reset info: ', this.state.newfirstname);\n            //document.getElementById(\"form\").reset();\n        }\n        else {\n            this.messages.show({ severity: \"error\", summary: \"Missing Fields\", detail: \"Please enter all information\" });\n        }\n\n    }\n\n    /* --------------- Filters ---------------- */\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ customers: customerArray });\n        this.setState({ bulk_orders: customerArray });\n        const orderArray = [];\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                orderArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ orders: orderArray });\n        var idNum = 0;\n        firebase.database().ref('/idcount').once('value')\n            .then(snapshot => {\n                this.setState({ idcount: snapshot.val() })\n                console.log('state var idcount: ', this.state.idcount);\n                idNum = snapshot.val();\n                console.log('id from firebase: ', snapshot.val());\n            });\n        //console.log('var idNum: ', idNum);\n        this.setState({ idcount: idNum });\n    }\n\n    render() {\n        var header = <div style={{ textAlign: 'left' }}></div>\n        var bulk_order = this.state.selectedOrders\n        //var history = this.getCustomerHistory(customer)\n\n        return (\n            <div className=\"card\" id=\"form\">\n                <h1>Add New Order Inquiry</h1>\n                <p>Use this form to enter all information about a new order or order inquiry</p>\n\n                <div className=\"p-fluid p-formgrid p-grid\">\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Name</label>\n                        <InputText value={this.state.name} id=\"firstname\" type=\"text\" onChange={(e) => { this.onNameValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Organization</label>\n                        <InputText value={this.state.organization} id=\"lastname\" type=\"text\" onChange={(e) => { this.onOrganizationValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Blank</label>\n                        <InputText value={this.state.blank} id=\"blank\" type=\"text\" onChange={(e) => { this.onBlankValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-6\">\n                        <label htmlFor=\"firstname6\">Email</label>\n                        <InputText value={this.state.email} id=\"newemail\" type=\"text\" onChange={(e) => { this.onEmailValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-6\">\n                        <label htmlFor=\"firstname6\">Phone</label>\n                        <InputText value={this.state.phone} id=\"newphone\" type=\"text\" onChange={(e) => { this.onPhoneValueChange(e.target.value); }} placeholder='Type Phone Number or \"NA\"' />\n                    </div>\n\n\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"address\">Address</label>\n                        <InputText value={this.state.address} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onAddressValueChange(e.target.value); }} />\n\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"lastname6\">City</label>\n                        <InputText value={this.state.city} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onCityValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"city\">State</label>\n                        <InputText value={this.state.state} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onStateValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"state\">Postal Code</label>\n                        <InputText value={this.state.postal_code} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onPostalCodeValueChange(e.target.value); }} />    </div>\n\n\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Tax-Exempt</label>\n                        <Dropdown value={this.state.tax_exempt} options={this.state.planYesNo} onChange={(e) => { this.onTaxExemptValueChange(e.target.value); }} placeholder='Select Yes or No' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Design</label>\n                        <Dropdown value={this.state.design} options={this.state.planYesNo} onChange={(e) => { this.onDesignValueChange(e.target.value); }} placeholder='Select Yes or No' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstnames6\">Assigned Ink Tank Team Member</label>\n                        <Dropdown value={this.state.team_member} options={this.state.planTeamMember} onChange={(e) => { this.onTeamMemberValueChange(e.target.value); }} placeholder='Select Team Member' />\n\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Quantity</label>\n                        <InputText value={this.state.quantity} id=\"quantity\" type=\"text\" onChange={(e) => { this.onQuantityValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Order Quote</label>\n                        <InputText value={this.state.order_quote} id=\"order_quote\" type=\"text\" onChange={(e) => { this.onOrderQuoteValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Final Total</label>\n                        <InputText value={this.state.final_total} id=\"final_total\" type=\"text\" onChange={(e) => { this.onFinalTotalValueChange(e.target.value); }} />\n                    </div>\n\n\n                    <div className=\"p-field p-col-12\">\n                        <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} label=\"ADD ORDER\" onClick={() => { this.addBulkOrder() }} />\n                    </div>\n                    <div className=\"p-field p-col-12\">\n                        <Messages ref={(el) => this.messages = el}></Messages>\n                    </div>\n\n\n                </div>\n            </div>\n        );\n\n\n\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}