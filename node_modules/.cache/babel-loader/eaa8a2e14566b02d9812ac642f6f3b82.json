{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Chips = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _InputText = require(\"../inputtext/InputText\");\n\nvar _DomHandler = _interopRequireDefault(require(\"../utils/DomHandler\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"../tooltip/Tooltip\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Chips = /*#__PURE__*/function (_Component) {\n  _inherits(Chips, _Component);\n\n  function Chips(props) {\n    var _this;\n\n    _classCallCheck(this, Chips);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chips).call(this, props));\n    _this.focusInput = _this.focusInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chips, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var isValueSame = this.props.value && prevProps.value.length === this.props.value.length;\n\n      if (this.props.tooltip) {\n        if (prevProps.tooltip !== this.props.tooltip) {\n          if (this.tooltip) this.tooltip.updateContent(this.props.tooltip);else this.renderTooltip();\n        } else if (!isValueSame && this.tooltip) {\n          this.tooltip.deactivate();\n          this.tooltip.activate();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = new _Tooltip.default({\n        target: this.inputElement,\n        targetContainer: this.listElement,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(event, index) {\n      if (this.props.disabled) {\n        return;\n      }\n\n      var values = _toConsumableArray(this.props.value);\n\n      var removedItem = values.splice(index, 1);\n\n      if (this.props.onRemove) {\n        this.props.onRemove({\n          originalEvent: event,\n          value: removedItem\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange({\n          originalEvent: event,\n          value: values,\n          stopPropagation: function stopPropagation() {},\n          preventDefault: function preventDefault() {},\n          target: {\n            name: this.props.name,\n            id: this.props.id,\n            value: values\n          }\n        });\n      }\n    }\n  }, {\n    key: \"focusInput\",\n    value: function focusInput() {\n      this.inputElement.focus();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var inputValue = event.target.value;\n\n      switch (event.which) {\n        //backspace\n        case 8:\n          if (this.inputElement.value.length === 0 && this.props.value && this.props.value.length > 0) {\n            this.removeItem(event, this.props.value.length - 1);\n          }\n\n          break;\n        //enter\n\n        case 13:\n          if (inputValue && inputValue.trim().length && (!this.props.max || this.props.max > this.props.value.length)) {\n            var values = _toConsumableArray(this.props.value);\n\n            values.push(inputValue);\n            this.setState({\n              values: values\n            });\n\n            if (this.props.onAdd) {\n              this.props.onAdd({\n                originalEvent: event,\n                value: inputValue\n              });\n            }\n\n            if (this.props.onChange) {\n              this.props.onChange({\n                originalEvent: event,\n                value: values,\n                stopPropagation: function stopPropagation() {},\n                preventDefault: function preventDefault() {},\n                target: {\n                  name: this.props.name,\n                  id: this.props.id,\n                  value: values\n                }\n              });\n            }\n          }\n\n          this.inputElement.value = '';\n          event.preventDefault();\n          break;\n\n        default:\n          if (this.isMaxedOut()) {\n            event.preventDefault();\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(event) {\n      _DomHandler.default.addClass(this.listElement, 'p-focus');\n\n      if (this.props.onFocus) {\n        this.props.onFocus(event);\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(event) {\n      _DomHandler.default.removeClass(this.listElement, 'p-focus');\n\n      if (this.props.onBlur) {\n        this.props.onBlur(event);\n      }\n    }\n  }, {\n    key: \"isMaxedOut\",\n    value: function isMaxedOut() {\n      return this.props.max && this.props.value && this.props.max === this.props.value.length;\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(value, index) {\n      var _this2 = this;\n\n      var content = this.props.itemTemplate ? this.props.itemTemplate(value) : value;\n      var icon = this.props.disabled ? null : _react.default.createElement(\"span\", {\n        className: \"p-chips-token-icon pi pi-fw pi-times\",\n        onClick: function onClick(event) {\n          return _this2.removeItem(event, index);\n        }\n      });\n      return _react.default.createElement(\"li\", {\n        key: index,\n        className: \"p-chips-token p-highlight\"\n      }, icon, _react.default.createElement(\"span\", {\n        className: \"p-chips-token-label\"\n      }, content));\n    }\n  }, {\n    key: \"renderInputElement\",\n    value: function renderInputElement() {\n      var _this3 = this;\n\n      return _react.default.createElement(\"li\", {\n        className: \"p-chips-input-token\"\n      }, _react.default.createElement(_InputText.InputText, {\n        ref: function ref(el) {\n          return _this3.inputElement = _reactDom.default.findDOMNode(el);\n        },\n        placeholder: this.props.placeholder,\n        type: \"text\",\n        name: this.props.name,\n        disabled: this.props.disabled || this.isMaxedOut(),\n        onKeyDown: this.onKeyDown,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }));\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this4 = this;\n\n      if (this.props.value) {\n        return this.props.value.map(function (value, index) {\n          return _this4.renderItem(value, index);\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this5 = this;\n\n      var className = (0, _classnames.default)('p-inputtext', {\n        'p-disabled': this.props.disabled\n      });\n      var items = this.renderItems();\n      var inputElement = this.renderInputElement();\n\n      if (this.props.value) {\n        return _react.default.createElement(\"ul\", {\n          ref: function ref(el) {\n            return _this5.listElement = el;\n          },\n          className: className,\n          onClick: this.focusInput\n        }, items, inputElement);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var className = (0, _classnames.default)('p-chips p-component', this.props.className);\n      var list = this.renderList();\n      return _react.default.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this6.element = el;\n        },\n        id: this.props.id,\n        className: className,\n        style: this.props.style\n      }, list);\n    }\n  }]);\n\n  return Chips;\n}(_react.Component);\n\nexports.Chips = Chips;\n\n_defineProperty(Chips, \"defaultProps\", {\n  id: null,\n  name: null,\n  placeholder: null,\n  value: null,\n  max: null,\n  disabled: null,\n  style: null,\n  className: null,\n  tooltip: null,\n  tooltipOptions: null,\n  itemTemplate: null,\n  onAdd: null,\n  onRemove: null,\n  onChange: null,\n  onFocus: null,\n  onBlur: null\n});\n\n_defineProperty(Chips, \"propTypes\", {\n  id: _propTypes.default.string,\n  name: _propTypes.default.string,\n  placeholder: _propTypes.default.string,\n  value: _propTypes.default.array,\n  max: _propTypes.default.number,\n  disabled: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  tooltip: _propTypes.default.string,\n  tooltipOptions: _propTypes.default.object,\n  itemTemplate: _propTypes.default.func,\n  onAdd: _propTypes.default.func,\n  onRemove: _propTypes.default.func,\n  onChange: _propTypes.default.func,\n  onFocus: _propTypes.default.func,\n  onBlur: _propTypes.default.func\n});","map":null,"metadata":{},"sourceType":"script"}