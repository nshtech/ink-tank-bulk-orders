{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Paginator = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _FirstPageLink = require(\"./FirstPageLink\");\n\nvar _NextPageLink = require(\"./NextPageLink\");\n\nvar _PrevPageLink = require(\"./PrevPageLink\");\n\nvar _LastPageLink = require(\"./LastPageLink\");\n\nvar _PageLinks = require(\"./PageLinks\");\n\nvar _RowsPerPageDropdown = require(\"./RowsPerPageDropdown\");\n\nvar _CurrentPageReport = require(\"./CurrentPageReport\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Paginator = /*#__PURE__*/function (_Component) {\n  _inherits(Paginator, _Component);\n\n  function Paginator(props) {\n    var _this;\n\n    _classCallCheck(this, Paginator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Paginator).call(this, props));\n    _this.changePageToFirst = _this.changePageToFirst.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changePageToPrev = _this.changePageToPrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changePageToNext = _this.changePageToNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changePageToLast = _this.changePageToLast.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRowsChange = _this.onRowsChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPageLinkClick = _this.onPageLinkClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Paginator, [{\n    key: \"isFirstPage\",\n    value: function isFirstPage() {\n      return this.getPage() === 0;\n    }\n  }, {\n    key: \"isLastPage\",\n    value: function isLastPage() {\n      return this.getPage() === this.getPageCount() - 1;\n    }\n  }, {\n    key: \"getPageCount\",\n    value: function getPageCount() {\n      return Math.ceil(this.props.totalRecords / this.props.rows) || 1;\n    }\n  }, {\n    key: \"calculatePageLinkBoundaries\",\n    value: function calculatePageLinkBoundaries() {\n      var numberOfPages = this.getPageCount();\n      var visiblePages = Math.min(this.props.pageLinkSize, numberOfPages); //calculate range, keep current in middle if necessary\n\n      var start = Math.max(0, Math.ceil(this.getPage() - visiblePages / 2));\n      var end = Math.min(numberOfPages - 1, start + visiblePages - 1); //check when approaching to last page\n\n      var delta = this.props.pageLinkSize - (end - start + 1);\n      start = Math.max(0, start - delta);\n      return [start, end];\n    }\n  }, {\n    key: \"updatePageLinks\",\n    value: function updatePageLinks() {\n      var pageLinks = [];\n      var boundaries = this.calculatePageLinkBoundaries();\n      var start = boundaries[0];\n      var end = boundaries[1];\n\n      for (var i = start; i <= end; i++) {\n        pageLinks.push(i + 1);\n      }\n\n      return pageLinks;\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(first, rows) {\n      var pc = this.getPageCount();\n      var p = Math.floor(first / rows);\n\n      if (p >= 0 && p < pc) {\n        var newPageState = {\n          first: first,\n          rows: rows,\n          page: p,\n          pageCount: pc\n        };\n\n        if (this.props.onPageChange) {\n          this.props.onPageChange(newPageState);\n        }\n      }\n    }\n  }, {\n    key: \"getPage\",\n    value: function getPage() {\n      return Math.floor(this.props.first / this.props.rows);\n    }\n  }, {\n    key: \"changePageToFirst\",\n    value: function changePageToFirst(event) {\n      this.changePage(0, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"changePageToPrev\",\n    value: function changePageToPrev(event) {\n      this.changePage(this.props.first - this.props.rows, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onPageLinkClick\",\n    value: function onPageLinkClick(event) {\n      this.changePage((event.value - 1) * this.props.rows, this.props.rows);\n    }\n  }, {\n    key: \"changePageToNext\",\n    value: function changePageToNext(event) {\n      this.changePage(this.props.first + this.props.rows, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"changePageToLast\",\n    value: function changePageToLast(event) {\n      this.changePage((this.getPageCount() - 1) * this.props.rows, this.props.rows);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onRowsChange\",\n    value: function onRowsChange(event) {\n      this.changePage(0, event.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.alwaysShow && this.getPageCount() === 1) {\n        return null;\n      } else {\n        var className = (0, _classnames.default)('p-paginator p-component p-unselectable-text', this.props.className);\n        var paginatorElements = this.props.template.split(' ').map(function (value) {\n          var key = value.trim();\n          var element;\n\n          switch (key) {\n            case 'FirstPageLink':\n              element = _react.default.createElement(_FirstPageLink.FirstPageLink, {\n                key: key,\n                onClick: _this2.changePageToFirst,\n                disabled: _this2.isFirstPage()\n              });\n              break;\n\n            case 'PrevPageLink':\n              element = _react.default.createElement(_PrevPageLink.PrevPageLink, {\n                key: key,\n                onClick: _this2.changePageToPrev,\n                disabled: _this2.isFirstPage()\n              });\n              break;\n\n            case 'NextPageLink':\n              element = _react.default.createElement(_NextPageLink.NextPageLink, {\n                key: key,\n                onClick: _this2.changePageToNext,\n                disabled: _this2.isLastPage()\n              });\n              break;\n\n            case 'LastPageLink':\n              element = _react.default.createElement(_LastPageLink.LastPageLink, {\n                key: key,\n                onClick: _this2.changePageToLast,\n                disabled: _this2.isLastPage()\n              });\n              break;\n\n            case 'PageLinks':\n              element = _react.default.createElement(_PageLinks.PageLinks, {\n                key: key,\n                value: _this2.updatePageLinks(),\n                page: _this2.getPage(),\n                onClick: _this2.onPageLinkClick\n              });\n              break;\n\n            case 'RowsPerPageDropdown':\n              element = _react.default.createElement(_RowsPerPageDropdown.RowsPerPageDropdown, {\n                key: key,\n                value: _this2.props.rows,\n                options: _this2.props.rowsPerPageOptions,\n                onChange: _this2.onRowsChange\n              });\n              break;\n\n            case 'CurrentPageReport':\n              element = _react.default.createElement(_CurrentPageReport.CurrentPageReport, {\n                template: _this2.props.currentPageReportTemplate,\n                key: key,\n                page: _this2.getPage(),\n                pageCount: _this2.getPageCount()\n              });\n              break;\n\n            default:\n              element = null;\n              break;\n          }\n\n          return element;\n        });\n\n        var leftContent = this.props.leftContent && _react.default.createElement(\"div\", {\n          className: \"p-paginator-left-content\"\n        }, this.props.leftContent);\n\n        var rightContent = this.props.rightContent && _react.default.createElement(\"div\", {\n          className: \"p-paginator-right-content\"\n        }, this.props.rightContent);\n\n        return _react.default.createElement(\"div\", {\n          className: className,\n          style: this.props.style\n        }, leftContent, paginatorElements, rightContent);\n      }\n    }\n  }]);\n\n  return Paginator;\n}(_react.Component);\n\nexports.Paginator = Paginator;\n\n_defineProperty(Paginator, \"defaultProps\", {\n  totalRecords: 0,\n  rows: 0,\n  first: 0,\n  pageLinkSize: 5,\n  rowsPerPageOptions: null,\n  style: null,\n  className: null,\n  template: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown',\n  onPageChange: null,\n  leftContent: null,\n  rightContent: null,\n  currentPageReportTemplate: '({currentPage} of {totalPages})',\n  alwaysShow: true\n});\n\n_defineProperty(Paginator, \"propTypes\", {\n  totalRecords: _propTypes.default.number,\n  rows: _propTypes.default.number,\n  first: _propTypes.default.number,\n  pageLinkSize: _propTypes.default.number,\n  rowsPerPageOptions: _propTypes.default.array,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  template: _propTypes.default.string,\n  onPageChange: _propTypes.default.func,\n  leftContent: _propTypes.default.any,\n  rightContent: _propTypes.default.any,\n  currentPageReportTemplate: _propTypes.default.any,\n  alwaysShow: _propTypes.default.bool\n});","map":null,"metadata":{},"sourceType":"script"}