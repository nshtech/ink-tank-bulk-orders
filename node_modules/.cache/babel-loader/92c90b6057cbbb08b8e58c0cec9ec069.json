{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\nicol\\\\OneDrive\\\\Documents\\\\Nicole Documents\\\\Documents\\\\Northwestern\\\\Student Holdings\\\\ink-tank-bulk-orders\\\\src\\\\components\\\\AddOrders.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var AddOrders = /*#__PURE__*/function (_Component) {\n  _inherits(AddOrders, _Component);\n\n  var _super = _createSuper(AddOrders);\n\n  function AddOrders() {\n    var _this;\n\n    _classCallCheck(this, AddOrders);\n\n    _this = _super.call(this);\n    _this.state = {\n      customers: [],\n      orders: [],\n      selectedCustomer: null,\n      editing: false,\n      idcount: null,\n      newfirstname: null,\n      newlastname: null,\n      newid: null,\n      newplanYear: null,\n      newplanQuarter: null,\n      newmax: null,\n      newreshall: null,\n      newphone: null,\n      newemail: null,\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planSelectQuarter: [{\n        label: 'Full Year',\n        value: '-F-W-S'\n      }, {\n        label: 'Winter/Spring Quarter',\n        value: '-W-S'\n      }, {\n        label: 'Fall Quarter',\n        value: '-F'\n      }, {\n        label: 'Winter Quarter',\n        value: '-W'\n      }, {\n        label: 'Spring Quarter',\n        value: '-S'\n      }],\n      planSelectWeight: [{\n        label: '15 lb/week',\n        value: '15'\n      }, {\n        label: '20 lb/week',\n        value: '20'\n      }, {\n        label: '25 lb/week',\n        value: '25'\n      }],\n      planSelectReshall: [{\n        label: 'Choose later',\n        value: 'Choose later'\n      }, {\n        label: '560 Lincoln',\n        value: '560 Lincoln'\n      }, {\n        label: '720 Emerson',\n        value: '720 Emerson'\n      }, {\n        label: '1715 Chicago',\n        value: '1715 Chicago'\n      }, {\n        label: '1838 Chicago',\n        value: '1838 Chicago'\n      }, {\n        label: '1856 Orrington',\n        value: '1856 Orrington'\n      }, {\n        label: '2303 Sheridan',\n        value: '2303 Sheridan'\n      }, {\n        label: 'Ayers',\n        value: 'Ayers'\n      }, {\n        label: 'Allison',\n        value: 'Allison'\n      }, {\n        label: 'Bobb',\n        value: 'Bobb'\n      }, {\n        label: 'Chapin',\n        value: 'Chapin'\n      }, {\n        label: 'East Fairchild',\n        value: 'East Fairchild'\n      }, {\n        label: 'Elder',\n        value: 'Elder'\n      }, {\n        label: 'West Fairchild',\n        value: 'West Fairchild'\n      }, {\n        label: 'Foster-Walker (PLEX)',\n        value: 'Foster-Walker (PLEX)'\n      }, {\n        label: 'Goodrich',\n        value: 'Goodrich'\n      }, {\n        label: 'Hobart',\n        value: 'Hobart'\n      }, {\n        label: 'Jones',\n        value: 'Jones'\n      }, {\n        label: 'Kemper',\n        value: 'Kemper'\n      }, {\n        label: 'McCulloch',\n        value: 'McCulloch'\n      }, {\n        label: 'PARC (North Mid Quads)',\n        value: 'PARC (North Mid Quads)'\n      }, {\n        label: 'Rogers House',\n        value: 'Rogers House'\n      }, {\n        label: 'Sargent',\n        value: 'Sargent'\n      }, {\n        label: 'Shepard Residential College (South Mid Quads)',\n        value: 'Shepard Residential College (South Mid Quads)'\n      }, {\n        label: 'Shepard Hall',\n        value: 'Shepard Hall'\n      }, {\n        label: 'Slivka',\n        value: 'Slivka'\n      }, {\n        label: 'Willard',\n        value: 'Willard'\n      }, {\n        label: 'Delta Gamma',\n        value: 'Delta Gamma'\n      }, {\n        label: 'Kappa Kappa Gamma',\n        value: 'Kappa Kappa Gamma'\n      }, {\n        label: 'Zeta Beta Tau (ZBT)',\n        value: 'Zeta Beta Tau (ZBT)'\n      }]\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.save = _this.save.bind(_assertThisInitialized(_this));\n    _this.onPlanYearValueChange = _this.onPlanYearValueChange.bind(_assertThisInitialized(_this));\n    _this.onPlanQuarterValueChange = _this.onPlanQuarterValueChange.bind(_assertThisInitialized(_this)); //this.getCustomerHistory = this.getCustomerHistory.bind(this)\n\n    _this.displayPlanQuarters = _this.displayPlanQuarters.bind(_assertThisInitialized(_this));\n    _this.resetNewInfo = _this.resetNewInfo.bind(_assertThisInitialized(_this));\n    _this.addCustomer = _this.addCustomer.bind(_assertThisInitialized(_this));\n    _this.padId = _this.padId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddOrders, [{\n    key: \"padId\",\n    value: function padId(idNum) {\n      var digitLength = idNum.toString().length;\n\n      if (digitLength === 1) {\n        var result = '0000' + idNum;\n      } else if (digitLength === 2) {\n        var result = '000' + idNum;\n      } else if (digitLength === 3) {\n        var result = '00' + idNum;\n      } else if (digitLength === 4) {\n        var result = '0' + idNum;\n      } else if (digitLength === 5) {\n        var result = idNum.toString();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      }); //this.resetNewInfo();\n    }\n  }, {\n    key: \"save\",\n    value: function save(customer) {\n      this.setState({\n        editing: false\n      }); //console.log(this.state.newplan)\n\n      var allcustomers = _toConsumableArray(this.state.customers);\n\n      var newcustomer = _objectSpread({}, this.state.selectedCustomer);\n\n      if (this.state.newplanyear && this.state.newplanquarter) {\n        newcustomer.plan = this.state.newplanyear + this.state.newplanquarter; //console.log('newplanQuarter: ', this.state.newplanQuarter);\n        //console.log('newplanYear', this.state.newplanYear)\n\n        firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n      } else if (this.state.newplanyear) {\n        newcustomer.plan = this.state.newplanyear + customer.plan.substring(9); //console.log('newcustomer.plan: ', newcustomer.plan);\n        //console.log('newplanYear', this.state.newplanYear)\n        //console.log('customer quarter: ', customer.plan.substring(9));\n\n        firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n      } else if (this.state.newplanquarter) {\n        newcustomer.plan = customer.plan.substring(0, 9) + this.state.newplanquarter; //console.log('newcustomer.plan: ', newcustomer.plan);\n        //console.log('customer year', customer.plan.substring(0,9))\n        //console.log('newplanQuarter: ', this.state.newplanQuarter);\n\n        firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\n      }\n\n      if (this.state.newmax) {\n        newcustomer.maxweight = this.state.newmax;\n        firebase.database().ref('/customers/' + customer.id + '/maxweight').set(newcustomer.maxweight);\n      }\n\n      if (this.state.newreshall) {\n        newcustomer.reshall = this.state.newreshall;\n        firebase.database().ref('/customers/' + customer.id + '/reshall').set(newcustomer.reshall);\n      }\n\n      if (this.state.newphone) {\n        newcustomer.phone = this.state.newphone;\n        firebase.database().ref('/customers/' + customer.id + '/phone').set(newcustomer.phone);\n      }\n\n      if (this.state.newemail) {\n        newcustomer.email = this.state.newemail;\n        firebase.database().ref('/customers/' + customer.id + '/email').set(newcustomer.email);\n      }\n\n      var count = 0;\n      var individual = null;\n      allcustomers.map(function (each) {\n        if (newcustomer.id == each.id) {\n          individual = _objectSpread({}, allcustomers[count]);\n          individual = newcustomer;\n          allcustomers[count] = individual;\n        }\n\n        count = count + 1;\n      });\n      this.setState({\n        customers: allcustomers\n      });\n      this.setState({\n        selectedCustomer: newcustomer\n      });\n    } //CUSTOMER INFORMATION EDITING\n\n  }, {\n    key: \"onFirstNameValueChange\",\n    value: function onFirstNameValueChange(value) {\n      //console.log('new first name: ', value)\n      this.setState({\n        newfirstname: value\n      });\n    }\n  }, {\n    key: \"onLastNameValueChange\",\n    value: function onLastNameValueChange(value) {\n      //console.log('new last name: ', value)\n      this.setState({\n        newlastname: value\n      });\n    }\n  }, {\n    key: \"onIdValueChange\",\n    value: function onIdValueChange(value) {\n      //console.log('new id name: ', value)\n      this.setState({\n        newid: value\n      });\n    }\n  }, {\n    key: \"onPlanYearValueChange\",\n    value: function onPlanYearValueChange(value) {\n      //console.log('newPlanYear: ', value)\n      this.setState({\n        newplanyear: value\n      });\n    }\n  }, {\n    key: \"onPlanQuarterValueChange\",\n    value: function onPlanQuarterValueChange(value) {\n      //console.log('newPlanQuarter: ', value)\n      this.setState({\n        newplanquarter: value\n      });\n    }\n  }, {\n    key: \"onMaxweightValueChange\",\n    value: function onMaxweightValueChange(value) {\n      this.setState({\n        newmax: value\n      });\n    }\n  }, {\n    key: \"onReshallValueChange\",\n    value: function onReshallValueChange(value) {\n      this.setState({\n        newreshall: value\n      });\n    }\n  }, {\n    key: \"onPhoneValueChange\",\n    value: function onPhoneValueChange(value) {\n      if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n        this.setState({\n          newphone: value\n        });\n      } //this.setState({ newphone: value });\n\n    }\n  }, {\n    key: \"onEmailValueChange\",\n    value: function onEmailValueChange(value) {\n      if (value.includes('@') && value.includes('.')) {\n        this.setState({\n          newemail: value\n        });\n      }\n    }\n  }, {\n    key: \"resetNewInfo\",\n    value: function resetNewInfo() {\n      this.setState({\n        newfirstname: ''\n      });\n      this.setState({\n        newlastname: ''\n      });\n      this.setState({\n        newid: ''\n      });\n      this.setState({\n        newplanyear: ''\n      });\n      this.setState({\n        newplanquarter: ''\n      });\n      this.setState({\n        newmax: ''\n      });\n      this.setState({\n        newreshall: ''\n      });\n      this.setState({\n        newphone: ''\n      });\n      this.setState({\n        newemail: ''\n      });\n      this.setState({\n        newoverage: ''\n      });\n    }\n  }, {\n    key: \"addCustomer\",\n    value: function addCustomer() {\n      var _this2 = this;\n\n      //console.log('new first name: ', this.state.newfirstname);\n      //console.log('new last name: ', this.state.newlastname);\n      // console.log('new plan year: ', this.state.newplanyear);\n      // console.log('new plan quarter: ', this.state.newplanquarter);\n      // console.log('new max weight: ', this.state.newmax);\n      // console.log('new res hall: ', this.state.newreshall);\n      // console.log('new phone: ', this.state.newphone);\n      // console.log('new email: ', this.state.newemail);\n      //this.setState({idcount: this.state.idcount+1});\n      //console.log('updated id Count', this.state.idcount);\n      if (this.state.newfirstname !== '' && this.state.newlastname !== '' && this.state.newemail !== '' && this.state.newphone !== '' && this.state.newreshall !== '' && this.state.newmax !== '' && this.state.newplanyear !== null && this.state.newplanquarter !== null) {\n        var idNum = this.padId(this.state.idcount); // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n\n        var id = this.state.newid; //console.log('NEW ID: ', id);\n\n        this.messages.show({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Customer Added!'\n        });\n        var db = firebase.database().ref(); //updating id count in firebase and then updating state variable\n\n        db.child('/idcount').set(this.state.idcount + 1);\n        db.child('/idcount').once('value').then(function (snapshot) {\n          _this2.setState({\n            idcount: snapshot.val()\n          });\n\n          console.log('state var idcount: ', _this2.state.idcount); //idNum = snapshot.val();\n\n          console.log('id from firebase: ', snapshot.val());\n        });\n        var fullname = this.state.newfirstname + ' ' + this.state.newlastname;\n        var email = this.state.newemail;\n        var phone = this.state.newphone;\n        var reshall = this.state.newreshall;\n        var maxweight = this.state.newmax;\n        var plan = this.state.newplanyear + this.state.newplanquarter;\n        db.child('/customers/' + id).once(\"value\").then(function (snapshot) {\n          if (!snapshot.val()) {\n            db.child('/customers/' + id + '/activestatus').set(\"active\");\n            db.child('/customers/' + id + '/bag-condition').set(\"good\");\n            db.child('/customers/' + id + '/bag-missing').set(\"false\");\n            db.child('/customers/' + id + '/detergent').set('unscented');\n            db.child('/customers/' + id + '/email').set(email);\n            db.child('/customers/' + id + '/fabric_softener').set('No');\n            db.child('/customers/' + id + '/id').set(id);\n            db.child('/customers/' + id + '/last_status_updated').set('N/A');\n            db.child('/customers/' + id + '/last_weight_updated').set('N/A');\n            db.child('/customers/' + id + '/laundrystatus').set('out-of-service');\n            db.child('/customers/' + id + '/maxweight').set(maxweight);\n            db.child('/customers/' + id + '/name').set(fullname);\n            db.child('/customers/' + id + '/phone').set(phone);\n            db.child('/customers/' + id + '/plan').set(plan);\n            db.child('/customers/' + id + '/reshall').set(reshall);\n            db.child('/customers/' + id + '/weekweight').set(\"N/A\");\n            db.child('/customers/' + id + '/weightstatus').set(\"N/A\");\n          }\n        });\n        this.setState({\n          newfirstname: ''\n        });\n        this.setState({\n          newlastname: ''\n        });\n        this.setState({\n          newid: ''\n        });\n        this.setState({\n          newplanyear: ''\n        });\n        this.setState({\n          newplanquarter: ''\n        });\n        this.setState({\n          newmax: ''\n        });\n        this.setState({\n          newreshall: ''\n        });\n        this.setState({\n          newphone: ''\n        });\n        this.setState({\n          newemail: ''\n        }); //const curr  = await this.resetNewInfo();\n        //console.log('reset info: ', this.state.newfirstname);\n        //document.getElementById(\"form\").reset();\n      } else {\n        this.messages.show({\n          severity: \"error\",\n          summary: \"Missing Fields\",\n          detail: \"Please enter all information\"\n        });\n      }\n    }\n  }, {\n    key: \"displayPlanQuarters\",\n    value: function displayPlanQuarters(customerPlan) {\n      if (customerPlan) {\n        if (customerPlan === 'F') {\n          var result = 'Fall Quarter';\n          return result;\n        } else if (customerPlan === 'W') {\n          var _result = 'Winter Quarter';\n          return _result;\n        } else if (customerPlan === 'S') {\n          var _result2 = 'Spring Quarter';\n          return _result2;\n        } else if (customerPlan === 'W-S') {\n          var _result3 = 'Winter/Spring Quarter';\n          return _result3;\n        } else if (customerPlan === 'F-W-S') {\n          var _result4 = 'Full Year';\n          return _result4;\n        }\n      }\n    }\n    /* --------------- Filters ---------------- */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var customerArray = [];\n      firebase.database().ref('/customers').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          customerArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        customers: customerArray\n      });\n      var orderArray = [];\n      firebase.database().ref('/orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          orderArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        orders: orderArray\n      }); //var idNum = 0;\n\n      firebase.database().ref('/idcount').once('value').then(function (snapshot) {\n        _this3.setState({\n          idcount: snapshot.val()\n        });\n\n        console.log('state var idcount: ', _this3.state.idcount); //idNum = snapshot.val();\n\n        console.log('id from firebase: ', snapshot.val());\n      }); //console.log('var idNum: ', idNum);\n      //this.setState({idcount: idNum});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 26\n        }\n      });\n      var customer = this.state.selectedCustomer; //var history = this.getCustomerHistory(customer)\n\n      var laundryStatusDisplay = {\n        'picked-up': 'picked up',\n        'delivered-to-SH': 'delivered to SH',\n        'delivered-to-dorm': 'delivered to dorm',\n        'out-of-service': 'out of service',\n        'bag-missing': 'bag missing'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        id: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }\n      }, \"Add New Order Inquiry\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }\n      }, \"This form will be replaced by a form to enter all information about a new order or order inquiry\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-fluid p-formgrid p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newfirstname,\n        id: \"firstname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onFirstNameValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 9\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newlastname,\n        id: \"lastname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onLastNameValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }\n      }, \"ID\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newid,\n        id: \"firstname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onIdValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newemail,\n        id: \"newemail\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onEmailValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newphone,\n        id: \"newphone\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPhoneValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 9\n        }\n      }, \"Laundry Plan Year\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.newplanyear,\n        options: this.state.planSelectYear,\n        onChange: function onChange(e) {\n          _this4.onPlanYearValueChange(e.target.value);\n        },\n        placeholder: \"Select School Year\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }\n      }, \"Laundry Plan Quarter(s)\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.newplanquarter,\n        options: this.state.planSelectQuarter,\n        onChange: function onChange(e) {\n          _this4.onPlanQuarterValueChange(e.target.value);\n        },\n        placeholder: \"Select Quarter(s)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 9\n        }\n      }, \"Maximum Weight/week\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.newmax,\n        options: this.state.planSelectWeight,\n        onChange: function onChange(e) {\n          _this4.onMaxweightValueChange(e.target.value);\n        },\n        placeholder: \"Select Weight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }\n      }, \"Residence Hall\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.newreshall,\n        options: this.state.planSelectReshall,\n        onChange: function onChange(e) {\n          _this4.onReshallValueChange(e.target.value);\n        },\n        placeholder: \"Select Residence Hall\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: 'white',\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginTop: 30\n        },\n        label: \"ADD CUSTOMER\",\n        onClick: function onClick() {\n          _this4.addCustomer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 5\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this4.messages = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 5\n        }\n      }))));\n    }\n  }]);\n\n  return AddOrders;\n}(Component);","map":{"version":3,"sources":["C:/Users/nicol/OneDrive/Documents/Nicole Documents/Documents/Northwestern/Student Holdings/ink-tank-bulk-orders/src/components/AddOrders.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","InputTextarea","Messages","Message","firebase","validator","customerData","AddOrders","state","customers","orders","selectedCustomer","editing","idcount","newfirstname","newlastname","newid","newplanYear","newplanQuarter","newmax","newreshall","newphone","newemail","planSelectYear","label","value","planSelectQuarter","planSelectWeight","planSelectReshall","edit","bind","save","onPlanYearValueChange","onPlanQuarterValueChange","displayPlanQuarters","resetNewInfo","addCustomer","padId","idNum","digitLength","toString","length","result","setState","customer","allcustomers","newcustomer","newplanyear","newplanquarter","plan","database","ref","id","set","substring","maxweight","reshall","phone","email","count","individual","map","each","includes","newoverage","messages","show","severity","summary","detail","db","child","once","then","snapshot","val","console","log","fullname","customerPlan","customerArray","on","forEach","childSnapshot","push","toJSON","orderArray","header","textAlign","laundryStatusDisplay","e","onFirstNameValueChange","target","onLastNameValueChange","onIdValueChange","onEmailValueChange","onPhoneValueChange","onMaxweightValueChange","onReshallValueChange","color","backgroundColor","borderColor","marginTop","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column'\r\nimport { Chart } from 'primereact/chart'\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Editor } from 'primereact/editor';\r\nimport {InputTextarea} from 'primereact/inputtextarea';\r\nimport {Messages} from 'primereact/messages';\r\nimport {Message} from 'primereact/message';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nimport validator from 'validator'\r\n\r\n\r\nimport customerData from '../customers.json';\r\n// import classNames from 'classnames';\r\n\r\nimport '../Dashboard.css';\r\n//import { arrayToHash } from '@fullcalendar/core/util/object';\r\n\r\n\r\nexport class AddOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: [],\r\n            orders: [],\r\n            selectedCustomer: null,\r\n            editing: false,\r\n            idcount: null,\r\n            newfirstname: null,\r\n            newlastname: null,\r\n            newid: null,\r\n            newplanYear: null,\r\n            newplanQuarter: null,\r\n            newmax: null,\r\n            newreshall: null,\r\n            newphone: null,\r\n            newemail: null,\r\n            planSelectYear: [\r\n                {label: '2020-2021', value: '2020-2021'},\r\n                {label: '2021-2022', value: '2021-2022'},\r\n                {label: '2022-2023', value: '2022-2023'},\r\n                {label: '2023-2024', value: '2023-2024'}\r\n            ],\r\n            planSelectQuarter: [\r\n                {label: 'Full Year', value: '-F-W-S'},\r\n                {label: 'Winter/Spring Quarter', value: '-W-S'},\r\n                {label: 'Fall Quarter', value: '-F'},\r\n                {label: 'Winter Quarter', value: '-W'},\r\n                {label: 'Spring Quarter', value: '-S'},\r\n            ],\r\n            planSelectWeight: [\r\n                {label: '15 lb/week', value: '15'},\r\n                {label: '20 lb/week', value: '20'},\r\n                {label: '25 lb/week', value: '25'},\r\n            ],\r\n            planSelectReshall:[\r\n                {label: 'Choose later', value: 'Choose later'},\r\n                {label: '560 Lincoln', value: '560 Lincoln'},\r\n                {label: '720 Emerson', value: '720 Emerson'},\r\n                { label: '1715 Chicago', value: '1715 Chicago'},\r\n                {label: '1838 Chicago', value: '1838 Chicago'},\r\n                {label: '1856 Orrington', value: '1856 Orrington'},\r\n                {label: '2303 Sheridan', value: '2303 Sheridan'},\r\n                {label: 'Ayers', value: 'Ayers'},\r\n                {label: 'Allison', value: 'Allison'},\r\n                {label: 'Bobb', value: 'Bobb'},\r\n                {label: 'Chapin', value: 'Chapin'},\r\n                {label: 'East Fairchild', value: 'East Fairchild'},\r\n                {label: 'Elder', value: 'Elder'},\r\n                {label: 'West Fairchild', value: 'West Fairchild'},\r\n                {label: 'Foster-Walker (PLEX)', value: 'Foster-Walker (PLEX)'},\r\n                {label: 'Goodrich', value: 'Goodrich'},\r\n                {label: 'Hobart', value: 'Hobart'},\r\n                {label: 'Jones', value: 'Jones'},\r\n                {label: 'Kemper', value: 'Kemper'},\r\n                {label: 'McCulloch', value: 'McCulloch'},\r\n                {label: 'PARC (North Mid Quads)', value: 'PARC (North Mid Quads)'},\r\n                {label: 'Rogers House', value: 'Rogers House'},\r\n                {label: 'Sargent', value: 'Sargent'},\r\n                {label: 'Shepard Residential College (South Mid Quads)', value: 'Shepard Residential College (South Mid Quads)'},\r\n                {label: 'Shepard Hall', value: 'Shepard Hall'},\r\n                {label: 'Slivka', value: 'Slivka'},\r\n                {label: 'Willard', value: 'Willard'},\r\n                {label: 'Delta Gamma', value: 'Delta Gamma'},\r\n                {label: 'Kappa Kappa Gamma', value: 'Kappa Kappa Gamma'},\r\n                {label: 'Zeta Beta Tau (ZBT)', value: 'Zeta Beta Tau (ZBT)'}\r\n\r\n            ],\r\n\r\n        };\r\n        this.edit = this.edit.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.onPlanYearValueChange = this.onPlanYearValueChange.bind(this)\r\n        this.onPlanQuarterValueChange = this.onPlanQuarterValueChange.bind(this)\r\n        //this.getCustomerHistory = this.getCustomerHistory.bind(this)\r\n        this.displayPlanQuarters = this.displayPlanQuarters.bind(this)\r\n        this.resetNewInfo = this.resetNewInfo.bind(this)\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n        this.padId = this.padId.bind(this)\r\n    }\r\n\r\n\r\n    padId(idNum) {\r\n        var digitLength = (idNum.toString()).length;\r\n        if (digitLength === 1) {\r\n            var result = '0000'+idNum;\r\n        }\r\n        else if (digitLength === 2) {\r\n            var result = '000'+idNum;\r\n        }\r\n        else if (digitLength === 3) {\r\n            var result = '00'+idNum;\r\n        }\r\n        else if (digitLength === 4) {\r\n            var result = '0'+idNum;\r\n        }\r\n        else if (digitLength === 5) {\r\n            var result = idNum.toString();\r\n        }\r\n        return result;\r\n\r\n    }\r\n    edit() {\r\n        this.setState({ editing: true });\r\n        //this.resetNewInfo();\r\n    }\r\n\r\n    save(customer) {\r\n        this.setState({ editing: false });\r\n        //console.log(this.state.newplan)\r\n        let allcustomers = [...this.state.customers];\r\n        let newcustomer = {...this.state.selectedCustomer};\r\n        if (this.state.newplanyear && this.state.newplanquarter) {\r\n             newcustomer.plan = this.state.newplanyear+this.state.newplanquarter;\r\n             //console.log('newplanQuarter: ', this.state.newplanQuarter);\r\n             //console.log('newplanYear', this.state.newplanYear)\r\n             firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\r\n        }\r\n        else if (this.state.newplanyear) {\r\n            newcustomer.plan = this.state.newplanyear+customer.plan.substring(9);\r\n            //console.log('newcustomer.plan: ', newcustomer.plan);\r\n            //console.log('newplanYear', this.state.newplanYear)\r\n            //console.log('customer quarter: ', customer.plan.substring(9));\r\n            firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\r\n       }\r\n       else if (this.state.newplanquarter) {\r\n            newcustomer.plan = customer.plan.substring(0,9)+this.state.newplanquarter;\r\n            //console.log('newcustomer.plan: ', newcustomer.plan);\r\n            //console.log('customer year', customer.plan.substring(0,9))\r\n            //console.log('newplanQuarter: ', this.state.newplanQuarter);\r\n            firebase.database().ref('/customers/' + customer.id + '/plan').set(newcustomer.plan);\r\n   }\r\n        if (this.state.newmax) {\r\n            newcustomer.maxweight = this.state.newmax;\r\n            firebase.database().ref('/customers/' + customer.id + '/maxweight').set(newcustomer.maxweight);\r\n       }\r\n        if (this.state.newreshall) {\r\n            newcustomer.reshall = this.state.newreshall;\r\n            firebase.database().ref('/customers/' + customer.id + '/reshall').set(newcustomer.reshall);\r\n        }\r\n        if (this.state.newphone) {\r\n            newcustomer.phone = this.state.newphone;\r\n            firebase.database().ref('/customers/' + customer.id + '/phone').set(newcustomer.phone);\r\n        }\r\n        if (this.state.newemail) {\r\n            newcustomer.email = this.state.newemail;\r\n            firebase.database().ref('/customers/' + customer.id + '/email').set(newcustomer.email)\r\n        }\r\n        let count = 0;\r\n        let individual=null;\r\n        allcustomers.map(each => {\r\n            if (newcustomer.id == each.id) {\r\n                individual = {...allcustomers[count]};\r\n                individual= newcustomer;\r\n                allcustomers[count] = individual;\r\n            }\r\n            count = count+1\r\n        })\r\n        this.setState({ customers: allcustomers });\r\n        this.setState({selectedCustomer: newcustomer});\r\n        \r\n    }\r\n\r\n    //CUSTOMER INFORMATION EDITING\r\n    onFirstNameValueChange(value) {\r\n        //console.log('new first name: ', value)\r\n        this.setState({newfirstname: value});\r\n        \r\n    }\r\n    onLastNameValueChange(value) {\r\n        //console.log('new last name: ', value)\r\n        this.setState({newlastname: value});\r\n    }\r\n    onIdValueChange(value) {\r\n        //console.log('new id name: ', value)\r\n        this.setState({ newid: value });\r\n    }\r\n\r\n    onPlanYearValueChange(value) {\r\n        //console.log('newPlanYear: ', value)\r\n        this.setState({ newplanyear: value });\r\n    }\r\n    onPlanQuarterValueChange(value) {\r\n        //console.log('newPlanQuarter: ', value)\r\n        this.setState({ newplanquarter: value });\r\n    }\r\n    onMaxweightValueChange(value) {\r\n        this.setState({ newmax: value });\r\n    }\r\n    onReshallValueChange(value) {\r\n        this.setState({ newreshall: value });\r\n    }\r\n    onPhoneValueChange(value) {\r\n        if(value[3] ==='-' && value[7]==='-' && value.length===12) {\r\n            this.setState({ newphone: value });\r\n        }\r\n        //this.setState({ newphone: value });\r\n    }\r\n    onEmailValueChange(value) {\r\n        if (value.includes('@') && value.includes('.')) {\r\n            this.setState({ newemail: value });\r\n        }\r\n    }\r\n    resetNewInfo() {\r\n        this.setState({newfirstname: ''});\r\n        this.setState({newlastname: ''});\r\n        this.setState({ newid: '' });\r\n        this.setState({ newplanyear: '' });\r\n        this.setState({ newplanquarter: ''});\r\n        this.setState({ newmax: '' });\r\n        this.setState({ newreshall: '' });\r\n        this.setState({ newphone: '' });\r\n        this.setState({ newemail: '' });\r\n        this.setState({newoverage: ''});\r\n    }\r\n\r\n    addCustomer() {\r\n        //console.log('new first name: ', this.state.newfirstname);\r\n        //console.log('new last name: ', this.state.newlastname);\r\n        // console.log('new plan year: ', this.state.newplanyear);\r\n        // console.log('new plan quarter: ', this.state.newplanquarter);\r\n        // console.log('new max weight: ', this.state.newmax);\r\n        // console.log('new res hall: ', this.state.newreshall);\r\n        // console.log('new phone: ', this.state.newphone);\r\n        // console.log('new email: ', this.state.newemail);\r\n        //this.setState({idcount: this.state.idcount+1});\r\n        //console.log('updated id Count', this.state.idcount);\r\n        if(this.state.newfirstname !=='' && this.state.newlastname !== '' && this.state.newemail !=='' && this.state.newphone !== '' && this.state.newreshall!=='' && this.state.newmax!=='' && this.state.newplanyear!==null && this.state.newplanquarter !== null) {\r\n            \r\n            var idNum = this.padId(this.state.idcount);\r\n            // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\r\n            var id = this.state.newid;\r\n            //console.log('NEW ID: ', id);\r\n            this.messages.show({severity: 'success', summary: 'Success', detail: 'Customer Added!'});\r\n            const db = firebase.database().ref()\r\n            //updating id count in firebase and then updating state variable\r\n            db.child('/idcount').set(this.state.idcount+1);\r\n            db.child('/idcount').once('value')\r\n                .then(snapshot => {\r\n                    this.setState({idcount: snapshot.val()})\r\n                    console.log('state var idcount: ', this.state.idcount);\r\n                    //idNum = snapshot.val();\r\n                    console.log('id from firebase: ', snapshot.val());\r\n                });\r\n\r\n            const fullname = this.state.newfirstname + ' ' + this.state.newlastname;\r\n            const email = this.state.newemail\r\n            const phone = this.state.newphone\r\n            const reshall = this.state.newreshall\r\n            const maxweight = this.state.newmax\r\n            const plan = this.state.newplanyear+this.state.newplanquarter\r\n            db.child('/customers/'+id).once(\"value\")\r\n                .then(snapshot => {\r\n                    if(!snapshot.val()) {\r\n                        db.child('/customers/'+id+'/activestatus').set(\"active\");\r\n                        db.child('/customers/'+id+'/bag-condition').set(\"good\");\r\n                        db.child('/customers/'+id+'/bag-missing').set(\"false\");\r\n                        db.child('/customers/'+id+'/detergent').set('unscented');\r\n                        db.child('/customers/'+id+'/email').set(email);\r\n                        db.child('/customers/'+id+'/fabric_softener').set('No');\r\n                        db.child('/customers/'+id+'/id').set(id);\r\n                        db.child('/customers/'+id+'/last_status_updated').set('N/A');\r\n                        db.child('/customers/'+id+'/last_weight_updated').set('N/A');\r\n                        db.child('/customers/'+id+'/laundrystatus').set('out-of-service');\r\n                        db.child('/customers/'+id+'/maxweight').set(maxweight);\r\n                        db.child('/customers/'+id+'/name').set(fullname);\r\n                        db.child('/customers/'+id+'/phone').set(phone);\r\n                        db.child('/customers/'+id+'/plan').set(plan);\r\n                        db.child('/customers/'+id+'/reshall').set(reshall);\r\n                        db.child('/customers/'+id+'/weekweight').set(\"N/A\");\r\n                        db.child('/customers/'+id+'/weightstatus').set(\"N/A\");\r\n\r\n                    }\r\n                })\r\n\r\n            this.setState({newfirstname: ''});\r\n            this.setState({newlastname: ''});\r\n            this.setState({ newid: '' });\r\n            this.setState({ newplanyear: ''});\r\n            this.setState({ newplanquarter: '' });\r\n            this.setState({ newmax: '' });\r\n            this.setState({ newreshall: '' });\r\n            this.setState({ newphone: '' });\r\n            this.setState({ newemail: '' });\r\n            //const curr  = await this.resetNewInfo();\r\n       \r\n            //console.log('reset info: ', this.state.newfirstname);\r\n            //document.getElementById(\"form\").reset();\r\n        }\r\n        else {\r\n            this.messages.show({severity: \"error\", summary: \"Missing Fields\", detail: \"Please enter all information\"});\r\n        }\r\n\r\n    }\r\n\r\n    displayPlanQuarters(customerPlan) {\r\n        if (customerPlan) {\r\n\r\n            if (customerPlan === 'F') {\r\n                const result = 'Fall Quarter';\r\n                return result;\r\n            }\r\n            else if (customerPlan === 'W') {\r\n                const result = 'Winter Quarter' ;\r\n                return result;\r\n            }\r\n            else if (customerPlan === 'S') {\r\n                const result = 'Spring Quarter' ;\r\n                return result;\r\n            }\r\n            else if (customerPlan === 'W-S') {\r\n                const result = 'Winter/Spring Quarter' ;\r\n                return result;\r\n            }\r\n            else if (customerPlan === 'F-W-S') {\r\n                const result = 'Full Year' ;\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /* --------------- Filters ---------------- */\r\n    componentDidMount() {\r\n        const customerArray = [];\r\n        firebase.database().ref('/customers').on('value', function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                customerArray.push(childSnapshot.toJSON());\r\n            });\r\n        });\r\n        this.setState({ customers: customerArray });\r\n        const orderArray = [];\r\n        firebase.database().ref('/orders').on('value', function (snapshot) {\r\n            snapshot.forEach(function (childSnapshot) {\r\n                orderArray.push(childSnapshot.toJSON());\r\n            });\r\n        });\r\n        this.setState({ orders: orderArray });\r\n        //var idNum = 0;\r\n        firebase.database().ref('/idcount').once('value')\r\n            .then(snapshot => {\r\n                this.setState({idcount: snapshot.val()})\r\n                console.log('state var idcount: ', this.state.idcount);\r\n                //idNum = snapshot.val();\r\n                console.log('id from firebase: ', snapshot.val());\r\n            });\r\n        //console.log('var idNum: ', idNum);\r\n        //this.setState({idcount: idNum});\r\n    }\r\n\r\n    render() {\r\n            var header = <div style={{ textAlign: 'left' }}></div>\r\n            var customer = this.state.selectedCustomer\r\n            //var history = this.getCustomerHistory(customer)\r\n            var laundryStatusDisplay = {\r\n                'picked-up': 'picked up',\r\n                'delivered-to-SH': 'delivered to SH',\r\n                'delivered-to-dorm': 'delivered to dorm',\r\n                'out-of-service': 'out of service',\r\n                'bag-missing': 'bag missing'\r\n            }\r\n\r\n            return (\r\n            <div className=\"card\" id=\"form\">\r\n                <h1>Add New Order Inquiry</h1>\r\n                <p>This form will be replaced by a form to enter all information about a new order or order inquiry</p>\r\n\r\n                <div className=\"p-fluid p-formgrid p-grid\">\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">First Name</label>\r\n        <InputText value={this.state.newfirstname} id=\"firstname\" type=\"text\" onChange={(e) => { this.onFirstNameValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"lastname6\">Last Name</label>\r\n        <InputText value={this.state.newlastname} id=\"lastname\" type=\"text\" onChange={(e) => { this.onLastNameValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-4\">\r\n        <label htmlFor=\"firstname6\">ID</label>\r\n        <InputText value={this.state.newid} id=\"firstname\" type=\"text\" onChange={(e) => { this.onIdValueChange(e.target.value); }} />\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"firstname6\">Email</label>\r\n        <InputText value={this.state.newemail} id=\"newemail\" type=\"text\" onChange={(e) => { this.onEmailValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-6\">\r\n        <label htmlFor=\"firstname6\">Phone</label>\r\n        <InputText value={this.state.newphone} id=\"newphone\" type=\"text\" onChange={(e) => { this.onPhoneValueChange(e.target.value); }}/>\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"address\">Laundry Plan Year</label>\r\n        <Dropdown  value={this.state.newplanyear} options={this.state.planSelectYear} onChange={(e) => {this.onPlanYearValueChange(e.target.value);}} placeholder='Select School Year'/>\r\n\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"lastname6\">Laundry Plan Quarter(s)</label>\r\n        <Dropdown  value={this.state.newplanquarter} options={this.state.planSelectQuarter} onChange={(e) => {this.onPlanQuarterValueChange(e.target.value);}} placeholder='Select Quarter(s)'/>\r\n\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"city\">Maximum Weight/week</label>\r\n        <Dropdown  value={this.state.newmax} options={this.state.planSelectWeight} onChange={(e) => {this.onMaxweightValueChange(e.target.value);}} placeholder='Select Weight'/>\r\n\r\n    </div>\r\n    <div className=\"p-field p-col-12 p-md-3\">\r\n        <label htmlFor=\"state\">Residence Hall</label>\r\n        <Dropdown  value={this.state.newreshall} options={this.state.planSelectReshall} onChange={(e) => {this.onReshallValueChange(e.target.value);}} placeholder='Select Residence Hall'/>\r\n    </div>\r\n    <div className = \"p-field p-col-12\">\r\n    <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} label=\"ADD CUSTOMER\" onClick={() => {this.addCustomer()}} />\r\n    </div>\r\n    <div className = \"p-field p-col-12\">\r\n    <Messages ref={(el) => this.messages = el}></Messages>\r\n    </div>\r\n\r\n\r\n</div>\r\n</div>\r\n            );\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}