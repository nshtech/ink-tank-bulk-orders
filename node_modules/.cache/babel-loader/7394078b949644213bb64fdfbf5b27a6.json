{"ast":null,"code":"import _classCallCheck from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/src/components/MiscDemo.js\";\nimport React, { Component } from 'react';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Growl } from 'primereact/growl';\nimport { ProgressBar } from 'primereact/progressbar';\nexport var MiscDemo = /*#__PURE__*/function (_Component) {\n  _inherits(MiscDemo, _Component);\n\n  var _super = _createSuper(MiscDemo);\n\n  function MiscDemo() {\n    var _this;\n\n    _classCallCheck(this, MiscDemo);\n\n    _this = _super.call(this);\n    _this.state = {\n      value: 0\n    };\n    _this.onUpload = _this.onUpload.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MiscDemo, [{\n    key: \"onUpload\",\n    value: function onUpload() {\n      this.growl.show({\n        severity: 'info',\n        summary: 'Success',\n        detail: 'File Uploaded'\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        var val = _this2.state.value;\n        val += Math.floor(Math.random() * 10) + 1;\n\n        if (val >= 100) {\n          val = 100;\n          clearInterval(_this2.interval);\n        }\n\n        _this2.setState({\n          value: val\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, \"Upload\"), /*#__PURE__*/React.createElement(Growl, {\n        ref: function ref(el) {\n          return _this3.growl = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(FileUpload, {\n        name: \"demo[]\",\n        url: \"./upload.php\",\n        onUpload: this.onUpload,\n        multiple: true,\n        accept: \"image/*\",\n        maxFileSize: 1000000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, \"ProgressBar\"), /*#__PURE__*/React.createElement(ProgressBar, {\n        value: this.state.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return MiscDemo;\n}(Component);","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/ink-tank-bulk-orders/src/components/MiscDemo.js"],"names":["React","Component","FileUpload","Growl","ProgressBar","MiscDemo","state","value","onUpload","bind","growl","show","severity","summary","detail","interval","setInterval","val","Math","floor","random","clearInterval","setState","el"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AAEI,sBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AANU;AAOb;;AATL;AAAA;AAAA,WAWI,oBAAW;AACP,WAAKC,KAAL,CAAWC,IAAX,CAAgB;AAACC,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,OAAO,EAAE,SAA5B;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAAhB;AACH;AAbL;AAAA;AAAA,WAeI,6BAAoB;AAAA;;AAChB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAC9B,YAAIC,GAAG,GAAG,MAAI,CAACX,KAAL,CAAWC,KAArB;AACAU,QAAAA,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAxC;;AACA,YAAIH,GAAG,IAAI,GAAX,EAAgB;AACZA,UAAAA,GAAG,GAAG,GAAN;AACAI,UAAAA,aAAa,CAAC,MAAI,CAACN,QAAN,CAAb;AACH;;AACD,QAAA,MAAI,CAACO,QAAL,CAAc;AAACf,UAAAA,KAAK,EAAEU;AAAR,SAAd;AACH,OAR0B,EAQxB,IARwB,CAA3B;AASH;AAzBL;AAAA;AAAA,WA2BI,gCAAuB;AACnBI,MAAAA,aAAa,CAAC,KAAKN,QAAN,CAAb;AACH;AA7BL;AAAA;AAAA,WA+BI,kBAAS;AAAA;;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,aAACQ,EAAD;AAAA,iBAAQ,MAAI,CAACb,KAAL,GAAaa,EAArB;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAII,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAA0B,QAAA,GAAG,EAAC,cAA9B;AAA6C,QAAA,QAAQ,EAAE,KAAKf,QAA5D;AAAsE,QAAA,QAAQ,EAAE,IAAhF;AAAsF,QAAA,MAAM,EAAC,SAA7F;AAAuG,QAAA,WAAW,EAAE,OAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,CADJ,eAUI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CAVJ,CADJ;AAmBH;AAnDL;;AAAA;AAAA,EAA8BN,SAA9B","sourcesContent":["import React, {Component} from 'react';\nimport {FileUpload} from 'primereact/fileupload';\nimport {Growl} from 'primereact/growl';\nimport {ProgressBar} from 'primereact/progressbar';\n\nexport class MiscDemo extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            value: 0\n        };\n        \n        this.onUpload = this.onUpload.bind(this);\n    }\n    \n    onUpload() {\n        this.growl.show({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            let val = this.state.value;\n            val += Math.floor(Math.random() * 10) + 1;\n            if (val >= 100) {\n                val = 100;\n                clearInterval(this.interval);\n            }\n            this.setState({value: val});\n        }, 2000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <div className=\"p-grid\">\n                <div className=\"p-col-12\">\n                    <div className=\"card\">\n                        <h1>Upload</h1>\n                        <Growl ref={(el) => this.growl = el} />\n                \n                        <FileUpload name=\"demo[]\" url=\"./upload.php\" onUpload={this.onUpload} multiple={true} accept=\"image/*\" maxFileSize={1000000} />\n                    </div>\n                </div>\n            \n                <div className=\"p-col-12\">\n                    <div className=\"card\">\n                        <h1>ProgressBar</h1>\n                        <ProgressBar value={this.state.value}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}