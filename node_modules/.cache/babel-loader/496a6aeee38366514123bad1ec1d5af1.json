{"ast":null,"code":"var _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/CustomerSheet.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport { Growl } from 'primereact/growl';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class CustomerSheet extends Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: [],\n      selectedStatus: null,\n      editing: false\n    }; // this.edit = this.edit.bind(this);\n\n    this.save = this.save.bind(this);\n    this.export = this.export.bind(this);\n    this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n    this.generalEditor = this.generalEditor.bind(this);\n  }\n\n  export() {\n    this.dt.exportCSV();\n  }\n  /* --------------- Editing ---------------- */\n  // edit() {\n  //     this.setState({editing: true});\n  //     this.growl.show({ severity: 'info', summary: 'Editing Enabled', detail: 'Save changes before continuing' });\n  // }\n\n\n  save() {\n    this.setState({\n      editing: false\n    });\n    this.growl.clear();\n  }\n\n  onEditorValueChange(props, value) {\n    firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value);\n    let updatedCustomers = [...props.value];\n    updatedCustomers[props.rowIndex][props.field] = value;\n    this.setState({\n      customers: updatedCustomers\n    });\n    console.log(props);\n  }\n\n  inputTextEditor(props, field) {\n    return /*#__PURE__*/_jsxDEV(InputText, {\n      type: \"text\",\n      value: props.rowData[field],\n      onChange: e => this.onEditorValueChange(props, e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  generalEditor(props) {\n    return this.inputTextEditor(props, ' ');\n  }\n\n  phoneValidator(props) {\n    let value = props.rowData[props.field];\n    return value[3] === '-' && value.length === 12;\n  }\n\n  emailValidator(props) {\n    let value = props.rowData[props.field];\n    return value && value.length > 0;\n  }\n  /* --------------- Filters ---------------- */\n\n\n  statusBodyTemplate(rowData) {\n    var laundryStatusDisplay = {\n      'picked-up': 'picked up',\n      'delivered-to-SH': 'delivered to SH',\n      'delivered-to-dorm': 'delivered to dorm',\n      'out-of-service': 'out of service',\n      'bag-missing': 'bag missing',\n      'start-of-quarter': 'start of quarter'\n    };\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.laundrystatus,\n      children: laundryStatusDisplay[rowData.laundrystatus]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n  weightBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.weightstatus,\n      children: rowData.weightstatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this);\n  }\n\n  activeBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.activestatus,\n      children: rowData.activestatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this);\n  }\n\n  detergentBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.detergent,\n      children: rowData.detergent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n\n  fabricSoftenerBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.fabric_softener,\n      children: rowData.fabric_softener\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }, this);\n  }\n\n  specialRequestBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: rowData.special_request,\n      children: rowData.special_request\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this);\n  }\n\n  renderStatusFilter() {\n    var statuses = [{\n      label: 'Picked Up',\n      value: 'picked-up'\n    }, {\n      label: 'Out of Service',\n      value: 'out-of-service'\n    }, {\n      label: 'Delivered to SH',\n      value: 'delivered-to-SH'\n    }, {\n      label: 'Delivered to Dorm',\n      value: 'delivered-to-dorm'\n    }, {\n      label: 'Bag Missing',\n      value: 'bag-missing'\n    }, {\n      label: 'Start of Quarter',\n      value: 'start-of-quarter'\n    }];\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      value: this.state.selectedStatus,\n      options: statuses,\n      onChange: this.onStatusFilterChange,\n      showClear: true,\n      placeholder: \"Filter Status\",\n      className: \"p-column-filter\",\n      style: {\n        maxWidth: 200,\n        minWidth: 50\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n  onStatusFilterChange(event) {\n    this.dt.filter(event.value, 'laundrystatus', 'equals');\n    this.setState({\n      selectedStatus: event.value\n    });\n  }\n\n  componentDidMount() {\n    const customerArray = [];\n    firebase.database().ref('/customers').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        if (childSnapshot.val().activestatus === 'active') {\n          customerArray.push(childSnapshot.toJSON());\n        }\n      });\n      console.log(customerArray);\n      console.log(customerArray[0]);\n    });\n    this.setState({\n      customers: customerArray\n    });\n  }\n\n  render() {\n    const statusFilter = this.renderStatusFilter();\n\n    var header = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        style: {\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginRight: 10\n        },\n        icon: \"pi pi-external-link\",\n        iconPos: \"left\",\n        label: \"CSV\",\n        onClick: this.export\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 22\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Growl, {\n        ref: el => this.growl = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"RezLaundry Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          value: this.state.customers,\n          header: header,\n          ref: el => {\n            this.dt = el;\n          },\n          style: {\n            marginBottom: '20px'\n          },\n          responsive: true,\n          autoLayout: true,\n          editMode: \"row\",\n          rowEditorValidator: this.onRowEditorValidator,\n          onRowEditInit: this.onRowEditInit,\n          onRowEditSave: this.onRowEditSave,\n          onRowEditCancel: this.onRowEditCancel,\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"id\",\n            header: \"ID\",\n            sortable: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"name\",\n            header: \"Name\",\n            style: {\n              maxWidth: 150\n            },\n            sortable: true,\n            filter: true,\n            filterPlaceholder: \"Search name\",\n            exportable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"laundrystatus\",\n            header: \"Bag Status\",\n            style: {\n              maxWidth: 150\n            },\n            sortable: true,\n            filter: true,\n            filterElement: statusFilter,\n            body: this.statusBodyTemplate,\n            exportable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"weightstatus\",\n            header: \"Weight Status\",\n            style: {\n              maxWidth: 150\n            },\n            sortable: true,\n            body: this.weightBodyTemplate,\n            exportable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"detergent\",\n            header: \"Detergent\",\n            style: {\n              maxWidth: 100\n            },\n            sortable: true,\n            body: this.detergentBodyTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"fabric_softener\",\n            header: \"Fabric Softener\",\n            style: {\n              maxWidth: 100\n            },\n            sortable: true,\n            body: this.fabricSoftenerBodyTemplate,\n            exportable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"special_request\",\n            header: \"Special Requests\",\n            style: {\n              maxWidth: 100\n            },\n            sortable: true,\n            body: this.specialRequestBodyTemplate,\n            exportable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/CustomerSheet.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","InputText","Growl","firebase","validator","customerData","CustomerSheet","constructor","state","customers","selectedStatus","editing","save","bind","export","onStatusFilterChange","generalEditor","dt","exportCSV","setState","growl","clear","onEditorValueChange","props","value","database","ref","rowData","id","field","set","updatedCustomers","rowIndex","console","log","inputTextEditor","e","target","phoneValidator","length","emailValidator","statusBodyTemplate","laundryStatusDisplay","laundrystatus","weightBodyTemplate","weightstatus","activeBodyTemplate","activestatus","detergentBodyTemplate","detergent","fabricSoftenerBodyTemplate","fabric_softener","specialRequestBodyTemplate","special_request","renderStatusFilter","statuses","label","maxWidth","minWidth","event","filter","componentDidMount","customerArray","on","snapshot","forEach","childSnapshot","val","push","toJSON","render","statusFilter","header","textAlign","backgroundColor","borderColor","marginRight","el","marginBottom","onRowEditorValidator","onRowEditInit","onRowEditSave","onRowEditCancel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { InputText } from 'primereact/inputtext';\nimport { Growl } from 'primereact/growl';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class CustomerSheet extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            selectedStatus: null,\n            editing: false\n        };\n        // this.edit = this.edit.bind(this);\n        this.save = this.save.bind(this);\n        this.export = this.export.bind(this);\n        this.onStatusFilterChange = this.onStatusFilterChange.bind(this);\n\n        this.generalEditor = this.generalEditor.bind(this);\n    }\n    export() {\n        this.dt.exportCSV();\n    }\n\n/* --------------- Editing ---------------- */\n    // edit() {\n    //     this.setState({editing: true});\n    //     this.growl.show({ severity: 'info', summary: 'Editing Enabled', detail: 'Save changes before continuing' });\n    // }\n\n    save() {\n        this.setState({ editing: false });\n        this.growl.clear();\n    }\n\n    onEditorValueChange(props, value) {\n        firebase.database().ref('/customers/' + props.rowData.id + '/' + props.field).set(value)\n        let updatedCustomers = [...props.value];\n        updatedCustomers[props.rowIndex][props.field] = value;\n        this.setState({ customers: updatedCustomers });\n        console.log(props)\n    }\n\n    inputTextEditor(props, field) {\n        return <InputText type=\"text\" value={props.rowData[field]} onChange={(e) => this.onEditorValueChange(props, e.target.value)} />;\n    }\n\n    generalEditor(props) {\n        return this.inputTextEditor(props, ' ');\n    }\n\n    phoneValidator(props) {\n        let value = props.rowData[props.field]\n        return value[3] === '-' && value.length === 12;\n    }\n    emailValidator(props) {\n        let value = props.rowData[props.field]\n        return value && value.length > 0;\n    }\n\n/* --------------- Filters ---------------- */\n    statusBodyTemplate(rowData) {\n        var laundryStatusDisplay = {\n            'picked-up': 'picked up',\n            'delivered-to-SH': 'delivered to SH',\n            'delivered-to-dorm': 'delivered to dorm',\n            'out-of-service': 'out of service',\n            'bag-missing': 'bag missing',\n            'start-of-quarter': 'start of quarter'\n        }\n        return <span className={rowData.laundrystatus}>{laundryStatusDisplay[rowData.laundrystatus]}</span>;\n    }\n\n    weightBodyTemplate(rowData) {\n        return <span className={rowData.weightstatus}>{rowData.weightstatus}</span>;\n    }\n\n    activeBodyTemplate(rowData) {\n        return <span className={rowData.activestatus}>{rowData.activestatus}</span>;\n    }\n\n    detergentBodyTemplate(rowData){\n        return <span className={rowData.detergent}>{rowData.detergent}</span>;\n    }\n\n    fabricSoftenerBodyTemplate(rowData){\n        return <span className={rowData.fabric_softener}>{rowData.fabric_softener}</span>;\n    }\n\n    specialRequestBodyTemplate(rowData){\n        return <span className={rowData.special_request}>{rowData.special_request}</span>;\n    }\n\n    renderStatusFilter() {\n        var statuses =  [\n            {label: 'Picked Up', value: 'picked-up'},\n            {label: 'Out of Service', value: 'out-of-service'},\n            {label: 'Delivered to SH', value: 'delivered-to-SH'},\n            {label: 'Delivered to Dorm', value: 'delivered-to-dorm'},\n            {label: 'Bag Missing', value: 'bag-missing'},\n            { label: 'Start of Quarter', value: 'start-of-quarter' }\n                ];\n        return (\n            <Dropdown value={this.state.selectedStatus} options={statuses} onChange={this.onStatusFilterChange}\n                showClear={true} placeholder=\"Filter Status\" className=\"p-column-filter\" style={{ maxWidth: 200, minWidth: 50 }}/>\n        );\n    }\n\n    onStatusFilterChange(event) {\n        this.dt.filter(event.value, 'laundrystatus', 'equals');\n        this.setState({selectedStatus: event.value});\n    }\n\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/customers').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                if (childSnapshot.val().activestatus === 'active') {\n                    customerArray.push(childSnapshot.toJSON());\n                }\n            });\n            console.log(customerArray)\n            console.log(customerArray[0])\n        });\n        this.setState({ customers: customerArray });\n    }\n\n    render() {\n        const statusFilter = this.renderStatusFilter();\n\n\n        var header = <div style={{ textAlign: 'left' }}>\n            <Button type=\"button\" style={{ backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginRight: 10 }} icon=\"pi pi-external-link\" iconPos=\"left\" label=\"CSV\" onClick={this.export}>\n            </Button>\n        </div>;\n        return (\n            <div>\n                <Growl ref={(el) => this.growl = el} />\n                <div className=\"card\">\n                    <h1>RezLaundry Dashboard</h1>\n                    <DataTable value={this.state.customers} header={header} ref={(el) => { this.dt = el; }} style={{ marginBottom: '20px' }} responsive={true} autoLayout={true} editMode=\"row\" rowEditorValidator={this.onRowEditorValidator} onRowEditInit={this.onRowEditInit} onRowEditSave={this.onRowEditSave} onRowEditCancel={this.onRowEditCancel}>\n                        <Column field=\"id\" header=\"ID\" sortable={true} />\n                        <Column field=\"name\" header=\"Name\" style={{ maxWidth: 150 }} sortable filter filterPlaceholder=\"Search name\" exportable={false}/>\n                        <Column field=\"laundrystatus\" header=\"Bag Status\" style={{ maxWidth: 150 }} sortable={true} filter filterElement={statusFilter} body={this.statusBodyTemplate} exportable={false}/>\n                        <Column field=\"weightstatus\" header=\"Weight Status\" style={{ maxWidth: 150 }}  sortable={true} body={this.weightBodyTemplate} exportable={false}/>\n                        <Column field=\"detergent\" header=\"Detergent\" style={{ maxWidth: 100 }} sortable={true} body={this.detergentBodyTemplate} />\n                        <Column field=\"fabric_softener\" header=\"Fabric Softener\" style={{ maxWidth: 100 }} sortable={true} body={this.fabricSoftenerBodyTemplate} exportable={false}/>\n                        <Column field=\"special_request\" header=\"Special Requests\" style={{ maxWidth: 100 }} sortable={true} body={this.specialRequestBodyTemplate} exportable={false}/>\n                        \n                    </DataTable>\n                </div>\n            </div>\n        );\n\n        }\n    }\n\n"]},"metadata":{},"sourceType":"module"}