{"ast":null,"code":"var _jsxFileName = \"/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/AddOrders.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport class AddOrders extends Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: [],\n      orders: [],\n      bulk_orders: [],\n      selectedCustomer: null,\n      selectedOrders: null,\n      editing: false,\n      idcount: null,\n      name: '',\n      team_member: '',\n      blank: '',\n      design: '',\n      organization: '',\n      tax_exempt: '',\n      quantity: '',\n      order_quote: '',\n      final_total: '',\n      phone: '',\n      fullphone: '',\n      email: '',\n      fullemail: '',\n      newaddress: '',\n      address: '',\n      newcity: '',\n      city: '',\n      newstate: '',\n      state: '',\n      newpostalcode: '',\n      postal_code: '',\n      ship_address: '',\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planTeamMember: [{\n        label: 'Caden Gaviria',\n        value: 'Caden Gaviria'\n      }, {\n        label: 'Philippe Manzone',\n        value: 'Philippe Manzone'\n      }, {\n        label: 'Alec Aragon',\n        value: 'Alec Aragon'\n      }, {\n        label: 'Shannon Groves',\n        value: 'Shannon Groves'\n      }, {\n        label: 'Ali Kilic',\n        value: 'Ali Kilic'\n      }],\n      planSelectStatus: [{\n        label: 'Confirmed',\n        value: 'confirmed'\n      }, {\n        label: 'In Production',\n        value: 'in production'\n      }, {\n        label: 'Invoiced',\n        value: 'invoiced'\n      }, {\n        label: 'Fulfilled',\n        value: 'fulfilled'\n      }, {\n        label: 'Shipped',\n        value: 'Shipped'\n      }, {\n        label: 'Quote',\n        value: 'quote'\n      }],\n      planYesNo: [{\n        label: 'Yes',\n        value: 'Yes'\n      }, {\n        label: 'No',\n        value: 'No'\n      }]\n    };\n    this.edit = this.edit.bind(this);\n    this.onTeamMemberValueChange = this.onTeamMemberValueChange.bind(this);\n    this.resetNewInfo = this.resetNewInfo.bind(this);\n    this.addBulkOrder = this.addBulkOrder.bind(this);\n    this.padId = this.padId.bind(this);\n  }\n\n  padId(idNum) {\n    var digitLength = idNum.toString().length;\n\n    if (digitLength === 1) {\n      var result = '0000' + idNum;\n    } else if (digitLength === 2) {\n      var result = '000' + idNum;\n    } else if (digitLength === 3) {\n      var result = '00' + idNum;\n    } else if (digitLength === 4) {\n      var result = '0' + idNum;\n    } else if (digitLength === 5) {\n      var result = idNum.toString();\n    }\n\n    return result;\n  }\n\n  edit() {\n    this.setState({\n      editing: true\n    }); //this.resetNewInfo();\n  }\n  /*\n      save(bulk_order) {\n          this.setState({ editing: false });\n          //console.log(this.state.newplan)\n          let allbulkorders = [...this.state.bulk_orders];\n          let newbulkorder = { ...this.state.selectedOrders };\n  \n          if (this.state.newaddress && this.state.newcity && this.state.newstate && this.state.newpostalcode) {\n              newbulkorder.ship_address = this.state.newaddress + this.state.newcity + ', ' + this.state.newstate + this.state.newpostalcode;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/ship_address').set(newbulkorder.ship_address);\n          }\n  \n          if (this.state.blank) {\n              newbulkorder.blank = this.state.blank;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/blank').set(newbulkorder.blank);\n          }\n          if (this.state.quantity) {\n              newbulkorder.quantity = this.state.quantity;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/quantity').set(newbulkorder.quantity);\n          }\n          if (this.state.phone) {\n              newbulkorder.phone = this.state.phone;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/phone').set(newbulkorder.phone);\n          }\n          if (this.state.email) {\n              newbulkorder.email = this.state.email;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/email').set(newbulkorder.email)\n          }\n          if (this.state.organization) {\n              newbulkorder.organization = this.state.organization;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/organization').set(newbulkorder.organization)\n          }\n          if (this.state.order_quote) {\n              newbulkorder.order_quote = this.state.order_quote;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/order_quote').set(newbulkorder.order_quote)\n          }\n          if (this.state.final_total) {\n              newbulkorder.final_total = this.state.final_total;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/final_total').set(newbulkorder.final_total)\n          }\n          if (this.state.tax_exempt) {\n              newbulkorder.tax_exempt = this.state.tax_exempt;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/tax_exempt').set(newbulkorder.tax_exempt)\n          }\n          if (this.state.team_member) {\n              newbulkorder.order_quote = this.state.team_member;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/team_member').set(newbulkorder.team_member)\n          }\n          if (this.state.design) {\n              newbulkorder.design = this.state.design;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/design').set(newbulkorder.design)\n          }\n          if (this.state.name) {\n              newbulkorder.name = this.state.name;\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/name').set(newbulkorder.name)\n              firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/status').set('invoiced')\n          }\n  \n          let count = 0;\n          let individual = null;\n          allbulkorders.map(each => {\n              if (newbulkorder.order_id == each.order_id) {\n                  individual = { ...allbulkorders[count] };\n                  individual = newbulkorder;\n                  allbulkorders[count] = individual;\n              }\n              count = count + 1\n          })\n          this.setState({ bulk_orders: allbulkorders });\n          this.setState({ selectedOrders: newbulkorder });\n  \n      }\n  */\n  //CUSTOMER INFORMATION EDITING\n\n\n  onNameValueChange(value) {\n    //console.log('new first name: ', value)\n    this.setState({\n      name: value\n    });\n  }\n\n  onTeamMemberValueChange(value) {\n    //console.log('newPlanYear: ', value)\n    this.setState({\n      team_member: value\n    });\n  }\n\n  onBlankValueChange(value) {\n    //console.log('newPlanQuarter: ', value)\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        blank: \"NA\"\n      });\n    } else {\n      this.setState({\n        blank: value\n      });\n    }\n  }\n\n  onDesignValueChange(value) {\n    this.setState({\n      design: value\n    });\n  }\n\n  onOrganizationValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        organization: \"NA\"\n      });\n    } else {\n      this.setState({\n        organization: value\n      });\n    }\n  }\n\n  onTaxExemptValueChange(value) {\n    this.setState({\n      tax_exempt: value\n    });\n  }\n\n  onQuantityValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        quantity: \"NA\"\n      });\n    } else {\n      this.setState({\n        quantity: value\n      });\n    }\n  }\n\n  onOrderQuoteValueChange(value) {\n    //try, execept \n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        order_quote: \"NA\"\n      });\n    } else {\n      this.setState({\n        order_quote: value\n      });\n    }\n  }\n\n  onFinalTotalValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        final_total: \"NA\"\n      });\n    } else {\n      this.setState({\n        final_total: value\n      });\n    }\n  }\n\n  onPhoneValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        fullphone: \"NA\"\n      });\n      this.setState({\n        phone: \"NA\"\n      });\n    } else if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n      this.setState({\n        fullphone: value\n      });\n    } else {\n      this.setState({\n        phone: value\n      });\n    } //this.setState({ phone: value });\n    // if value == NA: set to NA; conver to uppercase\n    // else; cast as float\n\n  }\n\n  onEmailValueChange(value) {\n    if (value.includes('@') && value.includes('.')) {\n      this.setState({\n        fullemail: value\n      });\n    }\n\n    this.setState({\n      email: value\n    });\n  }\n\n  onAddressValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        newaddress: \"NA\"\n      });\n    } else {\n      this.setState({\n        newaddress: value\n      });\n    }\n  }\n\n  onCityValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        newcity: \"NA\"\n      });\n    } else {\n      this.setState({\n        newcity: value\n      });\n    }\n  }\n\n  onStateValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        newstate: \"NA\"\n      });\n    } else {\n      this.setState({\n        newstate: value\n      });\n    }\n  }\n\n  onPostalCodeValueChange(value) {\n    if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n      this.setState({\n        newpostalcode: \"NA\"\n      });\n    } else {\n      this.setState({\n        newpostalcode: value\n      });\n    }\n  }\n\n  resetNewInfo() {\n    this.setState({\n      name: ''\n    });\n    this.setState({\n      team_member: ''\n    });\n    this.setState({\n      blank: ''\n    });\n    this.setState({\n      design: ''\n    });\n    this.setState({\n      organization: ''\n    });\n    this.setState({\n      tax_exempt: ''\n    });\n    this.setState({\n      quantity: ''\n    });\n    this.setState({\n      order_quote: ''\n    });\n    this.setState({\n      final_total: ''\n    });\n    this.setState({\n      phone: ''\n    });\n    this.setState({\n      email: ''\n    });\n    this.setState({\n      newaddress: ''\n    });\n    this.setState({\n      newstate: ''\n    });\n    this.setState({\n      newcity: ''\n    });\n    this.setState({\n      newpostalcode: ''\n    });\n  }\n\n  addBulkOrder() {\n    //console.log('new first name: ', this.state.newfirstname);\n    //console.log('new last name: ', this.state.newlastname);\n    // console.log('new plan year: ', this.state.newplanyear);\n    // console.log('new plan quarter: ', this.state.newplanquarter);\n    // console.log('new max weight: ', this.state.newmax);\n    // console.log('new res hall: ', this.state.newreshall);\n    // console.log('new phone: ', this.state.newphone);\n    // console.log('new email: ', this.state.newemail);\n    //this.setState({idcount: this.state.idcount+1});\n    //console.log('updated id Count', this.state.idcount);\n    if (this.state.name !== '' && this.state.organization !== '' && this.state.fullemail !== '' && this.state.fullphone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n      var idNum = this.padId(this.state.idcount); // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n\n      var order_id = this.state.idcount; //console.log('NEW ID: ', order_id);\n\n      this.messages.show({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Order Added!'\n      });\n      const db = firebase.database().ref(); //updating order_id count in firebase and then updating state variable\n\n      db.child('/idcount').set(this.state.idcount + 1);\n      db.child('/idcount').once('value').then(snapshot => {\n        this.setState({\n          idcount: snapshot.val()\n        });\n        console.log('state var idcount: ', this.state.idcount); //idNum = snapshot.val();\n\n        console.log('id from firebase: ', snapshot.val());\n      });\n      const name = this.state.name;\n      const phone = this.state.fullphone;\n      const email = this.state.fullemail;\n      const organization = this.state.organization;\n      const design = this.state.design;\n      const blank = this.state.blank;\n      const quantity = this.state.quantity;\n      const ship_address = this.state.newaddress + ' ' + this.state.newcity + ' ' + this.state.newstate + ' ' + this.state.newpostalcode;\n      const final_total = this.state.final_total;\n      const order_quote = this.state.order_quote;\n      const team_member = this.state.team_member;\n      const tax_exempt = this.state.tax_exempt;\n      db.child('/bulk_orders/' + order_id).once(\"value\").then(snapshot => {\n        if (!snapshot.val()) {\n          db.child('/bulk_orders/' + order_id + '/active').set(\"Yes\");\n          db.child('/bulk_orders/' + order_id + '/status').set(\"invoiced\");\n          db.child('/bulk_orders/' + order_id + '/email').set(email);\n          db.child('/bulk_orders/' + order_id + '/order_id').set(order_id.toString());\n          db.child('/bulk_orders/' + order_id + '/last_status_updated').set('N/A');\n          db.child('/bulk_orders/' + order_id + '/name').set(name);\n          db.child('/bulk_orders/' + order_id + '/phone').set(phone);\n          db.child('/bulk_orders/' + order_id + '/organization').set(organization);\n          db.child('/bulk_orders/' + order_id + '/design').set(design);\n          db.child('/bulk_orders/' + order_id + '/blank').set(blank);\n          db.child('/bulk_orders/' + order_id + '/ship_address').set(ship_address);\n          db.child('/bulk_orders/' + order_id + '/final_total').set(final_total);\n          db.child('/bulk_orders/' + order_id + '/order_quote').set(order_quote);\n          db.child('/bulk_orders/' + order_id + '/team_member').set(team_member);\n          db.child('/bulk_orders/' + order_id + '/quantity').set(quantity);\n          db.child('/bulk_orders/' + order_id + '/tax_exempt').set(tax_exempt);\n        }\n      });\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        email: ''\n      });\n      this.setState({\n        phone: ''\n      });\n      this.setState({\n        organization: ''\n      });\n      this.setState({\n        design: ''\n      });\n      this.setState({\n        blank: ''\n      });\n      this.setState({\n        ship_address: ''\n      });\n      this.setState({\n        address: ''\n      });\n      this.setState({\n        city: ''\n      });\n      this.setState({\n        state: ''\n      });\n      this.setState({\n        postal_code: ''\n      });\n      this.setState({\n        final_total: ''\n      });\n      this.setState({\n        order_quote: ''\n      });\n      this.setState({\n        team_member: ''\n      });\n      this.setState({\n        quantity: ''\n      });\n      this.setState({\n        tax_exempt: ''\n      });\n      this.setState({\n        fullphone: ''\n      });\n      this.setState({\n        fullemail: ''\n      }); //const curr  = await this.resetNewInfo();\n      //console.log('reset info: ', this.state.newfirstname);\n      //document.getElementById(\"form\").reset();\n    } else {\n      this.messages.show({\n        severity: \"error\",\n        summary: \"Invalid or Missing Fields\",\n        detail: 'Please enter all information or \"NA\" if field information is not available'\n      });\n    }\n  }\n  /* --------------- Filters ---------------- */\n\n\n  componentDidMount() {\n    const customerArray = [];\n    firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        customerArray.push(childSnapshot.toJSON());\n      });\n    });\n    this.setState({\n      customers: customerArray\n    });\n    this.setState({\n      bulk_orders: customerArray\n    });\n    const orderArray = [];\n    firebase.database().ref('/orders').on('value', function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        orderArray.push(childSnapshot.toJSON());\n      });\n    });\n    this.setState({\n      orders: orderArray\n    });\n    var idNum = 0;\n    firebase.database().ref('/idcount').once('value').then(snapshot => {\n      this.setState({\n        idcount: snapshot.val()\n      });\n      console.log('state var idcount: ', this.state.idcount);\n      idNum = snapshot.val();\n      console.log('id from firebase: ', snapshot.val());\n    }); //console.log('var idNum: ', idNum);\n\n    this.setState({\n      idcount: idNum\n    });\n  }\n\n  render() {\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 22\n      }\n    });\n    var bulk_order = this.state.selectedOrders; //var history = this.getCustomerHistory(customer)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      id: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, \"Add New Order Inquiry\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, \"Use this form to enter all information about a new order or order inquiry\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-fluid p-formgrid p-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    }, \"Name*\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.name,\n      id: \"firstname\",\n      type: \"text\",\n      onChange: e => {\n        this.onNameValueChange(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 25\n      }\n    }, \"Organization\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.organization,\n      id: \"lastname\",\n      type: \"text\",\n      onChange: e => {\n        this.onOrganizationValueChange(e.target.value);\n      },\n      placeholder: \"Type Organization or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, \"Blank\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.blank,\n      id: \"blank\",\n      type: \"text\",\n      onChange: e => {\n        this.onBlankValueChange(e.target.value);\n      },\n      placeholder: \"Type Blank or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 25\n      }\n    }, \"Email*\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.email,\n      id: \"newemail\",\n      type: \"text\",\n      onChange: e => {\n        this.onEmailValueChange(e.target.value);\n      },\n      placeholder: \"Required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 25\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.phone,\n      id: \"newphone\",\n      type: \"text\",\n      onChange: e => {\n        this.onPhoneValueChange(e.target.value);\n      },\n      placeholder: \"###-###-#### or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 25\n      }\n    }, \"Street Address\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.newaddress,\n      id: \"newaddress\",\n      type: \"text\",\n      onChange: e => {\n        this.onAddressValueChange(e.target.value);\n      },\n      placeholder: \"Type Street Address or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 25\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.newcity,\n      id: \"newaddress\",\n      type: \"text\",\n      onChange: e => {\n        this.onCityValueChange(e.target.value);\n      },\n      placeholder: \"Type City Name or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 25\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.newstate,\n      id: \"newaddress\",\n      type: \"text\",\n      onChange: e => {\n        this.onStateValueChange(e.target.value);\n      },\n      placeholder: \"Type State or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 25\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.newpostalcode,\n      id: \"newaddress\",\n      type: \"text\",\n      onChange: e => {\n        this.onPostalCodeValueChange(e.target.value);\n      },\n      placeholder: \"Type Postal Code or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 25\n      }\n    }), \"    \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 25\n      }\n    }, \"Tax-Exempt\"), /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.tax_exempt,\n      options: this.state.planYesNo,\n      onChange: e => {\n        this.onTaxExemptValueChange(e.target.value);\n      },\n      placeholder: \"Select Yes or No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 25\n      }\n    }, \"Design\"), /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.design,\n      options: this.state.planYesNo,\n      onChange: e => {\n        this.onDesignValueChange(e.target.value);\n      },\n      placeholder: \"Select Yes or No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstnames6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 25\n      }\n    }, \"Assigned Ink Tank Team Member\"), /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.team_member,\n      options: this.state.planTeamMember,\n      onChange: e => {\n        this.onTeamMemberValueChange(e.target.value);\n      },\n      placeholder: \"Select Team Member\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 25\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.quantity,\n      id: \"quantity\",\n      type: \"text\",\n      onChange: e => {\n        this.onQuantityValueChange(e.target.value);\n      },\n      placeholder: \"Type Quantity or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 25\n      }\n    }, \"Order Quote\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.order_quote,\n      id: \"order_quote\",\n      type: \"text\",\n      onChange: e => {\n        this.onOrderQuoteValueChange(e.target.value);\n      },\n      placeholder: \"Type Order Quote or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12 p-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 25\n      }\n    }, \"Final Total\"), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.final_total,\n      id: \"final_total\",\n      type: \"text\",\n      onChange: e => {\n        this.onFinalTotalValueChange(e.target.value);\n      },\n      placeholder: \"Type Final Total or \\\"NA\\\"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      style: {\n        color: 'white',\n        backgroundColor: '#6a09a4',\n        borderColor: '#6a09a4',\n        marginTop: 30\n      },\n      label: \"ADD ORDER\",\n      onClick: () => {\n        this.addBulkOrder();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-field p-col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Messages, {\n      ref: el => this.messages = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/carolinelobel/Documents/GitHub/ink-tank-bulk-orders/src/components/AddOrders.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","InputTextarea","Messages","Message","firebase","validator","customerData","AddOrders","constructor","state","customers","orders","bulk_orders","selectedCustomer","selectedOrders","editing","idcount","name","team_member","blank","design","organization","tax_exempt","quantity","order_quote","final_total","phone","fullphone","email","fullemail","newaddress","address","newcity","city","newstate","newpostalcode","postal_code","ship_address","planSelectYear","label","value","planTeamMember","planSelectStatus","planYesNo","edit","bind","onTeamMemberValueChange","resetNewInfo","addBulkOrder","padId","idNum","digitLength","toString","length","result","setState","onNameValueChange","onBlankValueChange","toUpperCase","onDesignValueChange","onOrganizationValueChange","onTaxExemptValueChange","onQuantityValueChange","onOrderQuoteValueChange","onFinalTotalValueChange","onPhoneValueChange","onEmailValueChange","includes","onAddressValueChange","onCityValueChange","onStateValueChange","onPostalCodeValueChange","order_id","messages","show","severity","summary","detail","db","database","ref","child","set","once","then","snapshot","val","console","log","componentDidMount","customerArray","on","forEach","childSnapshot","push","toJSON","orderArray","render","header","textAlign","bulk_order","e","target","color","backgroundColor","borderColor","marginTop","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AAGA,OAAOC,YAAP,MAAyB,mBAAzB,C,CACA;;AAEA,OAAO,kBAAP,C,CACA;;AAGA,OAAO,MAAMC,SAAN,SAAwBd,SAAxB,CAAkC;AAErCe,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,gBAAgB,EAAE,IAJT;AAKTC,MAAAA,cAAc,EAAE,IALP;AAMTC,MAAAA,OAAO,EAAE,KANA;AAOTC,MAAAA,OAAO,EAAE,IAPA;AAQTC,MAAAA,IAAI,EAAE,EARG;AASTC,MAAAA,WAAW,EAAE,EATJ;AAUTC,MAAAA,KAAK,EAAE,EAVE;AAWTC,MAAAA,MAAM,EAAE,EAXC;AAYTC,MAAAA,YAAY,EAAE,EAZL;AAaTC,MAAAA,UAAU,EAAE,EAbH;AAcTC,MAAAA,QAAQ,EAAE,EAdD;AAeTC,MAAAA,WAAW,EAAE,EAfJ;AAgBTC,MAAAA,WAAW,EAAE,EAhBJ;AAiBTC,MAAAA,KAAK,EAAE,EAjBE;AAkBTC,MAAAA,SAAS,EAAE,EAlBF;AAmBTC,MAAAA,KAAK,EAAE,EAnBE;AAoBTC,MAAAA,SAAS,EAAE,EApBF;AAqBTC,MAAAA,UAAU,EAAE,EArBH;AAsBTC,MAAAA,OAAO,EAAE,EAtBA;AAuBTC,MAAAA,OAAO,EAAE,EAvBA;AAwBTC,MAAAA,IAAI,EAAE,EAxBG;AAyBTC,MAAAA,QAAQ,EAAE,EAzBD;AA0BTzB,MAAAA,KAAK,EAAE,EA1BE;AA2BT0B,MAAAA,aAAa,EAAE,EA3BN;AA4BTC,MAAAA,WAAW,EAAE,EA5BJ;AA6BTC,MAAAA,YAAY,EAAE,EA7BL;AA8BTC,MAAAA,cAAc,EAAE,CACZ;AAAEC,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OADY,EAEZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAFY,EAGZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAHY,EAIZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAJY,CA9BP;AAoCTC,MAAAA,cAAc,EAAE,CACZ;AAAEF,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OADY,EAEZ;AAAED,QAAAA,KAAK,EAAE,kBAAT;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAFY,EAGZ;AAAED,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OAHY,EAIZ;AAAED,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAJY,EAKZ;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OALY,CApCP;AA2CTE,MAAAA,gBAAgB,EAAE,CACd;AAAEH,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OADc,EAEd;AAAED,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAFc,EAGd;AAAED,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE;AAA5B,OAHc,EAId;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAJc,EAKd;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OALc,EAMd;AAAED,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OANc,CA3CT;AAmDTG,MAAAA,SAAS,EAAE,CACP;AAAEJ,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADO,EAEP;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAFO;AAnDF,KAAb;AAyDA,SAAKI,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BD,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,KAAL,GAAa,KAAKA,KAAL,CAAWJ,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAGDI,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACT,QAAIC,WAAW,GAAID,KAAK,CAACE,QAAN,EAAD,CAAmBC,MAArC;;AACA,QAAIF,WAAW,KAAK,CAApB,EAAuB;AACnB,UAAIG,MAAM,GAAG,SAASJ,KAAtB;AACH,KAFD,MAGK,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,UAAIG,MAAM,GAAG,QAAQJ,KAArB;AACH,KAFI,MAGA,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,UAAIG,MAAM,GAAG,OAAOJ,KAApB;AACH,KAFI,MAGA,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,UAAIG,MAAM,GAAG,MAAMJ,KAAnB;AACH,KAFI,MAGA,IAAIC,WAAW,KAAK,CAApB,EAAuB;AACxB,UAAIG,MAAM,GAAGJ,KAAK,CAACE,QAAN,EAAb;AACH;;AACD,WAAOE,MAAP;AAEH;;AACDV,EAAAA,IAAI,GAAG;AACH,SAAKW,QAAL,CAAc;AAAExC,MAAAA,OAAO,EAAE;AAAX,KAAd,EADG,CAEH;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;;AACAyC,EAAAA,iBAAiB,CAAChB,KAAD,EAAQ;AACrB;AACA,SAAKe,QAAL,CAAc;AAAEtC,MAAAA,IAAI,EAAEuB;AAAR,KAAd;AAEH;;AAEDM,EAAAA,uBAAuB,CAACN,KAAD,EAAQ;AAC3B;AACA,SAAKe,QAAL,CAAc;AAAErC,MAAAA,WAAW,EAAEsB;AAAf,KAAd;AACH;;AACDiB,EAAAA,kBAAkB,CAACjB,KAAD,EAAQ;AACtB;AACA,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAEpC,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KAFD,MAGK;AACD,WAAKoC,QAAL,CAAc;AAAEpC,QAAAA,KAAK,EAAEqB;AAAT,OAAd;AACH;AACJ;;AACDmB,EAAAA,mBAAmB,CAACnB,KAAD,EAAQ;AACvB,SAAKe,QAAL,CAAc;AAAEnC,MAAAA,MAAM,EAAEoB;AAAV,KAAd;AACH;;AACDoB,EAAAA,yBAAyB,CAACpB,KAAD,EAAQ;AAC7B,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAElC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACH,KAFD,MAGK;AACD,WAAKkC,QAAL,CAAc;AAAElC,QAAAA,YAAY,EAAEmB;AAAhB,OAAd;AACH;AACJ;;AACDqB,EAAAA,sBAAsB,CAACrB,KAAD,EAAQ;AAC1B,SAAKe,QAAL,CAAc;AAAEjC,MAAAA,UAAU,EAAEkB;AAAd,KAAd;AACH;;AACDsB,EAAAA,qBAAqB,CAACtB,KAAD,EAAQ;AACzB,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAEhC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KAFD,MAGK;AACD,WAAKgC,QAAL,CAAc;AAAEhC,QAAAA,QAAQ,EAAEiB;AAAZ,OAAd;AACH;AACJ;;AACDuB,EAAAA,uBAAuB,CAACvB,KAAD,EAAQ;AAC3B;AACA,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAE/B,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAFD,MAGK;AACD,WAAK+B,QAAL,CAAc;AAAE/B,QAAAA,WAAW,EAAEgB;AAAf,OAAd;AACH;AACJ;;AACDwB,EAAAA,uBAAuB,CAACxB,KAAD,EAAQ;AAC3B,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAE9B,QAAAA,WAAW,EAAE;AAAf,OAAd;AACH,KAFD,MAGK;AACD,WAAK8B,QAAL,CAAc;AAAE9B,QAAAA,WAAW,EAAEe;AAAf,OAAd;AACH;AACJ;;AACDyB,EAAAA,kBAAkB,CAACzB,KAAD,EAAQ;AACtB,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAE5B,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,WAAK4B,QAAL,CAAc;AAAE7B,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KAHD,MAGO,IAAIc,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjC,IAAwCA,KAAK,CAACa,MAAN,KAAiB,EAA7D,EAAiE;AACpE,WAAKE,QAAL,CAAc;AAAE5B,QAAAA,SAAS,EAAEa;AAAb,OAAd;AACH,KAFM,MAGF;AACD,WAAKe,QAAL,CAAc;AAAE7B,QAAAA,KAAK,EAAEc;AAAT,OAAd;AACH,KATqB,CAUtB;AACA;AACA;;AAEH;;AACD0B,EAAAA,kBAAkB,CAAC1B,KAAD,EAAQ;AACtB,QAAIA,KAAK,CAAC2B,QAAN,CAAe,GAAf,KAAuB3B,KAAK,CAAC2B,QAAN,CAAe,GAAf,CAA3B,EAAgD;AAC5C,WAAKZ,QAAL,CAAc;AAAE1B,QAAAA,SAAS,EAAEW;AAAb,OAAd;AACH;;AACD,SAAKe,QAAL,CAAc;AAAE3B,MAAAA,KAAK,EAAEY;AAAT,KAAd;AAEH;;AACD4B,EAAAA,oBAAoB,CAAC5B,KAAD,EAAQ;AACxB,QAAKA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA7D,EAAqE;AACjE,WAAKH,QAAL,CAAc;AAAEzB,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KAFD,MAGK;AACD,WAAKyB,QAAL,CAAc;AAAEzB,QAAAA,UAAU,EAAEU;AAAd,OAAd;AACH;AACJ;;AACD6B,EAAAA,iBAAiB,CAAC7B,KAAD,EAAQ;AACrB,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAEvB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAFD,MAGK;AACD,WAAKuB,QAAL,CAAc;AAAEvB,QAAAA,OAAO,EAAEQ;AAAX,OAAd;AACH;AACJ;;AACD8B,EAAAA,kBAAkB,CAAC9B,KAAD,EAAQ;AACtB,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAErB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KAFD,MAGK;AACD,WAAKqB,QAAL,CAAc;AAAErB,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACH;AACJ;;AACD+B,EAAAA,uBAAuB,CAAC/B,KAAD,EAAQ;AAC3B,QAAIA,KAAK,CAACkB,WAAN,OAAwB,IAAxB,IAAgClB,KAAK,CAACkB,WAAN,OAAwB,KAA5D,EAAmE;AAC/D,WAAKH,QAAL,CAAc;AAAEpB,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH,KAFD,MAGK;AACD,WAAKoB,QAAL,CAAc;AAAEpB,QAAAA,aAAa,EAAEK;AAAjB,OAAd;AACH;AACJ;;AACDO,EAAAA,YAAY,GAAG;AACX,SAAKQ,QAAL,CAAc;AAAEtC,MAAAA,IAAI,EAAE;AAAR,KAAd;AACA,SAAKsC,QAAL,CAAc;AAAErC,MAAAA,WAAW,EAAE;AAAf,KAAd;AACA,SAAKqC,QAAL,CAAc;AAAEpC,MAAAA,KAAK,EAAE;AAAT,KAAd;AACA,SAAKoC,QAAL,CAAc;AAAEnC,MAAAA,MAAM,EAAE;AAAV,KAAd;AACA,SAAKmC,QAAL,CAAc;AAAElC,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACA,SAAKkC,QAAL,CAAc;AAAEjC,MAAAA,UAAU,EAAE;AAAd,KAAd;AACA,SAAKiC,QAAL,CAAc;AAAEhC,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACA,SAAKgC,QAAL,CAAc;AAAE/B,MAAAA,WAAW,EAAE;AAAf,KAAd;AACA,SAAK+B,QAAL,CAAc;AAAE9B,MAAAA,WAAW,EAAE;AAAf,KAAd;AACA,SAAK8B,QAAL,CAAc;AAAE7B,MAAAA,KAAK,EAAE;AAAT,KAAd;AACA,SAAK6B,QAAL,CAAc;AAAE3B,MAAAA,KAAK,EAAE;AAAT,KAAd;AACA,SAAK2B,QAAL,CAAc;AAAEzB,MAAAA,UAAU,EAAE;AAAd,KAAd;AACA,SAAKyB,QAAL,CAAc;AAAErB,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACA,SAAKqB,QAAL,CAAc;AAAEvB,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,SAAKuB,QAAL,CAAc;AAAEpB,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACH;;AAEDa,EAAAA,YAAY,GAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAI,KAAKvC,KAAL,CAAWQ,IAAX,KAAoB,EAApB,IAA0B,KAAKR,KAAL,CAAWY,YAAX,KAA4B,EAAtD,IAA4D,KAAKZ,KAAL,CAAWoB,SAAX,KAAyB,EAArF,IAA2F,KAAKpB,KAAL,CAAWkB,SAAX,KAAyB,EAApH,IAA0H,KAAKlB,KAAL,CAAWU,KAAX,KAAqB,EAA/I,IAAqJ,KAAKV,KAAL,CAAWW,MAAX,KAAsB,EAA3K,IAAiL,KAAKX,KAAL,CAAWS,WAAX,KAA2B,IAA5M,IAAoN,KAAKT,KAAL,CAAWa,UAAX,KAA0B,IAA9O,IAAsP,KAAKb,KAAL,CAAWc,QAAX,KAAwB,IAA9Q,IAAsR,KAAKd,KAAL,CAAWe,WAAX,KAA2B,IAAjT,IAAyT,KAAKf,KAAL,CAAWgB,WAAX,KAA2B,IAAxV,EAA8V;AAE1V,UAAIyB,KAAK,GAAG,KAAKD,KAAL,CAAW,KAAKxC,KAAL,CAAWO,OAAtB,CAAZ,CAF0V,CAG1V;;AACA,UAAIwD,QAAQ,GAAG,KAAK/D,KAAL,CAAWO,OAA1B,CAJ0V,CAK1V;;AACA,WAAKyD,QAAL,CAAcC,IAAd,CAAmB;AAAEC,QAAAA,QAAQ,EAAE,SAAZ;AAAuBC,QAAAA,OAAO,EAAE,SAAhC;AAA2CC,QAAAA,MAAM,EAAE;AAAnD,OAAnB;AACA,YAAMC,EAAE,GAAG1E,QAAQ,CAAC2E,QAAT,GAAoBC,GAApB,EAAX,CAP0V,CAQ1V;;AACAF,MAAAA,EAAE,CAACG,KAAH,CAAS,UAAT,EAAqBC,GAArB,CAAyB,KAAKzE,KAAL,CAAWO,OAAX,GAAqB,CAA9C;AACA8D,MAAAA,EAAE,CAACG,KAAH,CAAS,UAAT,EAAqBE,IAArB,CAA0B,OAA1B,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAK9B,QAAL,CAAc;AAAEvC,UAAAA,OAAO,EAAEqE,QAAQ,CAACC,GAAT;AAAX,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAK/E,KAAL,CAAWO,OAA9C,EAFc,CAGd;;AACAuE,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAQ,CAACC,GAAT,EAAlC;AACH,OANL;AAQA,YAAMrE,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAxB;AACA,YAAMS,KAAK,GAAG,KAAKjB,KAAL,CAAWkB,SAAzB;AACA,YAAMC,KAAK,GAAG,KAAKnB,KAAL,CAAWoB,SAAzB;AACA,YAAMR,YAAY,GAAG,KAAKZ,KAAL,CAAWY,YAAhC;AACA,YAAMD,MAAM,GAAG,KAAKX,KAAL,CAAWW,MAA1B;AACA,YAAMD,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;AACA,YAAMI,QAAQ,GAAG,KAAKd,KAAL,CAAWc,QAA5B;AACA,YAAMc,YAAY,GAAG,KAAK5B,KAAL,CAAWqB,UAAX,GAAwB,GAAxB,GAA8B,KAAKrB,KAAL,CAAWuB,OAAzC,GAAmD,GAAnD,GAAyD,KAAKvB,KAAL,CAAWyB,QAApE,GAA+E,GAA/E,GAAqF,KAAKzB,KAAL,CAAW0B,aAArH;AACA,YAAMV,WAAW,GAAG,KAAKhB,KAAL,CAAWgB,WAA/B;AACA,YAAMD,WAAW,GAAG,KAAKf,KAAL,CAAWe,WAA/B;AACA,YAAMN,WAAW,GAAG,KAAKT,KAAL,CAAWS,WAA/B;AACA,YAAMI,UAAU,GAAG,KAAKb,KAAL,CAAWa,UAA9B;AACAwD,MAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAA3B,EAAqCW,IAArC,CAA0C,OAA1C,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,YAAI,CAACA,QAAQ,CAACC,GAAT,EAAL,EAAqB;AACjBR,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,SAAtC,EAAiDU,GAAjD,CAAqD,KAArD;AACAJ,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,SAAtC,EAAiDU,GAAjD,CAAqD,UAArD;AACAJ,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,QAAtC,EAAgDU,GAAhD,CAAoDtD,KAApD;AACAkD,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,WAAtC,EAAmDU,GAAnD,CAAuDV,QAAQ,CAACpB,QAAT,EAAvD;AACA0B,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,sBAAtC,EAA8DU,GAA9D,CAAkE,KAAlE;AACAJ,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,OAAtC,EAA+CU,GAA/C,CAAmDjE,IAAnD;AACA6D,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,QAAtC,EAAgDU,GAAhD,CAAoDxD,KAApD;AACAoD,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,eAAtC,EAAuDU,GAAvD,CAA2D7D,YAA3D;AACAyD,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,SAAtC,EAAiDU,GAAjD,CAAqD9D,MAArD;AACA0D,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,QAAtC,EAAgDU,GAAhD,CAAoD/D,KAApD;AACA2D,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,eAAtC,EAAuDU,GAAvD,CAA2D7C,YAA3D;AACAyC,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,cAAtC,EAAsDU,GAAtD,CAA0DzD,WAA1D;AACAqD,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,cAAtC,EAAsDU,GAAtD,CAA0D1D,WAA1D;AACAsD,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,cAAtC,EAAsDU,GAAtD,CAA0DhE,WAA1D;AACA4D,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,WAAtC,EAAmDU,GAAnD,CAAuD3D,QAAvD;AACAuD,UAAAA,EAAE,CAACG,KAAH,CAAS,kBAAkBT,QAAlB,GAA6B,aAAtC,EAAqDU,GAArD,CAAyD5D,UAAzD;AAEH;AACJ,OArBL;AAsBA,WAAKiC,QAAL,CAAc;AAAEtC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKsC,QAAL,CAAc;AAAE3B,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAK2B,QAAL,CAAc;AAAE7B,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAK6B,QAAL,CAAc;AAAElC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,WAAKkC,QAAL,CAAc;AAAEnC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,WAAKmC,QAAL,CAAc;AAAEpC,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAKoC,QAAL,CAAc;AAAElB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,WAAKkB,QAAL,CAAc;AAAExB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKwB,QAAL,CAAc;AAAEtB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKsB,QAAL,CAAc;AAAE9C,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAK8C,QAAL,CAAc;AAAEnB,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKmB,QAAL,CAAc;AAAE9B,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAK8B,QAAL,CAAc;AAAE/B,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAK+B,QAAL,CAAc;AAAErC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,WAAKqC,QAAL,CAAc;AAAEhC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKgC,QAAL,CAAc;AAAEjC,QAAAA,UAAU,EAAE;AAAd,OAAd;AACA,WAAKiC,QAAL,CAAc;AAAE5B,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,WAAK4B,QAAL,CAAc;AAAE1B,QAAAA,SAAS,EAAE;AAAb,OAAd,EArE0V,CAsE1V;AAEA;AACA;AACH,KA1ED,MA2EK;AACD,WAAK4C,QAAL,CAAcC,IAAd,CAAmB;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,OAAO,EAAE,2BAA9B;AAA2DC,QAAAA,MAAM,EAAE;AAAnE,OAAnB;AACH;AAEJ;AAED;;;AACAY,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAG,EAAtB;AACAtF,IAAAA,QAAQ,CAAC2E,QAAT,GAAoBC,GAApB,CAAwB,cAAxB,EAAwCW,EAAxC,CAA2C,OAA3C,EAAoD,UAAUN,QAAV,EAAoB;AACpEA,MAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtCH,QAAAA,aAAa,CAACI,IAAd,CAAmBD,aAAa,CAACE,MAAd,EAAnB;AACH,OAFD;AAGH,KAJD;AAKA,SAAKxC,QAAL,CAAc;AAAE7C,MAAAA,SAAS,EAAEgF;AAAb,KAAd;AACA,SAAKnC,QAAL,CAAc;AAAE3C,MAAAA,WAAW,EAAE8E;AAAf,KAAd;AACA,UAAMM,UAAU,GAAG,EAAnB;AACA5F,IAAAA,QAAQ,CAAC2E,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,EAAmCW,EAAnC,CAAsC,OAAtC,EAA+C,UAAUN,QAAV,EAAoB;AAC/DA,MAAAA,QAAQ,CAACO,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACtCG,QAAAA,UAAU,CAACF,IAAX,CAAgBD,aAAa,CAACE,MAAd,EAAhB;AACH,OAFD;AAGH,KAJD;AAKA,SAAKxC,QAAL,CAAc;AAAE5C,MAAAA,MAAM,EAAEqF;AAAV,KAAd;AACA,QAAI9C,KAAK,GAAG,CAAZ;AACA9C,IAAAA,QAAQ,CAAC2E,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,EAAoCG,IAApC,CAAyC,OAAzC,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAK9B,QAAL,CAAc;AAAEvC,QAAAA,OAAO,EAAEqE,QAAQ,CAACC,GAAT;AAAX,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAK/E,KAAL,CAAWO,OAA9C;AACAkC,MAAAA,KAAK,GAAGmC,QAAQ,CAACC,GAAT,EAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAQ,CAACC,GAAT,EAAlC;AACH,KANL,EAjBgB,CAwBhB;;AACA,SAAK/B,QAAL,CAAc;AAAEvC,MAAAA,OAAO,EAAEkC;AAAX,KAAd;AACH;;AAED+C,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,gBAAG;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,QAAIC,UAAU,GAAG,KAAK3F,KAAL,CAAWK,cAA5B,CAFK,CAGL;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,EAAE,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAFJ,eAII;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWQ,IAA7B;AAAmC,MAAA,EAAE,EAAC,WAAtC;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAA8D,MAAA,QAAQ,EAAGoF,CAAD,IAAO;AAAE,aAAK7C,iBAAL,CAAuB6C,CAAC,CAACC,MAAF,CAAS9D,KAAhC;AAAyC,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWY,YAA7B;AAA2C,MAAA,EAAE,EAAC,UAA9C;AAAyD,MAAA,IAAI,EAAC,MAA9D;AAAqE,MAAA,QAAQ,EAAGgF,CAAD,IAAO;AAAE,aAAKzC,yBAAL,CAA+ByC,CAAC,CAACC,MAAF,CAAS9D,KAAxC;AAAiD,OAAzI;AAA2I,MAAA,WAAW,EAAC,6BAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,eASI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWU,KAA7B;AAAoC,MAAA,EAAE,EAAC,OAAvC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,QAAQ,EAAGkF,CAAD,IAAO;AAAE,aAAK5C,kBAAL,CAAwB4C,CAAC,CAACC,MAAF,CAAS9D,KAAjC;AAA0C,OAAxH;AAA0H,MAAA,WAAW,EAAC,sBAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,eAaI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWmB,KAA7B;AAAoC,MAAA,EAAE,EAAC,UAAvC;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAA8D,MAAA,QAAQ,EAAGyE,CAAD,IAAO;AAAE,aAAKnC,kBAAL,CAAwBmC,CAAC,CAACC,MAAF,CAAS9D,KAAjC;AAA0C,OAA3H;AAA6H,MAAA,WAAW,EAAC,UAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAbJ,eAiBI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWiB,KAA7B;AAAoC,MAAA,EAAE,EAAC,UAAvC;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAA8D,MAAA,QAAQ,EAAG2E,CAAD,IAAO;AAAE,aAAKpC,kBAAL,CAAwBoC,CAAC,CAACC,MAAF,CAAS9D,KAAjC;AAA0C,OAA3H;AAA6H,MAAA,WAAW,EAAC,wBAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjBJ,eAuBI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWqB,UAA7B;AAAyC,MAAA,EAAE,EAAC,YAA5C;AAAyD,MAAA,IAAI,EAAC,MAA9D;AAAqE,MAAA,QAAQ,EAAGuE,CAAD,IAAO;AAAE,aAAKjC,oBAAL,CAA0BiC,CAAC,CAACC,MAAF,CAAS9D,KAAnC;AAA4C,OAApI;AAAsI,MAAA,WAAW,EAAC,+BAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAvBJ,eA4BI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWuB,OAA7B;AAAsC,MAAA,EAAE,EAAC,YAAzC;AAAsD,MAAA,IAAI,EAAC,MAA3D;AAAkE,MAAA,QAAQ,EAAGqE,CAAD,IAAO;AAAE,aAAKhC,iBAAL,CAAuBgC,CAAC,CAACC,MAAF,CAAS9D,KAAhC;AAAyC,OAA9H;AAAgI,MAAA,WAAW,EAAC,0BAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA5BJ,eAgCI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWyB,QAA7B;AAAuC,MAAA,EAAE,EAAC,YAA1C;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,QAAQ,EAAGmE,CAAD,IAAO;AAAE,aAAK/B,kBAAL,CAAwB+B,CAAC,CAACC,MAAF,CAAS9D,KAAjC;AAA0C,OAAhI;AAAkI,MAAA,WAAW,EAAC,sBAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAhCJ,eAoCI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAW0B,aAA7B;AAA4C,MAAA,EAAE,EAAC,YAA/C;AAA4D,MAAA,IAAI,EAAC,MAAjE;AAAwE,MAAA,QAAQ,EAAGkE,CAAD,IAAO;AAAE,aAAK9B,uBAAL,CAA6B8B,CAAC,CAACC,MAAF,CAAS9D,KAAtC;AAA+C,OAA1I;AAA4I,MAAA,WAAW,EAAC,4BAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,SApCJ,eAyCI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWa,UAA5B;AAAwC,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWkC,SAA5D;AAAuE,MAAA,QAAQ,EAAG0D,CAAD,IAAO;AAAE,aAAKxC,sBAAL,CAA4BwC,CAAC,CAACC,MAAF,CAAS9D,KAArC;AAA8C,OAAxI;AAA0I,MAAA,WAAW,EAAC,kBAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAzCJ,eA6CI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWW,MAA5B;AAAoC,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWkC,SAAxD;AAAmE,MAAA,QAAQ,EAAG0D,CAAD,IAAO;AAAE,aAAK1C,mBAAL,CAAyB0C,CAAC,CAACC,MAAF,CAAS9D,KAAlC;AAA2C,OAAjI;AAAmI,MAAA,WAAW,EAAC,kBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA7CJ,eAiDI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWS,WAA5B;AAAyC,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWgC,cAA7D;AAA6E,MAAA,QAAQ,EAAG4D,CAAD,IAAO;AAAE,aAAKvD,uBAAL,CAA6BuD,CAAC,CAACC,MAAF,CAAS9D,KAAtC;AAA+C,OAA/I;AAAiJ,MAAA,WAAW,EAAC,oBAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAjDJ,eAsDI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWc,QAA7B;AAAuC,MAAA,EAAE,EAAC,UAA1C;AAAqD,MAAA,IAAI,EAAC,MAA1D;AAAiE,MAAA,QAAQ,EAAG8E,CAAD,IAAO;AAAE,aAAKvC,qBAAL,CAA2BuC,CAAC,CAACC,MAAF,CAAS9D,KAApC;AAA6C,OAAjI;AAAmI,MAAA,WAAW,EAAC,yBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAtDJ,eA0DI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWe,WAA7B;AAA0C,MAAA,EAAE,EAAC,aAA7C;AAA2D,MAAA,IAAI,EAAC,MAAhE;AAAuE,MAAA,QAAQ,EAAG6E,CAAD,IAAO;AAAE,aAAKtC,uBAAL,CAA6BsC,CAAC,CAACC,MAAF,CAAS9D,KAAtC;AAA+C,OAAzI;AAA2I,MAAA,WAAW,EAAC,4BAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA1DJ,eA8DI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWgB,WAA7B;AAA0C,MAAA,EAAE,EAAC,aAA7C;AAA2D,MAAA,IAAI,EAAC,MAAhE;AAAuE,MAAA,QAAQ,EAAG4E,CAAD,IAAO;AAAE,aAAKrC,uBAAL,CAA6BqC,CAAC,CAACC,MAAF,CAAS9D,KAAtC;AAA+C,OAAzI;AAA2I,MAAA,WAAW,EAAC,4BAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA9DJ,eAoEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAE+D,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,eAAe,EAAE,SAAnC;AAA8CC,QAAAA,WAAW,EAAE,SAA3D;AAAsEC,QAAAA,SAAS,EAAE;AAAjF,OAA7B;AAAoH,MAAA,KAAK,EAAC,WAA1H;AAAsI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAK1D,YAAL;AAAqB,OAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CApEJ,eAuEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAG2D,EAAD,IAAQ,KAAKlC,QAAL,GAAgBkC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAvEJ,CAJJ,CADJ;AAwFH;;AAhgBoC","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { Chart } from 'primereact/chart'\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class AddOrders extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            orders: [],\n            bulk_orders: [],\n            selectedCustomer: null,\n            selectedOrders: null,\n            editing: false,\n            idcount: null,\n            name: '',\n            team_member: '',\n            blank: '',\n            design: '',\n            organization: '',\n            tax_exempt: '',\n            quantity: '',\n            order_quote: '',\n            final_total: '',\n            phone: '',\n            fullphone: '',\n            email: '',\n            fullemail: '',\n            newaddress: '',\n            address: '',\n            newcity: '',\n            city: '',\n            newstate: '',\n            state: '',\n            newpostalcode: '',\n            postal_code: '',\n            ship_address: '',\n            planSelectYear: [\n                { label: '2020-2021', value: '2020-2021' },\n                { label: '2021-2022', value: '2021-2022' },\n                { label: '2022-2023', value: '2022-2023' },\n                { label: '2023-2024', value: '2023-2024' }\n            ],\n            planTeamMember: [\n                { label: 'Caden Gaviria', value: 'Caden Gaviria' },\n                { label: 'Philippe Manzone', value: 'Philippe Manzone' },\n                { label: 'Alec Aragon', value: 'Alec Aragon' },\n                { label: 'Shannon Groves', value: 'Shannon Groves' },\n                { label: 'Ali Kilic', value: 'Ali Kilic' }\n            ],\n            planSelectStatus: [\n                { label: 'Confirmed', value: 'confirmed' },\n                { label: 'In Production', value: 'in production' },\n                { label: 'Invoiced', value: 'invoiced' },\n                { label: 'Fulfilled', value: 'fulfilled' },\n                { label: 'Shipped', value: 'Shipped' },\n                { label: 'Quote', value: 'quote' }\n            ],\n            planYesNo: [\n                { label: 'Yes', value: 'Yes' },\n                { label: 'No', value: 'No' }\n            ]\n\n        };\n        this.edit = this.edit.bind(this);\n        this.onTeamMemberValueChange = this.onTeamMemberValueChange.bind(this)\n        this.resetNewInfo = this.resetNewInfo.bind(this)\n        this.addBulkOrder = this.addBulkOrder.bind(this)\n        this.padId = this.padId.bind(this)\n    }\n\n\n    padId(idNum) {\n        var digitLength = (idNum.toString()).length;\n        if (digitLength === 1) {\n            var result = '0000' + idNum;\n        }\n        else if (digitLength === 2) {\n            var result = '000' + idNum;\n        }\n        else if (digitLength === 3) {\n            var result = '00' + idNum;\n        }\n        else if (digitLength === 4) {\n            var result = '0' + idNum;\n        }\n        else if (digitLength === 5) {\n            var result = idNum.toString();\n        }\n        return result;\n\n    }\n    edit() {\n        this.setState({ editing: true });\n        //this.resetNewInfo();\n    }\n    /*\n        save(bulk_order) {\n            this.setState({ editing: false });\n            //console.log(this.state.newplan)\n            let allbulkorders = [...this.state.bulk_orders];\n            let newbulkorder = { ...this.state.selectedOrders };\n    \n            if (this.state.newaddress && this.state.newcity && this.state.newstate && this.state.newpostalcode) {\n                newbulkorder.ship_address = this.state.newaddress + this.state.newcity + ', ' + this.state.newstate + this.state.newpostalcode;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/ship_address').set(newbulkorder.ship_address);\n            }\n    \n            if (this.state.blank) {\n                newbulkorder.blank = this.state.blank;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/blank').set(newbulkorder.blank);\n            }\n            if (this.state.quantity) {\n                newbulkorder.quantity = this.state.quantity;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/quantity').set(newbulkorder.quantity);\n            }\n            if (this.state.phone) {\n                newbulkorder.phone = this.state.phone;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/phone').set(newbulkorder.phone);\n            }\n            if (this.state.email) {\n                newbulkorder.email = this.state.email;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/email').set(newbulkorder.email)\n            }\n            if (this.state.organization) {\n                newbulkorder.organization = this.state.organization;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/organization').set(newbulkorder.organization)\n            }\n            if (this.state.order_quote) {\n                newbulkorder.order_quote = this.state.order_quote;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/order_quote').set(newbulkorder.order_quote)\n            }\n            if (this.state.final_total) {\n                newbulkorder.final_total = this.state.final_total;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/final_total').set(newbulkorder.final_total)\n            }\n            if (this.state.tax_exempt) {\n                newbulkorder.tax_exempt = this.state.tax_exempt;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/tax_exempt').set(newbulkorder.tax_exempt)\n            }\n            if (this.state.team_member) {\n                newbulkorder.order_quote = this.state.team_member;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/team_member').set(newbulkorder.team_member)\n            }\n            if (this.state.design) {\n                newbulkorder.design = this.state.design;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/design').set(newbulkorder.design)\n            }\n            if (this.state.name) {\n                newbulkorder.name = this.state.name;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/name').set(newbulkorder.name)\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/status').set('invoiced')\n            }\n    \n            let count = 0;\n            let individual = null;\n            allbulkorders.map(each => {\n                if (newbulkorder.order_id == each.order_id) {\n                    individual = { ...allbulkorders[count] };\n                    individual = newbulkorder;\n                    allbulkorders[count] = individual;\n                }\n                count = count + 1\n            })\n            this.setState({ bulk_orders: allbulkorders });\n            this.setState({ selectedOrders: newbulkorder });\n    \n        }\n    */\n    //CUSTOMER INFORMATION EDITING\n    onNameValueChange(value) {\n        //console.log('new first name: ', value)\n        this.setState({ name: value });\n\n    }\n\n    onTeamMemberValueChange(value) {\n        //console.log('newPlanYear: ', value)\n        this.setState({ team_member: value });\n    }\n    onBlankValueChange(value) {\n        //console.log('newPlanQuarter: ', value)\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ blank: \"NA\" });\n        }\n        else {\n            this.setState({ blank: value });\n        }\n    }\n    onDesignValueChange(value) {\n        this.setState({ design: value });\n    }\n    onOrganizationValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ organization: \"NA\" });\n        }\n        else {\n            this.setState({ organization: value })\n        }\n    }\n    onTaxExemptValueChange(value) {\n        this.setState({ tax_exempt: value });\n    }\n    onQuantityValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ quantity: \"NA\" })\n        }\n        else {\n            this.setState({ quantity: value });\n        }\n    }\n    onOrderQuoteValueChange(value) {\n        //try, execept \n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ order_quote: \"NA\" })\n        }\n        else {\n            this.setState({ order_quote: value });\n        }\n    }\n    onFinalTotalValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ final_total: \"NA\" })\n        }\n        else {\n            this.setState({ final_total: value });\n        }\n    }\n    onPhoneValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ fullphone: \"NA\" })\n            this.setState({ phone: \"NA\" })\n        } else if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n            this.setState({ fullphone: value })\n        }\n        else {\n            this.setState({ phone: value })\n        }\n        //this.setState({ phone: value });\n        // if value == NA: set to NA; conver to uppercase\n        // else; cast as float\n\n    }\n    onEmailValueChange(value) {\n        if (value.includes('@') && value.includes('.')) {\n            this.setState({ fullemail: value });\n        }\n        this.setState({ email: value });\n\n    }\n    onAddressValueChange(value) {\n        if ((value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\")) {\n            this.setState({ newaddress: \"NA\" })\n        }\n        else {\n            this.setState({ newaddress: value });\n        }\n    }\n    onCityValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ newcity: \"NA\" })\n        }\n        else {\n            this.setState({ newcity: value });\n        }\n    }\n    onStateValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ newstate: \"NA\" })\n        }\n        else {\n            this.setState({ newstate: value });\n        }\n    }\n    onPostalCodeValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ newpostalcode: \"NA\" });\n        }\n        else {\n            this.setState({ newpostalcode: value })\n        }\n    }\n    resetNewInfo() {\n        this.setState({ name: '' });\n        this.setState({ team_member: '' });\n        this.setState({ blank: '' });\n        this.setState({ design: '' });\n        this.setState({ organization: '' });\n        this.setState({ tax_exempt: '' });\n        this.setState({ quantity: '' });\n        this.setState({ order_quote: '' });\n        this.setState({ final_total: '' });\n        this.setState({ phone: '' });\n        this.setState({ email: '' });\n        this.setState({ newaddress: '' });\n        this.setState({ newstate: '' });\n        this.setState({ newcity: '' });\n        this.setState({ newpostalcode: '' });\n    }\n\n    addBulkOrder() {\n        //console.log('new first name: ', this.state.newfirstname);\n        //console.log('new last name: ', this.state.newlastname);\n        // console.log('new plan year: ', this.state.newplanyear);\n        // console.log('new plan quarter: ', this.state.newplanquarter);\n        // console.log('new max weight: ', this.state.newmax);\n        // console.log('new res hall: ', this.state.newreshall);\n        // console.log('new phone: ', this.state.newphone);\n        // console.log('new email: ', this.state.newemail);\n        //this.setState({idcount: this.state.idcount+1});\n        //console.log('updated id Count', this.state.idcount);\n\n        if (this.state.name !== '' && this.state.organization !== '' && this.state.fullemail !== '' && this.state.fullphone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n\n            var idNum = this.padId(this.state.idcount);\n            // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n            var order_id = this.state.idcount;\n            //console.log('NEW ID: ', order_id);\n            this.messages.show({ severity: 'success', summary: 'Success', detail: 'Order Added!' });\n            const db = firebase.database().ref()\n            //updating order_id count in firebase and then updating state variable\n            db.child('/idcount').set(this.state.idcount + 1);\n            db.child('/idcount').once('value')\n                .then(snapshot => {\n                    this.setState({ idcount: snapshot.val() })\n                    console.log('state var idcount: ', this.state.idcount);\n                    //idNum = snapshot.val();\n                    console.log('id from firebase: ', snapshot.val());\n                });\n\n            const name = this.state.name;\n            const phone = this.state.fullphone;\n            const email = this.state.fullemail;\n            const organization = this.state.organization\n            const design = this.state.design\n            const blank = this.state.blank\n            const quantity = this.state.quantity\n            const ship_address = this.state.newaddress + ' ' + this.state.newcity + ' ' + this.state.newstate + ' ' + this.state.newpostalcode\n            const final_total = this.state.final_total\n            const order_quote = this.state.order_quote\n            const team_member = this.state.team_member\n            const tax_exempt = this.state.tax_exempt\n            db.child('/bulk_orders/' + order_id).once(\"value\")\n                .then(snapshot => {\n                    if (!snapshot.val()) {\n                        db.child('/bulk_orders/' + order_id + '/active').set(\"Yes\");\n                        db.child('/bulk_orders/' + order_id + '/status').set(\"invoiced\");\n                        db.child('/bulk_orders/' + order_id + '/email').set(email);\n                        db.child('/bulk_orders/' + order_id + '/order_id').set(order_id.toString());\n                        db.child('/bulk_orders/' + order_id + '/last_status_updated').set('N/A');\n                        db.child('/bulk_orders/' + order_id + '/name').set(name);\n                        db.child('/bulk_orders/' + order_id + '/phone').set(phone);\n                        db.child('/bulk_orders/' + order_id + '/organization').set(organization);\n                        db.child('/bulk_orders/' + order_id + '/design').set(design);\n                        db.child('/bulk_orders/' + order_id + '/blank').set(blank);\n                        db.child('/bulk_orders/' + order_id + '/ship_address').set(ship_address);\n                        db.child('/bulk_orders/' + order_id + '/final_total').set(final_total);\n                        db.child('/bulk_orders/' + order_id + '/order_quote').set(order_quote);\n                        db.child('/bulk_orders/' + order_id + '/team_member').set(team_member);\n                        db.child('/bulk_orders/' + order_id + '/quantity').set(quantity);\n                        db.child('/bulk_orders/' + order_id + '/tax_exempt').set(tax_exempt);\n\n                    }\n                })\n            this.setState({ name: '' });\n            this.setState({ email: '' });\n            this.setState({ phone: '' });\n            this.setState({ organization: '' });\n            this.setState({ design: '' });\n            this.setState({ blank: '' });\n            this.setState({ ship_address: '' });\n            this.setState({ address: '' });\n            this.setState({ city: '' });\n            this.setState({ state: '' });\n            this.setState({ postal_code: '' });\n            this.setState({ final_total: '' });\n            this.setState({ order_quote: '' });\n            this.setState({ team_member: '' });\n            this.setState({ quantity: '' });\n            this.setState({ tax_exempt: '' });\n            this.setState({ fullphone: '' });\n            this.setState({ fullemail: '' });\n            //const curr  = await this.resetNewInfo();\n\n            //console.log('reset info: ', this.state.newfirstname);\n            //document.getElementById(\"form\").reset();\n        }\n        else {\n            this.messages.show({ severity: \"error\", summary: \"Invalid or Missing Fields\", detail: 'Please enter all information or \"NA\" if field information is not available' });\n        }\n\n    }\n\n    /* --------------- Filters ---------------- */\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ customers: customerArray });\n        this.setState({ bulk_orders: customerArray });\n        const orderArray = [];\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                orderArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ orders: orderArray });\n        var idNum = 0;\n        firebase.database().ref('/idcount').once('value')\n            .then(snapshot => {\n                this.setState({ idcount: snapshot.val() })\n                console.log('state var idcount: ', this.state.idcount);\n                idNum = snapshot.val();\n                console.log('id from firebase: ', snapshot.val());\n            });\n        //console.log('var idNum: ', idNum);\n        this.setState({ idcount: idNum });\n    }\n\n    render() {\n        var header = <div style={{ textAlign: 'left' }}></div>\n        var bulk_order = this.state.selectedOrders\n        //var history = this.getCustomerHistory(customer)\n\n        return (\n            <div className=\"card\" id=\"form\">\n                <h1>Add New Order Inquiry</h1>\n                <p>Use this form to enter all information about a new order or order inquiry</p>\n\n                <div className=\"p-fluid p-formgrid p-grid\">\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Name*</label>\n                        <InputText value={this.state.name} id=\"firstname\" type=\"text\" onChange={(e) => { this.onNameValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Organization</label>\n                        <InputText value={this.state.organization} id=\"lastname\" type=\"text\" onChange={(e) => { this.onOrganizationValueChange(e.target.value); }} placeholder='Type Organization or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Blank</label>\n                        <InputText value={this.state.blank} id=\"blank\" type=\"text\" onChange={(e) => { this.onBlankValueChange(e.target.value); }} placeholder='Type Blank or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-6\">\n                        <label htmlFor=\"firstname6\">Email*</label>\n                        <InputText value={this.state.email} id=\"newemail\" type=\"text\" onChange={(e) => { this.onEmailValueChange(e.target.value); }} placeholder='Required'/>\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-6\">\n                        <label htmlFor=\"firstname6\">Phone</label>\n                        <InputText value={this.state.phone} id=\"newphone\" type=\"text\" onChange={(e) => { this.onPhoneValueChange(e.target.value); }} placeholder='###-###-#### or \"NA\"' />\n                    </div>\n\n\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"address\">Street Address</label>\n                        <InputText value={this.state.newaddress} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onAddressValueChange(e.target.value); }} placeholder='Type Street Address or \"NA\"' />\n\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"lastname6\">City</label>\n                        <InputText value={this.state.newcity} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onCityValueChange(e.target.value); }} placeholder='Type City Name or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"city\">State</label>\n                        <InputText value={this.state.newstate} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onStateValueChange(e.target.value); }} placeholder='Type State or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"state\">Postal Code</label>\n                        <InputText value={this.state.newpostalcode} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onPostalCodeValueChange(e.target.value); }} placeholder='Type Postal Code or \"NA\"' />    </div>\n\n\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Tax-Exempt</label>\n                        <Dropdown value={this.state.tax_exempt} options={this.state.planYesNo} onChange={(e) => { this.onTaxExemptValueChange(e.target.value); }} placeholder='Select Yes or No' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Design</label>\n                        <Dropdown value={this.state.design} options={this.state.planYesNo} onChange={(e) => { this.onDesignValueChange(e.target.value); }} placeholder='Select Yes or No' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstnames6\">Assigned Ink Tank Team Member</label>\n                        <Dropdown value={this.state.team_member} options={this.state.planTeamMember} onChange={(e) => { this.onTeamMemberValueChange(e.target.value); }} placeholder='Select Team Member' />\n\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Quantity</label>\n                        <InputText value={this.state.quantity} id=\"quantity\" type=\"text\" onChange={(e) => { this.onQuantityValueChange(e.target.value); }} placeholder='Type Quantity or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Order Quote</label>\n                        <InputText value={this.state.order_quote} id=\"order_quote\" type=\"text\" onChange={(e) => { this.onOrderQuoteValueChange(e.target.value); }} placeholder='Type Order Quote or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Final Total</label>\n                        <InputText value={this.state.final_total} id=\"final_total\" type=\"text\" onChange={(e) => { this.onFinalTotalValueChange(e.target.value); }} placeholder='Type Final Total or \"NA\"' />\n                    </div>\n\n\n                    <div className=\"p-field p-col-12\">\n                        <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} label=\"ADD ORDER\" onClick={() => { this.addBulkOrder() }} />\n                    </div>\n                    <div className=\"p-field p-col-12\">\n                        <Messages ref={(el) => this.messages = el}></Messages>\n                    </div>\n\n\n                </div>\n            </div>\n        );\n\n\n\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}