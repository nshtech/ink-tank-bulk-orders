{"ast":null,"code":"import _classCallCheck from \"/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/src/components/AddOrders.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Chart } from 'primereact/chart';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport validator from 'validator';\nimport customerData from '../customers.json'; // import classNames from 'classnames';\n\nimport '../Dashboard.css'; //import { arrayToHash } from '@fullcalendar/core/util/object';\n\nexport var AddOrders = /*#__PURE__*/function (_Component) {\n  _inherits(AddOrders, _Component);\n\n  var _super = _createSuper(AddOrders);\n\n  function AddOrders() {\n    var _this;\n\n    _classCallCheck(this, AddOrders);\n\n    _this = _super.call(this);\n    _this.state = {\n      customers: [],\n      orders: [],\n      bulk_orders: [],\n      selectedCustomer: null,\n      selectedOrders: null,\n      editing: false,\n      idcount: null,\n      name: '',\n      team_member: '',\n      blank: '',\n      design: '',\n      organization: '',\n      tax_exempt: '',\n      quantity: '',\n      order_quote: '',\n      final_total: '',\n      phone: '',\n      fullphone: '',\n      email: '',\n      fullemail: '',\n      newaddress: '',\n      address: '',\n      newcity: '',\n      city: '',\n      newstate: '',\n      state: '',\n      newpostalcode: '',\n      postal_code: '',\n      ship_address: '',\n      planSelectYear: [{\n        label: '2020-2021',\n        value: '2020-2021'\n      }, {\n        label: '2021-2022',\n        value: '2021-2022'\n      }, {\n        label: '2022-2023',\n        value: '2022-2023'\n      }, {\n        label: '2023-2024',\n        value: '2023-2024'\n      }],\n      planTeamMember: [{\n        label: 'Caden Gaviria',\n        value: 'Caden Gaviria'\n      }, {\n        label: 'Philippe Manzone',\n        value: 'Philippe Manzone'\n      }, {\n        label: 'Alec Aragon',\n        value: 'Alec Aragon'\n      }, {\n        label: 'Shannon Groves',\n        value: 'Shannon Groves'\n      }, {\n        label: 'Ali Kilic',\n        value: 'Ali Kilic'\n      }, {\n        label: 'Kethan Bajaj',\n        value: 'Kethan Bajaj'\n      }],\n      planSelectStatus: [{\n        label: 'Confirmed',\n        value: 'confirmed'\n      }, {\n        label: 'In Production',\n        value: 'in production'\n      }, {\n        label: 'Invoiced',\n        value: 'invoiced'\n      }, {\n        label: 'Fulfilled',\n        value: 'fulfilled'\n      }, {\n        label: 'Shipped',\n        value: 'Shipped'\n      }, {\n        label: 'Quote',\n        value: 'quote'\n      }],\n      planYesNo: [{\n        label: 'Yes',\n        value: 'Yes'\n      }, {\n        label: 'No',\n        value: 'No'\n      }]\n    };\n    _this.edit = _this.edit.bind(_assertThisInitialized(_this));\n    _this.onTeamMemberValueChange = _this.onTeamMemberValueChange.bind(_assertThisInitialized(_this));\n    _this.resetNewInfo = _this.resetNewInfo.bind(_assertThisInitialized(_this));\n    _this.addBulkOrder = _this.addBulkOrder.bind(_assertThisInitialized(_this));\n    _this.padId = _this.padId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddOrders, [{\n    key: \"padId\",\n    value: function padId(idNum) {\n      var digitLength = idNum.toString().length;\n\n      if (digitLength === 1) {\n        var result = '0000' + idNum;\n      } else if (digitLength === 2) {\n        var result = '000' + idNum;\n      } else if (digitLength === 3) {\n        var result = '00' + idNum;\n      } else if (digitLength === 4) {\n        var result = '0' + idNum;\n      } else if (digitLength === 5) {\n        var result = idNum.toString();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"edit\",\n    value: function edit() {\n      this.setState({\n        editing: true\n      }); //this.resetNewInfo();\n    }\n    /*\n        save(bulk_order) {\n            this.setState({ editing: false });\n            //console.log(this.state.newplan)\n            let allbulkorders = [...this.state.bulk_orders];\n            let newbulkorder = { ...this.state.selectedOrders };\n    \n            if (this.state.newaddress && this.state.newcity && this.state.newstate && this.state.newpostalcode) {\n                newbulkorder.ship_address = this.state.newaddress + this.state.newcity + ', ' + this.state.newstate + this.state.newpostalcode;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/ship_address').set(newbulkorder.ship_address);\n            }\n    \n            if (this.state.blank) {\n                newbulkorder.blank = this.state.blank;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/blank').set(newbulkorder.blank);\n            }\n            if (this.state.quantity) {\n                newbulkorder.quantity = this.state.quantity;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/quantity').set(newbulkorder.quantity);\n            }\n            if (this.state.phone) {\n                newbulkorder.phone = this.state.phone;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/phone').set(newbulkorder.phone);\n            }\n            if (this.state.email) {\n                newbulkorder.email = this.state.email;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/email').set(newbulkorder.email)\n            }\n            if (this.state.organization) {\n                newbulkorder.organization = this.state.organization;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/organization').set(newbulkorder.organization)\n            }\n            if (this.state.order_quote) {\n                newbulkorder.order_quote = this.state.order_quote;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/order_quote').set(newbulkorder.order_quote)\n            }\n            if (this.state.final_total) {\n                newbulkorder.final_total = this.state.final_total;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/final_total').set(newbulkorder.final_total)\n            }\n            if (this.state.tax_exempt) {\n                newbulkorder.tax_exempt = this.state.tax_exempt;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/tax_exempt').set(newbulkorder.tax_exempt)\n            }\n            if (this.state.team_member) {\n                newbulkorder.order_quote = this.state.team_member;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/team_member').set(newbulkorder.team_member)\n            }\n            if (this.state.design) {\n                newbulkorder.design = this.state.design;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/design').set(newbulkorder.design)\n            }\n            if (this.state.name) {\n                newbulkorder.name = this.state.name;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/name').set(newbulkorder.name)\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/status').set('invoiced')\n            }\n    \n            let count = 0;\n            let individual = null;\n            allbulkorders.map(each => {\n                if (newbulkorder.order_id == each.order_id) {\n                    individual = { ...allbulkorders[count] };\n                    individual = newbulkorder;\n                    allbulkorders[count] = individual;\n                }\n                count = count + 1\n            })\n            this.setState({ bulk_orders: allbulkorders });\n            this.setState({ selectedOrders: newbulkorder });\n    \n        }\n    */\n    //CUSTOMER INFORMATION EDITING\n\n  }, {\n    key: \"onNameValueChange\",\n    value: function onNameValueChange(value) {\n      //console.log('new first name: ', value)\n      this.setState({\n        name: value\n      });\n    }\n  }, {\n    key: \"onTeamMemberValueChange\",\n    value: function onTeamMemberValueChange(value) {\n      //console.log('newPlanYear: ', value)\n      this.setState({\n        team_member: value\n      });\n    }\n  }, {\n    key: \"onBlankValueChange\",\n    value: function onBlankValueChange(value) {\n      //console.log('newPlanQuarter: ', value)\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          blank: \"NA\"\n        });\n      } else {\n        this.setState({\n          blank: value\n        });\n      }\n    }\n  }, {\n    key: \"onDesignValueChange\",\n    value: function onDesignValueChange(value) {\n      this.setState({\n        design: value\n      });\n    }\n  }, {\n    key: \"onOrganizationValueChange\",\n    value: function onOrganizationValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          organization: \"NA\"\n        });\n      } else {\n        this.setState({\n          organization: value\n        });\n      }\n    }\n  }, {\n    key: \"onTaxExemptValueChange\",\n    value: function onTaxExemptValueChange(value) {\n      this.setState({\n        tax_exempt: value\n      });\n    }\n  }, {\n    key: \"onQuantityValueChange\",\n    value: function onQuantityValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          quantity: \"NA\"\n        });\n      } else {\n        this.setState({\n          quantity: value\n        });\n      }\n    }\n  }, {\n    key: \"onOrderQuoteValueChange\",\n    value: function onOrderQuoteValueChange(value) {\n      //try, execept \n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          order_quote: \"NA\"\n        });\n      } else {\n        this.setState({\n          order_quote: value\n        });\n      }\n    }\n  }, {\n    key: \"onFinalTotalValueChange\",\n    value: function onFinalTotalValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          final_total: \"NA\"\n        });\n      } else {\n        this.setState({\n          final_total: value\n        });\n      }\n    }\n  }, {\n    key: \"onPhoneValueChange\",\n    value: function onPhoneValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          fullphone: \"NA\"\n        });\n        this.setState({\n          phone: \"NA\"\n        });\n      } else if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n        this.setState({\n          fullphone: value\n        });\n      } else {\n        this.setState({\n          phone: value\n        });\n      } //this.setState({ phone: value });\n      // if value == NA: set to NA; conver to uppercase\n      // else; cast as float\n\n    }\n  }, {\n    key: \"onEmailValueChange\",\n    value: function onEmailValueChange(value) {\n      if (value.includes('@') && value.includes('.')) {\n        this.setState({\n          fullemail: value\n        });\n      }\n\n      this.setState({\n        email: value\n      });\n    }\n  }, {\n    key: \"onAddressValueChange\",\n    value: function onAddressValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          newaddress: \"NA\"\n        });\n      } else {\n        this.setState({\n          newaddress: value\n        });\n      }\n    }\n  }, {\n    key: \"onCityValueChange\",\n    value: function onCityValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          newcity: \"NA\"\n        });\n      } else {\n        this.setState({\n          newcity: value\n        });\n      }\n    }\n  }, {\n    key: \"onStateValueChange\",\n    value: function onStateValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          newstate: \"NA\"\n        });\n      } else {\n        this.setState({\n          newstate: value\n        });\n      }\n    }\n  }, {\n    key: \"onPostalCodeValueChange\",\n    value: function onPostalCodeValueChange(value) {\n      if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n        this.setState({\n          newpostalcode: \"NA\"\n        });\n      } else {\n        this.setState({\n          newpostalcode: value\n        });\n      }\n    }\n  }, {\n    key: \"resetNewInfo\",\n    value: function resetNewInfo() {\n      this.setState({\n        name: ''\n      });\n      this.setState({\n        team_member: ''\n      });\n      this.setState({\n        blank: ''\n      });\n      this.setState({\n        design: ''\n      });\n      this.setState({\n        organization: ''\n      });\n      this.setState({\n        tax_exempt: ''\n      });\n      this.setState({\n        quantity: ''\n      });\n      this.setState({\n        order_quote: ''\n      });\n      this.setState({\n        final_total: ''\n      });\n      this.setState({\n        phone: ''\n      });\n      this.setState({\n        email: ''\n      });\n      this.setState({\n        newaddress: ''\n      });\n      this.setState({\n        newstate: ''\n      });\n      this.setState({\n        newcity: ''\n      });\n      this.setState({\n        newpostalcode: ''\n      });\n    }\n  }, {\n    key: \"addBulkOrder\",\n    value: function addBulkOrder() {\n      var _this2 = this;\n\n      //console.log('new first name: ', this.state.newfirstname);\n      //console.log('new last name: ', this.state.newlastname);\n      // console.log('new plan year: ', this.state.newplanyear);\n      // console.log('new plan quarter: ', this.state.newplanquarter);\n      // console.log('new max weight: ', this.state.newmax);\n      // console.log('new res hall: ', this.state.newreshall);\n      // console.log('new phone: ', this.state.newphone);\n      // console.log('new email: ', this.state.newemail);\n      //this.setState({idcount: this.state.idcount+1});\n      //console.log('updated id Count', this.state.idcount);\n      if (this.state.name !== '' && this.state.organization !== '' && this.state.fullemail !== '' && this.state.fullphone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n        var idNum = this.padId(this.state.idcount); // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n\n        var order_id = this.state.idcount; //console.log('NEW ID: ', order_id);\n\n        this.messages.show({\n          severity: 'success',\n          summary: 'Success',\n          detail: 'Order Added!'\n        });\n        var db = firebase.database().ref(); //updating order_id count in firebase and then updating state variable\n\n        db.child('/idcount').set(this.state.idcount + 1);\n        db.child('/idcount').once('value').then(function (snapshot) {\n          _this2.setState({\n            idcount: snapshot.val()\n          });\n\n          console.log('state var idcount: ', _this2.state.idcount); //idNum = snapshot.val();\n\n          console.log('id from firebase: ', snapshot.val());\n        });\n        var name = this.state.name;\n        var phone = this.state.fullphone;\n        var email = this.state.fullemail;\n        var organization = this.state.organization;\n        var design = this.state.design;\n        var blank = this.state.blank;\n        var quantity = this.state.quantity;\n        var ship_address = this.state.newaddress + ' ' + this.state.newcity + ' ' + this.state.newstate + ' ' + this.state.newpostalcode;\n        var final_total = this.state.final_total;\n        var order_quote = this.state.order_quote;\n        var team_member = this.state.team_member;\n        var tax_exempt = this.state.tax_exempt;\n        db.child('/bulk_orders/' + order_id).once(\"value\").then(function (snapshot) {\n          if (!snapshot.val()) {\n            db.child('/bulk_orders/' + order_id + '/active').set(\"Yes\");\n            db.child('/bulk_orders/' + order_id + '/status').set(\"invoiced\");\n            db.child('/bulk_orders/' + order_id + '/email').set(email);\n            db.child('/bulk_orders/' + order_id + '/order_id').set(order_id.toString());\n            db.child('/bulk_orders/' + order_id + '/last_status_updated').set('N/A');\n            db.child('/bulk_orders/' + order_id + '/name').set(name);\n            db.child('/bulk_orders/' + order_id + '/phone').set(phone);\n            db.child('/bulk_orders/' + order_id + '/organization').set(organization);\n            db.child('/bulk_orders/' + order_id + '/design').set(design);\n            db.child('/bulk_orders/' + order_id + '/blank').set(blank);\n            db.child('/bulk_orders/' + order_id + '/ship_address').set(ship_address);\n            db.child('/bulk_orders/' + order_id + '/final_total').set(final_total);\n            db.child('/bulk_orders/' + order_id + '/order_quote').set(order_quote);\n            db.child('/bulk_orders/' + order_id + '/team_member').set(team_member);\n            db.child('/bulk_orders/' + order_id + '/quantity').set(quantity);\n            db.child('/bulk_orders/' + order_id + '/tax_exempt').set(tax_exempt);\n          }\n        });\n        this.setState({\n          name: ''\n        });\n        this.setState({\n          email: ''\n        });\n        this.setState({\n          phone: ''\n        });\n        this.setState({\n          organization: ''\n        });\n        this.setState({\n          design: ''\n        });\n        this.setState({\n          blank: ''\n        });\n        this.setState({\n          ship_address: ''\n        });\n        this.setState({\n          address: ''\n        });\n        this.setState({\n          city: ''\n        });\n        this.setState({\n          state: ''\n        });\n        this.setState({\n          postal_code: ''\n        });\n        this.setState({\n          final_total: ''\n        });\n        this.setState({\n          order_quote: ''\n        });\n        this.setState({\n          team_member: ''\n        });\n        this.setState({\n          quantity: ''\n        });\n        this.setState({\n          tax_exempt: ''\n        });\n        this.setState({\n          fullphone: ''\n        });\n        this.setState({\n          fullemail: ''\n        }); //const curr  = await this.resetNewInfo();\n        //console.log('reset info: ', this.state.newfirstname);\n        //document.getElementById(\"form\").reset();\n      } else {\n        this.messages.show({\n          severity: \"error\",\n          summary: \"Invalid or Missing Fields\",\n          detail: 'Please enter all information or \"NA\" if field information is not available'\n        });\n      }\n    }\n    /* --------------- Filters ---------------- */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var customerArray = [];\n      firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          customerArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        customers: customerArray\n      });\n      this.setState({\n        bulk_orders: customerArray\n      });\n      var orderArray = [];\n      firebase.database().ref('/orders').on('value', function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          orderArray.push(childSnapshot.toJSON());\n        });\n      });\n      this.setState({\n        orders: orderArray\n      });\n      var idNum = 0;\n      firebase.database().ref('/idcount').once('value').then(function (snapshot) {\n        _this3.setState({\n          idcount: snapshot.val()\n        });\n\n        console.log('state var idcount: ', _this3.state.idcount);\n        idNum = snapshot.val();\n        console.log('id from firebase: ', snapshot.val());\n      }); //console.log('var idNum: ', idNum);\n\n      this.setState({\n        idcount: idNum\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var header = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 22\n        }\n      });\n      var bulk_order = this.state.selectedOrders; //var history = this.getCustomerHistory(customer)\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        id: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }\n      }, \"Add New Order Inquiry\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }\n      }, \"Use this form to enter all information about a new order or order inquiry\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-fluid p-formgrid p-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }\n      }, \"Name*\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.name,\n        id: \"firstname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onNameValueChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }\n      }, \"Organization\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.organization,\n        id: \"lastname\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onOrganizationValueChange(e.target.value);\n        },\n        placeholder: \"Type Organization or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, \"Blank\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.blank,\n        id: \"blank\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onBlankValueChange(e.target.value);\n        },\n        placeholder: \"Type Blank or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, \"Email*\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.email,\n        id: \"newemail\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onEmailValueChange(e.target.value);\n        },\n        placeholder: \"Required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 25\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.phone,\n        id: \"newphone\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPhoneValueChange(e.target.value);\n        },\n        placeholder: \"###-###-#### or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 25\n        }\n      }, \"Street Address\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newaddress,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onAddressValueChange(e.target.value);\n        },\n        placeholder: \"Type Street Address or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 25\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newcity,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onCityValueChange(e.target.value);\n        },\n        placeholder: \"Type City Name or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newstate,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onStateValueChange(e.target.value);\n        },\n        placeholder: \"Type State or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 25\n        }\n      }, \"Postal Code\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.newpostalcode,\n        id: \"newaddress\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onPostalCodeValueChange(e.target.value);\n        },\n        placeholder: \"Type Postal Code or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 25\n        }\n      }), \"    \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }\n      }, \"Tax-Exempt\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.tax_exempt,\n        options: this.state.planYesNo,\n        onChange: function onChange(e) {\n          _this4.onTaxExemptValueChange(e.target.value);\n        },\n        placeholder: \"Select Yes or No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 25\n        }\n      }, \"Design\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.design,\n        options: this.state.planYesNo,\n        onChange: function onChange(e) {\n          _this4.onDesignValueChange(e.target.value);\n        },\n        placeholder: \"Select Yes or No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstnames6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }\n      }, \"Assigned Ink Tank Team Member\"), /*#__PURE__*/React.createElement(Dropdown, {\n        value: this.state.team_member,\n        options: this.state.planTeamMember,\n        onChange: function onChange(e) {\n          _this4.onTeamMemberValueChange(e.target.value);\n        },\n        placeholder: \"Select Team Member\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 25\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.quantity,\n        id: \"quantity\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onQuantityValueChange(e.target.value);\n        },\n        placeholder: \"Type Quantity or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"lastname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 25\n        }\n      }, \"Order Quote\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.order_quote,\n        id: \"order_quote\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onOrderQuoteValueChange(e.target.value);\n        },\n        placeholder: \"Type Order Quote or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12 p-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"firstname6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }\n      }, \"Final Total\"), /*#__PURE__*/React.createElement(InputText, {\n        value: this.state.final_total,\n        id: \"final_total\",\n        type: \"text\",\n        onChange: function onChange(e) {\n          _this4.onFinalTotalValueChange(e.target.value);\n        },\n        placeholder: \"Type Final Total or \\\"NA\\\"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        style: {\n          color: 'white',\n          backgroundColor: '#6a09a4',\n          borderColor: '#6a09a4',\n          marginTop: 30\n        },\n        label: \"ADD ORDER\",\n        onClick: function onClick() {\n          _this4.addBulkOrder();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-field p-col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        ref: function ref(el) {\n          return _this4.messages = el;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return AddOrders;\n}(Component);","map":{"version":3,"sources":["/Users/stephenie/Documents/GitHub/ink-tank-bulk-orders/src/components/AddOrders.js"],"names":["React","Component","Button","Dropdown","DataTable","Column","Chart","InputText","Editor","InputTextarea","Messages","Message","firebase","validator","customerData","AddOrders","state","customers","orders","bulk_orders","selectedCustomer","selectedOrders","editing","idcount","name","team_member","blank","design","organization","tax_exempt","quantity","order_quote","final_total","phone","fullphone","email","fullemail","newaddress","address","newcity","city","newstate","newpostalcode","postal_code","ship_address","planSelectYear","label","value","planTeamMember","planSelectStatus","planYesNo","edit","bind","onTeamMemberValueChange","resetNewInfo","addBulkOrder","padId","idNum","digitLength","toString","length","result","setState","toUpperCase","includes","order_id","messages","show","severity","summary","detail","db","database","ref","child","set","once","then","snapshot","val","console","log","customerArray","on","forEach","childSnapshot","push","toJSON","orderArray","header","textAlign","bulk_order","e","onNameValueChange","target","onOrganizationValueChange","onBlankValueChange","onEmailValueChange","onPhoneValueChange","onAddressValueChange","onCityValueChange","onStateValueChange","onPostalCodeValueChange","onTaxExemptValueChange","onDesignValueChange","onQuantityValueChange","onOrderQuoteValueChange","onFinalTotalValueChange","color","backgroundColor","borderColor","marginTop","el"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column'\nimport { Chart } from 'primereact/chart'\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport validator from 'validator'\n\n\nimport customerData from '../customers.json';\n// import classNames from 'classnames';\n\nimport '../Dashboard.css';\n//import { arrayToHash } from '@fullcalendar/core/util/object';\n\n\nexport class AddOrders extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            customers: [],\n            orders: [],\n            bulk_orders: [],\n            selectedCustomer: null,\n            selectedOrders: null,\n            editing: false,\n            idcount: null,\n            name: '',\n            team_member: '',\n            blank: '',\n            design: '',\n            organization: '',\n            tax_exempt: '',\n            quantity: '',\n            order_quote: '',\n            final_total: '',\n            phone: '',\n            fullphone: '',\n            email: '',\n            fullemail: '',\n            newaddress: '',\n            address: '',\n            newcity: '',\n            city: '',\n            newstate: '',\n            state: '',\n            newpostalcode: '',\n            postal_code: '',\n            ship_address: '',\n            planSelectYear: [\n                { label: '2020-2021', value: '2020-2021' },\n                { label: '2021-2022', value: '2021-2022' },\n                { label: '2022-2023', value: '2022-2023' },\n                { label: '2023-2024', value: '2023-2024' }\n            ],\n            planTeamMember: [\n                { label: 'Caden Gaviria', value: 'Caden Gaviria' },\n                { label: 'Philippe Manzone', value: 'Philippe Manzone' },\n                { label: 'Alec Aragon', value: 'Alec Aragon' },\n                { label: 'Shannon Groves', value: 'Shannon Groves' },\n                { label: 'Ali Kilic', value: 'Ali Kilic' },\n                { label: 'Kethan Bajaj', value: 'Kethan Bajaj' }\n            ],\n            planSelectStatus: [\n                { label: 'Confirmed', value: 'confirmed' },\n                { label: 'In Production', value: 'in production' },\n                { label: 'Invoiced', value: 'invoiced' },\n                { label: 'Fulfilled', value: 'fulfilled' },\n                { label: 'Shipped', value: 'Shipped' },\n                { label: 'Quote', value: 'quote' }\n            ],\n            planYesNo: [\n                { label: 'Yes', value: 'Yes' },\n                { label: 'No', value: 'No' }\n            ]\n\n        };\n        this.edit = this.edit.bind(this);\n        this.onTeamMemberValueChange = this.onTeamMemberValueChange.bind(this)\n        this.resetNewInfo = this.resetNewInfo.bind(this)\n        this.addBulkOrder = this.addBulkOrder.bind(this)\n        this.padId = this.padId.bind(this)\n    }\n\n\n    padId(idNum) {\n        var digitLength = (idNum.toString()).length;\n        if (digitLength === 1) {\n            var result = '0000' + idNum;\n        }\n        else if (digitLength === 2) {\n            var result = '000' + idNum;\n        }\n        else if (digitLength === 3) {\n            var result = '00' + idNum;\n        }\n        else if (digitLength === 4) {\n            var result = '0' + idNum;\n        }\n        else if (digitLength === 5) {\n            var result = idNum.toString();\n        }\n        return result;\n\n    }\n    edit() {\n        this.setState({ editing: true });\n        //this.resetNewInfo();\n    }\n    /*\n        save(bulk_order) {\n            this.setState({ editing: false });\n            //console.log(this.state.newplan)\n            let allbulkorders = [...this.state.bulk_orders];\n            let newbulkorder = { ...this.state.selectedOrders };\n    \n            if (this.state.newaddress && this.state.newcity && this.state.newstate && this.state.newpostalcode) {\n                newbulkorder.ship_address = this.state.newaddress + this.state.newcity + ', ' + this.state.newstate + this.state.newpostalcode;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/ship_address').set(newbulkorder.ship_address);\n            }\n    \n            if (this.state.blank) {\n                newbulkorder.blank = this.state.blank;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/blank').set(newbulkorder.blank);\n            }\n            if (this.state.quantity) {\n                newbulkorder.quantity = this.state.quantity;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/quantity').set(newbulkorder.quantity);\n            }\n            if (this.state.phone) {\n                newbulkorder.phone = this.state.phone;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/phone').set(newbulkorder.phone);\n            }\n            if (this.state.email) {\n                newbulkorder.email = this.state.email;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/email').set(newbulkorder.email)\n            }\n            if (this.state.organization) {\n                newbulkorder.organization = this.state.organization;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/organization').set(newbulkorder.organization)\n            }\n            if (this.state.order_quote) {\n                newbulkorder.order_quote = this.state.order_quote;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/order_quote').set(newbulkorder.order_quote)\n            }\n            if (this.state.final_total) {\n                newbulkorder.final_total = this.state.final_total;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/final_total').set(newbulkorder.final_total)\n            }\n            if (this.state.tax_exempt) {\n                newbulkorder.tax_exempt = this.state.tax_exempt;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/tax_exempt').set(newbulkorder.tax_exempt)\n            }\n            if (this.state.team_member) {\n                newbulkorder.order_quote = this.state.team_member;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/team_member').set(newbulkorder.team_member)\n            }\n            if (this.state.design) {\n                newbulkorder.design = this.state.design;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/design').set(newbulkorder.design)\n            }\n            if (this.state.name) {\n                newbulkorder.name = this.state.name;\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/name').set(newbulkorder.name)\n                firebase.database().ref('/bulk_orders/' + bulk_order.order_id + '/status').set('invoiced')\n            }\n    \n            let count = 0;\n            let individual = null;\n            allbulkorders.map(each => {\n                if (newbulkorder.order_id == each.order_id) {\n                    individual = { ...allbulkorders[count] };\n                    individual = newbulkorder;\n                    allbulkorders[count] = individual;\n                }\n                count = count + 1\n            })\n            this.setState({ bulk_orders: allbulkorders });\n            this.setState({ selectedOrders: newbulkorder });\n    \n        }\n    */\n    //CUSTOMER INFORMATION EDITING\n    onNameValueChange(value) {\n        //console.log('new first name: ', value)\n        this.setState({ name: value });\n\n    }\n\n    onTeamMemberValueChange(value) {\n        //console.log('newPlanYear: ', value)\n        this.setState({ team_member: value });\n    }\n    onBlankValueChange(value) {\n        //console.log('newPlanQuarter: ', value)\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ blank: \"NA\" });\n        }\n        else {\n            this.setState({ blank: value });\n        }\n    }\n    onDesignValueChange(value) {\n        this.setState({ design: value });\n    }\n    onOrganizationValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ organization: \"NA\" });\n        }\n        else {\n            this.setState({ organization: value })\n        }\n    }\n    onTaxExemptValueChange(value) {\n        this.setState({ tax_exempt: value });\n    }\n    onQuantityValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ quantity: \"NA\" })\n        }\n        else {\n            this.setState({ quantity: value });\n        }\n    }\n    onOrderQuoteValueChange(value) {\n        //try, execept \n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ order_quote: \"NA\" })\n        }\n        else {\n            this.setState({ order_quote: value });\n        }\n    }\n    onFinalTotalValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ final_total: \"NA\" })\n        }\n        else {\n            this.setState({ final_total: value });\n        }\n    }\n    onPhoneValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ fullphone: \"NA\" })\n            this.setState({ phone: \"NA\" })\n        } else if (value[3] === '-' && value[7] === '-' && value.length === 12) {\n            this.setState({ fullphone: value })\n        }\n        else {\n            this.setState({ phone: value })\n        }\n        //this.setState({ phone: value });\n        // if value == NA: set to NA; conver to uppercase\n        // else; cast as float\n\n    }\n    onEmailValueChange(value) {\n        if (value.includes('@') && value.includes('.')) {\n            this.setState({ fullemail: value });\n        }\n        this.setState({ email: value });\n\n    }\n    onAddressValueChange(value) {\n        if ((value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\")) {\n            this.setState({ newaddress: \"NA\" })\n        }\n        else {\n            this.setState({ newaddress: value });\n        }\n    }\n    onCityValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ newcity: \"NA\" })\n        }\n        else {\n            this.setState({ newcity: value });\n        }\n    }\n    onStateValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ newstate: \"NA\" })\n        }\n        else {\n            this.setState({ newstate: value });\n        }\n    }\n    onPostalCodeValueChange(value) {\n        if (value.toUpperCase() === \"NA\" || value.toUpperCase() === \"N/A\") {\n            this.setState({ newpostalcode: \"NA\" });\n        }\n        else {\n            this.setState({ newpostalcode: value })\n        }\n    }\n    resetNewInfo() {\n        this.setState({ name: '' });\n        this.setState({ team_member: '' });\n        this.setState({ blank: '' });\n        this.setState({ design: '' });\n        this.setState({ organization: '' });\n        this.setState({ tax_exempt: '' });\n        this.setState({ quantity: '' });\n        this.setState({ order_quote: '' });\n        this.setState({ final_total: '' });\n        this.setState({ phone: '' });\n        this.setState({ email: '' });\n        this.setState({ newaddress: '' });\n        this.setState({ newstate: '' });\n        this.setState({ newcity: '' });\n        this.setState({ newpostalcode: '' });\n    }\n\n    addBulkOrder() {\n        //console.log('new first name: ', this.state.newfirstname);\n        //console.log('new last name: ', this.state.newlastname);\n        // console.log('new plan year: ', this.state.newplanyear);\n        // console.log('new plan quarter: ', this.state.newplanquarter);\n        // console.log('new max weight: ', this.state.newmax);\n        // console.log('new res hall: ', this.state.newreshall);\n        // console.log('new phone: ', this.state.newphone);\n        // console.log('new email: ', this.state.newemail);\n        //this.setState({idcount: this.state.idcount+1});\n        //console.log('updated id Count', this.state.idcount);\n\n        if (this.state.name !== '' && this.state.organization !== '' && this.state.fullemail !== '' && this.state.fullphone !== '' && this.state.blank !== '' && this.state.design !== '' && this.state.team_member !== null && this.state.tax_exempt !== null && this.state.quantity !== null && this.state.order_quote !== null && this.state.final_total !== null) {\n\n            var idNum = this.padId(this.state.idcount);\n            // var id = this.state.newfirstname.substring(0,1).toLowerCase() +this.state.newlastname.substring(0,1).toLowerCase()+idNum;\n            var order_id = this.state.idcount;\n            //console.log('NEW ID: ', order_id);\n            this.messages.show({ severity: 'success', summary: 'Success', detail: 'Order Added!' });\n            const db = firebase.database().ref()\n            //updating order_id count in firebase and then updating state variable\n            db.child('/idcount').set(this.state.idcount + 1);\n            db.child('/idcount').once('value')\n                .then(snapshot => {\n                    this.setState({ idcount: snapshot.val() })\n                    console.log('state var idcount: ', this.state.idcount);\n                    //idNum = snapshot.val();\n                    console.log('id from firebase: ', snapshot.val());\n                });\n\n            const name = this.state.name;\n            const phone = this.state.fullphone;\n            const email = this.state.fullemail;\n            const organization = this.state.organization\n            const design = this.state.design\n            const blank = this.state.blank\n            const quantity = this.state.quantity\n            const ship_address = this.state.newaddress + ' ' + this.state.newcity + ' ' + this.state.newstate + ' ' + this.state.newpostalcode\n            const final_total = this.state.final_total\n            const order_quote = this.state.order_quote\n            const team_member = this.state.team_member\n            const tax_exempt = this.state.tax_exempt\n            db.child('/bulk_orders/' + order_id).once(\"value\")\n                .then(snapshot => {\n                    if (!snapshot.val()) {\n                        db.child('/bulk_orders/' + order_id + '/active').set(\"Yes\");\n                        db.child('/bulk_orders/' + order_id + '/status').set(\"invoiced\");\n                        db.child('/bulk_orders/' + order_id + '/email').set(email);\n                        db.child('/bulk_orders/' + order_id + '/order_id').set(order_id.toString());\n                        db.child('/bulk_orders/' + order_id + '/last_status_updated').set('N/A');\n                        db.child('/bulk_orders/' + order_id + '/name').set(name);\n                        db.child('/bulk_orders/' + order_id + '/phone').set(phone);\n                        db.child('/bulk_orders/' + order_id + '/organization').set(organization);\n                        db.child('/bulk_orders/' + order_id + '/design').set(design);\n                        db.child('/bulk_orders/' + order_id + '/blank').set(blank);\n                        db.child('/bulk_orders/' + order_id + '/ship_address').set(ship_address);\n                        db.child('/bulk_orders/' + order_id + '/final_total').set(final_total);\n                        db.child('/bulk_orders/' + order_id + '/order_quote').set(order_quote);\n                        db.child('/bulk_orders/' + order_id + '/team_member').set(team_member);\n                        db.child('/bulk_orders/' + order_id + '/quantity').set(quantity);\n                        db.child('/bulk_orders/' + order_id + '/tax_exempt').set(tax_exempt);\n\n                    }\n                })\n            this.setState({ name: '' });\n            this.setState({ email: '' });\n            this.setState({ phone: '' });\n            this.setState({ organization: '' });\n            this.setState({ design: '' });\n            this.setState({ blank: '' });\n            this.setState({ ship_address: '' });\n            this.setState({ address: '' });\n            this.setState({ city: '' });\n            this.setState({ state: '' });\n            this.setState({ postal_code: '' });\n            this.setState({ final_total: '' });\n            this.setState({ order_quote: '' });\n            this.setState({ team_member: '' });\n            this.setState({ quantity: '' });\n            this.setState({ tax_exempt: '' });\n            this.setState({ fullphone: '' });\n            this.setState({ fullemail: '' });\n            //const curr  = await this.resetNewInfo();\n\n            //console.log('reset info: ', this.state.newfirstname);\n            //document.getElementById(\"form\").reset();\n        }\n        else {\n            this.messages.show({ severity: \"error\", summary: \"Invalid or Missing Fields\", detail: 'Please enter all information or \"NA\" if field information is not available' });\n        }\n\n    }\n\n    /* --------------- Filters ---------------- */\n    componentDidMount() {\n        const customerArray = [];\n        firebase.database().ref('/bulk_orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                customerArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ customers: customerArray });\n        this.setState({ bulk_orders: customerArray });\n        const orderArray = [];\n        firebase.database().ref('/orders').on('value', function (snapshot) {\n            snapshot.forEach(function (childSnapshot) {\n                orderArray.push(childSnapshot.toJSON());\n            });\n        });\n        this.setState({ orders: orderArray });\n        var idNum = 0;\n        firebase.database().ref('/idcount').once('value')\n            .then(snapshot => {\n                this.setState({ idcount: snapshot.val() })\n                console.log('state var idcount: ', this.state.idcount);\n                idNum = snapshot.val();\n                console.log('id from firebase: ', snapshot.val());\n            });\n        //console.log('var idNum: ', idNum);\n        this.setState({ idcount: idNum });\n    }\n\n    render() {\n        var header = <div style={{ textAlign: 'left' }}></div>\n        var bulk_order = this.state.selectedOrders\n        //var history = this.getCustomerHistory(customer)\n\n        return (\n            <div className=\"card\" id=\"form\">\n                <h1>Add New Order Inquiry</h1>\n                <p>Use this form to enter all information about a new order or order inquiry</p>\n\n                <div className=\"p-fluid p-formgrid p-grid\">\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Name*</label>\n                        <InputText value={this.state.name} id=\"firstname\" type=\"text\" onChange={(e) => { this.onNameValueChange(e.target.value); }} />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Organization</label>\n                        <InputText value={this.state.organization} id=\"lastname\" type=\"text\" onChange={(e) => { this.onOrganizationValueChange(e.target.value); }} placeholder='Type Organization or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Blank</label>\n                        <InputText value={this.state.blank} id=\"blank\" type=\"text\" onChange={(e) => { this.onBlankValueChange(e.target.value); }} placeholder='Type Blank or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-6\">\n                        <label htmlFor=\"firstname6\">Email*</label>\n                        <InputText value={this.state.email} id=\"newemail\" type=\"text\" onChange={(e) => { this.onEmailValueChange(e.target.value); }} placeholder='Required'/>\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-6\">\n                        <label htmlFor=\"firstname6\">Phone</label>\n                        <InputText value={this.state.phone} id=\"newphone\" type=\"text\" onChange={(e) => { this.onPhoneValueChange(e.target.value); }} placeholder='###-###-#### or \"NA\"' />\n                    </div>\n\n\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"address\">Street Address</label>\n                        <InputText value={this.state.newaddress} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onAddressValueChange(e.target.value); }} placeholder='Type Street Address or \"NA\"' />\n\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"lastname6\">City</label>\n                        <InputText value={this.state.newcity} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onCityValueChange(e.target.value); }} placeholder='Type City Name or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"city\">State</label>\n                        <InputText value={this.state.newstate} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onStateValueChange(e.target.value); }} placeholder='Type State or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-3\">\n                        <label htmlFor=\"state\">Postal Code</label>\n                        <InputText value={this.state.newpostalcode} id=\"newaddress\" type=\"text\" onChange={(e) => { this.onPostalCodeValueChange(e.target.value); }} placeholder='Type Postal Code or \"NA\"' />    </div>\n\n\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Tax-Exempt</label>\n                        <Dropdown value={this.state.tax_exempt} options={this.state.planYesNo} onChange={(e) => { this.onTaxExemptValueChange(e.target.value); }} placeholder='Select Yes or No' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Design</label>\n                        <Dropdown value={this.state.design} options={this.state.planYesNo} onChange={(e) => { this.onDesignValueChange(e.target.value); }} placeholder='Select Yes or No' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstnames6\">Assigned Ink Tank Team Member</label>\n                        <Dropdown value={this.state.team_member} options={this.state.planTeamMember} onChange={(e) => { this.onTeamMemberValueChange(e.target.value); }} placeholder='Select Team Member' />\n\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Quantity</label>\n                        <InputText value={this.state.quantity} id=\"quantity\" type=\"text\" onChange={(e) => { this.onQuantityValueChange(e.target.value); }} placeholder='Type Quantity or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"lastname6\">Order Quote</label>\n                        <InputText value={this.state.order_quote} id=\"order_quote\" type=\"text\" onChange={(e) => { this.onOrderQuoteValueChange(e.target.value); }} placeholder='Type Order Quote or \"NA\"' />\n                    </div>\n                    <div className=\"p-field p-col-12 p-md-4\">\n                        <label htmlFor=\"firstname6\">Final Total</label>\n                        <InputText value={this.state.final_total} id=\"final_total\" type=\"text\" onChange={(e) => { this.onFinalTotalValueChange(e.target.value); }} placeholder='Type Final Total or \"NA\"' />\n                    </div>\n\n\n                    <div className=\"p-field p-col-12\">\n                        <Button type=\"button\" style={{ color: 'white', backgroundColor: '#6a09a4', borderColor: '#6a09a4', marginTop: 30 }} label=\"ADD ORDER\" onClick={() => { this.addBulkOrder() }} />\n                    </div>\n                    <div className=\"p-field p-col-12\">\n                        <Messages ref={(el) => this.messages = el}></Messages>\n                    </div>\n\n\n                </div>\n            </div>\n        );\n\n\n\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}