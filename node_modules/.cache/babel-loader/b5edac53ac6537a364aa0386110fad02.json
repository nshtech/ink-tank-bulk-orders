{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SplitButton = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Button = require(\"../button/Button\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _DomHandler = _interopRequireDefault(require(\"../utils/DomHandler\"));\n\nvar _SplitButtonItem = require(\"./SplitButtonItem\");\n\nvar _SplitButtonPanel = require(\"./SplitButtonPanel\");\n\nvar _Tooltip = _interopRequireDefault(require(\"../tooltip/Tooltip\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SplitButton = /*#__PURE__*/function (_Component) {\n  _inherits(SplitButton, _Component);\n\n  function SplitButton(props) {\n    var _this;\n\n    _classCallCheck(this, SplitButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SplitButton).call(this, props));\n    _this.onDropdownButtonClick = _this.onDropdownButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SplitButton, [{\n    key: \"onDropdownButtonClick\",\n    value: function onDropdownButtonClick(event) {\n      if (this.documentClickListener) {\n        this.dropdownClick = true;\n      }\n\n      if (this.panel.element.offsetParent) this.hide();else this.show();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      this.panel.element.style.zIndex = String(_DomHandler.default.generateZIndex());\n      this.panel.element.style.display = 'block';\n      setTimeout(function () {\n        _DomHandler.default.addClass(_this2.panel.element, 'p-menu-overlay-visible');\n\n        _DomHandler.default.removeClass(_this2.panel.element, 'p-menu-overlay-hidden');\n      }, 1);\n      this.alignPanel();\n      this.bindDocumentListener();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this3 = this;\n\n      if (this.panel && this.panel.element) {\n        _DomHandler.default.addClass(this.panel.element, 'p-menu-overlay-hidden');\n\n        _DomHandler.default.removeClass(this.panel.element, 'p-menu-overlay-visible');\n\n        setTimeout(function () {\n          if (_this3.panel && _this3.panel.element) {\n            _this3.panel.element.style.display = 'none';\n\n            _DomHandler.default.removeClass(_this3.panel.element, 'p-menu-overlay-hidden');\n          }\n        }, 150);\n      }\n\n      this.unbindDocumentListener();\n      this.dropdownClick = false;\n    }\n  }, {\n    key: \"alignPanel\",\n    value: function alignPanel() {\n      if (this.props.appendTo) {\n        this.panel.element.style.minWidth = _DomHandler.default.getWidth(this.container) + 'px';\n\n        _DomHandler.default.absolutePosition(this.panel.element, this.container);\n      } else {\n        _DomHandler.default.relativePosition(this.panel.element, this.container);\n      }\n    }\n  }, {\n    key: \"bindDocumentListener\",\n    value: function bindDocumentListener() {\n      var _this4 = this;\n\n      if (!this.documentClickListener) {\n        this.documentClickListener = function () {\n          if (_this4.dropdownClick) _this4.dropdownClick = false;else _this4.hide();\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentListener\",\n    value: function unbindDocumentListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.tooltip) {\n        this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.tooltip && prevProps.tooltip !== this.props.tooltip) {\n        if (this.tooltip) this.tooltip.updateContent(this.props.tooltip);else this.renderTooltip();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocumentListener();\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n    }\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip() {\n      this.tooltip = new _Tooltip.default({\n        target: this.container,\n        content: this.props.tooltip,\n        options: this.props.tooltipOptions\n      });\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      if (this.props.model) {\n        return this.props.model.map(function (menuitem, index) {\n          return _react.default.createElement(_SplitButtonItem.SplitButtonItem, {\n            menuitem: menuitem,\n            key: index\n          });\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var className = (0, _classnames.default)('p-splitbutton p-buttonset p-component', this.props.className, {\n        'p-disabled': this.props.disabled\n      });\n      var items = this.renderItems();\n      return _react.default.createElement(\"div\", {\n        id: this.props.id,\n        className: className,\n        style: this.props.style,\n        ref: function ref(el) {\n          return _this5.container = el;\n        }\n      }, _react.default.createElement(_Button.Button, {\n        type: \"button\",\n        icon: this.props.icon,\n        label: this.props.label,\n        onClick: this.props.onClick,\n        disabled: this.props.disabled,\n        tabIndex: this.props.tabIndex\n      }), _react.default.createElement(_Button.Button, {\n        type: \"button\",\n        className: \"p-splitbutton-menubutton\",\n        icon: \"pi pi-caret-down\",\n        onClick: this.onDropdownButtonClick,\n        disabled: this.props.disabled\n      }), _react.default.createElement(_SplitButtonPanel.SplitButtonPanel, {\n        ref: function ref(el) {\n          return _this5.panel = el;\n        },\n        appendTo: this.props.appendTo,\n        menuStyle: this.props.menuStyle,\n        menuClassName: this.props.menuClassName\n      }, items));\n    }\n  }]);\n\n  return SplitButton;\n}(_react.Component);\n\nexports.SplitButton = SplitButton;\n\n_defineProperty(SplitButton, \"defaultProps\", {\n  id: null,\n  label: null,\n  icon: null,\n  model: null,\n  disabled: null,\n  style: null,\n  className: null,\n  menuStyle: null,\n  menuClassName: null,\n  tabIndex: null,\n  onClick: null,\n  appendTo: null,\n  tooltip: null,\n  tooltipOptions: null\n});\n\n_defineProperty(SplitButton, \"propTypes\", {\n  id: _propTypes.default.string,\n  label: _propTypes.default.string,\n  icon: _propTypes.default.string,\n  model: _propTypes.default.array,\n  disabled: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  className: _propTypes.default.string,\n  menustyle: _propTypes.default.object,\n  menuClassName: _propTypes.default.string,\n  tabIndex: _propTypes.default.string,\n  onClick: _propTypes.default.func,\n  appendTo: _propTypes.default.object,\n  tooltip: _propTypes.default.string,\n  tooltipOptions: _propTypes.default.object\n});","map":null,"metadata":{},"sourceType":"script"}